<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.3 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>

<rfc ipr="trust200902" docName="draft-backman-secevent-token-02" category="std">

  <front>
    <title abbrev="secevent-token">Security Event Token (SET)</title>

    <author initials="A." surname="Backman" fullname="Annabelle Backman">
      <organization>Amazon</organization>
      <address>
        <email>richanna@amazon.com</email>
      </address>
    </author>
    <author initials="W." surname="Denniss" fullname="William Denniss">
      <organization>Google</organization>
      <address>
        <email>wdenniss@google.com</email>
      </address>
    </author>
    <author initials="M." surname="Ansari" fullname="Morteza Ansari">
      <organization>Cisco</organization>
      <address>
        <email>morteza.ansari@cisco.com</email>
      </address>
    </author>
    <author initials="M." surname="Jones" fullname="Michael B. Jones">
      <organization>Microsoft</organization>
      <address>
        <email>mbj@microsoft.com</email>
        <uri>http://self-issued.info/</uri>
      </address>
    </author>

    <date year="2017" month="November" day="29"/>

    <area>Security</area>
    <workgroup>secevent</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This specification defines the Security Event Token, which may be
distributed via a protocol such as HTTP.  The Security Event Token
(SET) specification profiles the JSON Web Token (JWT), which can be
optionally signed and/or encrypted.  A SET describes a statement of
fact from the perspective of an issuer that it intends to share with
one or more receivers.</t>



    </abstract>


  </front>

  <middle>


<section anchor="intro" title="Introduction">
<t>This specification defines an extensible Security Event Token (SET)
format which may be exchanged using protocols such as HTTP.  The
specification builds on the JSON Web Token (JWT) format <xref target="RFC7519"></xref> in
order to provide a self-contained token that can be optionally signed
using JSON Web Signature (JWS) <xref target="RFC7515"></xref> and/or encrypted using JSON
Web Encryption (JWE) <xref target="RFC7516"></xref>.</t>

<t>This specification profiles the use of JWT for the purpose of issuing
security event tokens (SETs).  This specification defines a base
format upon which profiling specifications define actual events and
their meanings.  Unless otherwise specified, this specification uses
non-normative example events intended to demonstrate how events may
be constructed.</t>

<t>This specification is scoped to security and identity related events.
While security event tokens may be used for other purposes, the
specification only considers security and privacy concerns relevant
to identity and personal information.</t>

<t>Security Events are not commands issued between parties.  A security
event is a statement of fact from the perspective of an issuer about
the state of a security subject (e.g., a web resource, token, IP
address, the issuer itself) that the issuer controls or is aware of,
that has changed in some way (explicitly or implicitly).  A security
subject MAY be permanent (e.g., a user account) or temporary (e.g.,
an HTTP session) in nature.  A state change could describe a direct
change of entity state, an implicit change of state or other higher-
level security statements such as:</t>

<t><list style="symbols">
  <t>The creation, modification, removal of a resource.</t>
  <t>The resetting or suspension of an account.</t>
  <t>The revocation of a security token prior to its expiry.</t>
  <t>The logout of a user session.  Or,</t>
  <t>A cumulative conclusion such as to indicate that a user has taken
over an email identifier that may have been used in the past by
another user.</t>
</list></t>

<t>While subject state changes are often triggered by a user-agent or
security-subsystem, the issuance and transmission of an event often
occurs asynchronously and in a back-channel to the action which
caused the change that generated the security event.  Subsequently,
an Event Receiver, having received a SET, validates and interprets
the received SET and takes its own independent actions, if any.  For
example, having been informed of a personal identifier being
associated with a different security subject (e.g., an email address
is being used by someone else), the Event Receiver may choose to
ensure that the new user is not granted access to resources
associated with the previous user.  Or, the Event Receiver may not
have any relationship with the subject, and no action is taken.</t>

<t>While Event Receivers will often take actions upon receiving SETs,
security events cannot be assumed to be commands or requests.  The
intent of this specification is to define a way of exchanging
statements of fact that Event Receivers may interpret for their own
purposes.  As such, SETs have no capability for error signaling other
to ensure the validation of a received SET.</t>

<section anchor="conv" title="Notational Conventions">
<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”,
“SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and
“OPTIONAL” in this document are to be interpreted as described in
<xref target="RFC2119"></xref>.  These keywords are capitalized when used to unambiguously
specify requirements of the protocol or application features and
behavior that affect the inter-operability and security of
implementations.  When these words are not capitalized, they are
meant in their natural-language sense.</t>

<t>For purposes of readability, examples are not URL encoded.
Implementers MUST percent encode URLs as described in Section 2.1 of
<xref target="RFC3986"></xref>.</t>

<t>Throughout this document, all figures MAY contain spaces and extra
line-wrapping for readability and space limitations.  Similarly, some
URIs contained within examples have been shortened for space and
readability reasons.</t>

</section>
<section anchor="defn" title="Definitions">
<t>The following definitions are used with SETs:</t>

<t><list style="hanging">
  <t hangText='Security Event Token (SET)'><vspace blankLines='0'/>
  A SET is a JWT <xref target="RFC7519"></xref> that contains an event payload describing
a security event.</t>
  <t hangText='Event Transmitter'><vspace blankLines='0'/>
  A service provider that delivers SETs to other providers known as
Event Receivers.</t>
  <t hangText='Event Receiver'><vspace blankLines='0'/>
  An Event Receiver is an entity that receives SETs through some
distribution method.  An Event Receiver is the same entity
referred as “recipient” or “receiver” in and related
specifications.  <xref target="RFC7519"></xref></t>
  <t hangText='Subject'><vspace blankLines='0'/>
  A SET describes an event or state change that has occurred about a
Subject.  A Subject may be a principal (e.g., Section 4.1.2
<xref target="RFC7519"></xref>), a web resource, an entity such as an IP address, or
the issuer itself that a SET might reference.</t>
  <t hangText='Profiling Specification'><vspace blankLines='0'/>
  A specification that uses the SET Token specification to define one or
more event types and the associated claims included.</t>
</list></t>

</section>
</section>
<section anchor="set" title="The Security Event Token (SET)">
<t>A SET is a data structure that encodes an “event payload” describing a
security event, wrapped in an “envelope” providing metadata and context
for the security event.  The SET envelope is a JWT Claims Set as defined in
<xref target="RFC7519"></xref>, consisting of a JSON object containing a set of claims.  The
event payload is a JSON object contained within the SET envelope, itself
containing claims that express information about the event, e.g. the type
of event, the subject of the event, and other information defined in a
Profiling Specification.</t>

<t>This specification defines a core set of claims for use in SET envelopes
and event payloads, however Profiling Specifications MAY define additional
claims of both types.  It is RECOMMENDED that Profiling Specifications
define claims to be used in the event payload rather than the envelope.  If
a Profiling Specification does define envelope claims, those claims SHOULD
be registered in the JWT Token Claims Registry <xref target="IANA.JWT.Claims"></xref> or have
Public Claim Names as defined in Section 4.2 of <xref target="RFC7519"></xref>.</t>

<section anchor="claims" title="SET Claims">
<t>This specification profiles the following claims defined in <xref target="RFC7519"></xref> for
use in the SET envelope:</t>

<t><list style="hanging">
  <t hangText='iss'><vspace blankLines='0'/>
  A case-sensitive string identifying the principal that issued the SET,
as defined by Section 4.1.1 of <xref target="RFC7519"></xref>.  This claim is REQUIRED.</t>
  <t hangText='aud'><vspace blankLines='0'/>
  A case-sensitive string or array of case-sensitive strings identifying
the audience for the SET, as defined by Section 4.1.3 of <xref target="RFC7519"></xref>.  This
claim is RECOMMENDED.</t>
  <t hangText='exp'><vspace blankLines='0'/>
  As defined by Section 4.1.4 of <xref target="RFC7519"></xref>, this claim is the time after
which the JWT MUST NOT be accepted for processing.  In the context of a SET
however, this notion does not apply since a SET reflects something that
has already been processed and is historical in nature.  Use of this claim
is NOT RECOMMENDED.</t>
  <t hangText='iat'><vspace blankLines='0'/>
  A value identifying the time at which the SET was issued, as defined by
Section 4.1.6 of <xref target="RFC7519"></xref>.  Since SETs typically describe events that have
already occurred, this is likely to be different from the value stored in
the “event_time” payload claim (see below).  This claim is REQUIRED.</t>
  <t hangText='jti'><vspace blankLines='0'/>
  A unique identifier for an event, as defined by Section 4.1.7 of
<xref target="RFC7519"></xref>.  This claim is REQUIRED.</t>
</list></t>

<t>This specification defines the following new claims for use in the SET
envelope:</t>

<t><list style="hanging">
  <t hangText='event'><vspace blankLines='0'/>
  A JSON object known as the “event payload”, whose contents identify the
type of event contained within the SET and contain additional information 
defined as part of an event type definition in a Profiling Specification.</t>
</list></t>

<t>This specification defines the following claims for use in event payloads:</t>

<t><list style="hanging">
  <t hangText='event_type'><vspace blankLines='0'/>
  A string containing a URI that uniquely identifies an event type
defined by a Profiling Specification.  This claim is REQUIRED.</t>
  <t hangText='event_id'><vspace blankLines='0'/>
  A string that identifies a specific “real world” event or state change
to which this event is related. Recipients MAY use this claim to correlate
events across different SETs received at different times and/or by different
systems. The value of this claim MUST be unique with respect to the
transmitter to a specific “real world” event or state change, however
recipients MUST NOT interpret a difference in “event_id” values as a
guarantee that two events are not related.  This claim is OPTIONAL.</t>
  <t hangText='event_subject'><vspace blankLines='0'/>
  A Subject Identifier that identifies the subject of the event.  (See:
  <xref target="subject"></xref>) This claim is RECOMMENDED. Profiling Specifications MAY use
  the JWT “sub” claim to identify the subject, in order to be compatible 
  with one or more other specifications (e.g. <xref target="OpenID.Core"></xref>).  Profiling Specifications
  that do so MUST reference the document that defines the semantics for the
  “sub” claim that the Profiling Specification is following, and MUST omit
  the “event_subject” payload claim.</t>
  <t hangText='event_time'><vspace blankLines='0'/>
  A number identifying the date and time at which the event is believed to
have occurred or will occur in the future.  Its value MUST take the form
of a NumericDate value, as defined in Section 2 of <xref target="RFC7519"></xref>.  This claim
is OPTIONAL, however if it is not present then the recipient MUST
interpret that to mean that no event time is being asserted, either
because there is no specific event time, the transmitter does not wish to
share it, or the transmitter does not know its value.</t>
</list></t>

<t>Both the SET envelope and event payload MAY contain additional claims, such
as those defined in a Profiling Specification.  The format and meaning of
these claims is out of scope of this specification.  Implementations SHOULD
ignore any claims in the SET envelope or event payload that they do not
understand.</t>

<t>The following is a non-normative example showing a SET envelope expressing
a hypothetical event with two additional claims in the event payload:</t>

<figure title="Example SET With Event Claims In Payload" anchor="figset"><artwork><![CDATA[
{
  "jti": "3d0c3cf797584bd193bd0fb1bd4e7d30",
  "iss": "https://transmitter.example.com",
  "aud": [ "https://receiver.example.com" ],
  "iat": 1458496025,
  "event": {
    "event_type": "https://secevent.example.com/example_event",
    "event_subject": {
      "identifier_type": "urn:ietf:params:secevent:subject:email",
      "email": "user@example.com"
    },
    "event_time": 1458492425,
    "claim_1": "foo",
    "claim_2": "bar"
  }
}
]]></artwork></figure>

<t>The payload in this example contains the following:</t>

<t><list style="symbols">
  <t>An “event_type” claim whose value is the URI identifying the
hypothetical event type.</t>
  <t>An “event_subject” claim whose value identifies a subject via email
address.</t>
  <t>An “event_time” claim whose value is the time at which the event occured.</t>
  <t>Two claims “claim_1” and “claim_2” that are defined by the hypothetical 
event type’s Profiling Specification.</t>
</list></t>

</section>
<section anchor="subject" title="Subject Identifiers">
<t>The Subject Identifier provides a common syntax for expressing the subject
of a security event.  A Subject Identifier is a JSON object representing an
instance of a Subject Identifier Type.  A Subject Identifier Type defines a
way of identifying the subject of an event. Typically this is done by
defining a set of one or more claims about a subject that when taken
together collectively identify that subject.  Each Subject Identifier Type
MUST have a name which MUST be registered in the IANA “SET Subject
Identifier Types” registry established by <xref target="iana-sit"></xref>.</t>

<t>A Subject Identifier MUST contain an “identifier_type” claim, whose value is
a string containing the name of the Subject Identifier’s Subject Identifier
Type.  All other claims within the Subject Identifier MUST be defined by the
Subject Identifier Type.</t>

<t>The names of the Subject Identifier Types defined below are registered in
the IANA “SET Subject Identifier Types” registry established by <xref target="iana-sit"></xref>.</t>

<section anchor="implicit-subject-identifier-type" title="Implicit Subject Identifier Type">
<t>The “Implicit” Subject Identifier Type indicates that the recipient is to be
determined implicitly, either from other claims in the SET envelope or event
payload, or through some other context.  For example, there may be event
types for which the only logical subject is the transmitter itself, in which
case the subject is implicitly known from the “iss” claim in the SET
envelope.</t>

<t>The Implicit Subject Identifier Type has the name “implicit”.  This type
contains no additional claims.</t>

<t>The following is a non-normative example of a Subject Identifier
representing an instance of the Implicit Subject Identifier Type:</t>

<figure title="An Instance of the Implicit Subject Identifier Type" anchor="figimplicit"><artwork><![CDATA[
{
  "identifier_type": "implicit"
}
]]></artwork></figure>

</section>
<section anchor="email-subject-identifier-type" title="Email Subject Identifier Type">
<t>The “Email” Subject Identifier Type identifies a subject by email address.
It has the name “email”, and contains a single additional claim:</t>

<t><list style="hanging">
  <t hangText='email'><vspace blankLines='0'/>
  A string containing an email address.  Its value SHOULD conform to
<xref target="RFC5322"></xref>.  This claim is REQUIRED.</t>
</list></t>

<t>The following is a non-normative example of a Subject Identifier
representing an instance of the Email Subject Identifier Type:</t>

<figure title="An Instance of the Email Subject Identifier Type" anchor="figemail"><artwork><![CDATA[
{
  "identifier_type": "email",
  "email": "user@example.com"
}
]]></artwork></figure>

</section>
<section anchor="phone-number-subject-identifier-type" title="Phone Number Subject Identifier Type">
<t>The “Phone Number” Subject Identifier Type identifies a subject by phone
number. It has the name “phone_number”, and contains a single claim:</t>

<t><list style="hanging">
  <t hangText='phone_number'><vspace blankLines='0'/>
  A string containing a phone number.  It SHOULD be formatted according to
<xref target="E.164"></xref>.  This claim is REQUIRED.</t>
</list></t>

<t>The following is a non-normative example of a Subject Identifier
representing an instance of the Phone Number Subject Identifier Type:</t>

<figure title="An Instance of the Phone Number Subject Identifier Type" anchor="figphone"><artwork><![CDATA[
{
  "identifier_type": "phone_number",
  "phone_number": "+1 206 555 0123"
}
]]></artwork></figure>

</section>
<section anchor="issuer-and-subject-subject-identifier-type" title="Issuer and Subject Subject Identifier Type">
<t>The “Issuer and Subject” Subject Identifier Type identifies a subject by an
issuer and subject pair.  It has the name “iss-sub”, and contains two
claims:</t>

<t><list style="hanging">
  <t hangText='iss'><vspace blankLines='0'/>
  A case-sensitive string identifying the principal who is responsible for
assignment of the identifier in the “sub” claim, as defined by Section 4.1.1
of <xref target="RFC7519"></xref>.  This claim is REQUIRED.</t>
  <t hangText='sub'><vspace blankLines='0'/>
  A case-sensitive string containing an identifier that identifies a subject
within the context of the principal identified by the “iss” claim, as
defined by Section 4.1.2 of <xref target="RFC7519"></xref>.  This claim is REQUIRED.</t>
</list></t>

<t>The following is a non-normative example of a Subject Identifier
representing an instance of the Issuer and Subject Subject Identifier Type:</t>

<figure title="An Instance of the Issuer and Subject Subject Identifier Type" anchor="figisssub"><artwork><![CDATA[
{
  "identifier_type": "iss-sub",
  "iss": "http://id.example.com",
  "sub": "example.user.1234"
}
]]></artwork></figure>

</section>
</section>
<section anchor="set-type" title="Explicit Typing of SETs">
<t>This specification registers the “application/secevent+jwt” media
type.  SETs MAY include this media type in the “typ” header parameter of
the JWT containing the SET to explicitly declare that the JWT is a SET.
This MUST be included if the SET could be used in an application context
in which it could be confused with other kinds of JWTs.  Profiling
Specifications MAY declare that this is REQUIRED for SETs containing events
defined by the Profiling Specification.</t>

<t>Per the definition of “typ” in Section 4.1.9 of <xref target="RFC7515"></xref>, it is
RECOMMENDED that the “application/” prefix be omitted.  Therefore,
the “typ” value used SHOULD be “secevent+jwt”.</t>

</section>
<section anchor="construction" title="Security Event Token Construction">
<t>A SET is a JWT, and therefore it’s construction follows that described in
<xref target="RFC7519"></xref>.</t>

<t>While this specification uses JWT to convey a SET, implementers SHALL
NOT use SETs to convey authentication or authorization assertions.</t>

<t>The following is the example JWT Claims Set from <xref target="figset"></xref>, expressed as
an unsigned JWT.  The JOSE Header is:</t>

<figure><artwork><![CDATA[
{"typ":"secevent+jwt","alg":"none"}
]]></artwork></figure>

<t>Base64url encoding of the octets of the UTF-8 representation of the
JOSE Header yields:</t>

<figure><artwork><![CDATA[
eyJ0eXAiOiJzZWNldmVudCtqd3QiLCJhbGciOiJub25lIn0
]]></artwork></figure>

<t>The example JWT Claims Set is encoded as follows:</t>

<figure><artwork><![CDATA[
ewogICJqdGkiOiAiM2QwYzNjZjc5NzU4NGJkMTkzYmQwZmIxYmQ0ZTdkMzAiLAogICJp
c3MiOiAiaHR0cHM6Ly90cmFuc21pdHRlci5leGFtcGxlLmNvbSIsCiAgImF1ZCI6IFsg
Imh0dHBzOi8vcmVjZWl2ZXIuZXhhbXBsZS5jb20iIF0sCiAgImlhdCI6IDE0NTg0OTYw
MjUsCiAgImV2ZW50IjogewogICAgImV2ZW50X3R5cGUiOiAiaHR0cHM6Ly9zZWNldmVu
dC5leGFtcGxlLmNvbS9leGFtcGxlX2V2ZW50IiwKICAgICJldmVudF9zdWJqZWN0Ijog
ewogICAgICAiaWRlbnRpZmllcl90eXBlIjogInVybjppZXRmOnBhcmFtczpzZWNldmVu
dDpzdWJqZWN0OmVtYWlsIiwKICAgICAgImVtYWlsIjogInVzZXJAZXhhbXBsZS5jb20i
CiAgICB9LAogICAgImV2ZW50X3RpbWUiOiAxNDU4NDkyNDI1LAogICAgImNsYWltXzEi
OiAiZm9vIiwKICAgICJjbGFpbV8yIjogImJhciIKICB9Cn0
]]></artwork></figure>

<t>The encoded JWS signature is the empty string.  Concatenating the
parts yields the following complete JWT:</t>

<figure title="Example Unsecured Security Event Token" anchor="figsetencoded"><artwork><![CDATA[
eyJ0eXAiOiJzZWNldmVudCtqd3QiLCJhbGciOiJub25lIn0.
ewogICJqdGkiOiAiM2QwYzNjZjc5NzU4NGJkMTkzYmQwZmIxYmQ0ZTdkMzAiLAogICJp
c3MiOiAiaHR0cHM6Ly90cmFuc21pdHRlci5leGFtcGxlLmNvbSIsCiAgImF1ZCI6IFsg
Imh0dHBzOi8vcmVjZWl2ZXIuZXhhbXBsZS5jb20iIF0sCiAgImlhdCI6IDE0NTg0OTYw
MjUsCiAgImV2ZW50IjogewogICAgImV2ZW50X3R5cGUiOiAiaHR0cHM6Ly9zZWNldmVu
dC5leGFtcGxlLmNvbS9leGFtcGxlX2V2ZW50IiwKICAgICJldmVudF9zdWJqZWN0Ijog
ewogICAgICAiaWRlbnRpZmllcl90eXBlIjogInVybjppZXRmOnBhcmFtczpzZWNldmVu
dDpzdWJqZWN0OmVtYWlsIiwKICAgICAgImVtYWlsIjogInVzZXJAZXhhbXBsZS5jb20i
CiAgICB9LAogICAgImV2ZW50X3RpbWUiOiAxNDU4NDkyNDI1LAogICAgImNsYWltXzEi
OiAiZm9vIiwKICAgICJjbGFpbV8yIjogImJhciIKICB9Cn0.
]]></artwork></figure>

<t>For the purpose of a simpler example in Figure 5, an unsecured token
was shown.  When SETs are not signed or encrypted, the Event Receiver
MUST employ other mechanisms such as TLS and HTTP to provide
integrity, confidentiality, and issuer validation, as needed by the
application.</t>

<t>When validation (i.e. auditing), or additional transmission security
is required, JWS signing and/or JWE encryption MAY be used.  To
create and or validate a signed and/or encrypted SET, follow the
instructions in Section 7 of <xref target="RFC7519"></xref>.</t>

</section>
</section>
<section anchor="related-events" title="Related Events">
<t>In order to accommodate use cases that require communicating multiple
related security events to an Event Receiver, this section defines the
“Related Events” event type.  A Related Events event is essentially a
container for two or more events that are related to one another, in that
they represent or express different aspects of the same event or state
change.  The Related Events event SHOULD NOT be used to combine unrelated
events into a single set, and MUST NOT be used as a general purpose batch
transmission mechanism.  Profiling Specifications that require an event
grouping mechanism with these or other semantics are encouraged to define
additional event types for their use cases.</t>

<t>The event type for the Related Events event is the URN
“urn:ietf:secevents:related_events”.</t>

<t>The Related Events event has a single additional event payload claim:</t>

<t><list style="hanging">
  <t hangText='events'><vspace blankLines='0'/>
  An array of event payloads, as defined in this document.  These event
payloads can be referred to as Nested Events for the Related Events event.
This claim is REQUIRED.</t>
</list></t>

<section anchor="related-events-proc" title="Processing Related Events">
<t>Nested Events can inherit the “event_id”, “event_subject”, and “event_time”
claims from the Related Events payload.  Transmitters MAY omit some, all, or
none of these claims from a Nested Event.  Transmitters MAY omit claims from
some Nested Events and include them in others within the same Related Events
event. When a claim is omitted, recipients MUST use the value of the
corresponding claim in the Related Event event’s payload.</t>

<t>The following is a non-normative example of a SET containing a Related
Events event:</t>

<figure title="Example SET Containing A Related Events Event" anchor="figrelated"><artwork><![CDATA[
{
  "jti": "1c0038c2-02db-40de-ad50-122a64724166",
  "iss": "https://transmitter.example.com",
  "aud": [ "https://receiver.example.com" ],
  "iat": 1510666261,
  "event": {
    "event_type": "urn:ietf:secevent:related_events",
    "event_subject": {
      "identifier_type": "email",
      "email": "user@example.com"
    },
    "event_id": "container",
    "event_time": 1510662661,
    "events": [
      {
        "event_id": "nested_1",
        "event_type": "http://specs.example.com/set_profile/event_1"
      },
      {
        "event_id": "nested_2",
        "event_type": "http://specs.example.com/set_profile/event_2",
        "event_time": 151059061
      }
    ]
  }
}
]]></artwork></figure>

<t>The following table demonstrates how Nested Events inherit values for
omitted claims:</t>

<figure title="Example of Event Payloads Inheriting Values for Omitted Claims" anchor="figomitted"><artwork><![CDATA[
         +-----------+------------+-------------------------------+         
         | Event ID  | Event Time | Event Subject                 |
         +-----------+------------+-------------------------------+
         | container | 151062661  | {                             |
         +-----------+            |   "identifier_type": "email", |
         | nested_1  |            |   "email": "user@example.com" |
         +-----------+------------+ }                             |
         | nested_2  | 151059061  |                               |
         +-----------+------------+-------------------------------+
]]></artwork></figure>

<t>Since the Nested Event with event ID “nested_1” omits the “event_time”
claim, it inherits the event time from the Related Events event payload.
Similarly, since both Nested Events “nested_1” and “nested_2” omit the
“event_subject” claim, both inherit the event subject from the Related
Events event payload.</t>

</section>
</section>
<section anchor="profile-req" title="Requirements for SET Profiles">
<t>Profiling Specifications for SETs define the syntax and semantics of
SETs conforming to that SET profile and rules for validating those
SETs.  The syntax defined by Profiling Specifications includes what
SET envelope and event payload claims are used by SETs expressing and
event defined by the profile.</t>

<t>Defining the semantics of the SET contents for SETs utilizing the
profile is equally important.  Possibly most important is defining
the procedures used to validate the SET issuer and to obtain the keys
controlled by the issuer that were used for cryptographic operations
used in the JWT representing the SET.  For instance, some profiles
may define an algorithm for retrieving the SET issuer’s keys that
uses the “iss” claim value as its input.  Likewise, if the profile
allows (or requires) that the JWT be unsecured, the means by which
the integrity of the JWT is ensured MUST be specified.</t>

<t>Profiling Specifications MUST define how the event Subject is
identified in the SET, as well as how to differentiate between the
event Subject’s Issuer and the SET Issuer, if applicable.  It is NOT
RECOMMENDED for Profiling Specifications to use the “sub” claim 
defined in <xref target="RFC7519"></xref> in cases in which the Subject is not globally
unique and has a different Issuer from the SET itself.</t>

<t>Profiling Specifications MUST clearly specify the steps that a
recipient of a SET utilizing that profile MUST perform to validate
that the SET is both syntactically and semantically valid.</t>

<section anchor="extensions" title="Extending Events">
<t>As needs change and new use cases develop, it may be desirable to augment
existing event definitions with new claims. In order to avoid collisions,
Profiling Specifications that extend existing events with additional event
payload claims SHOULD use Collision-Resistant Names as defined in Section 2
of <xref target="RFC7519"></xref> for the names of the new claims.</t>

</section>
</section>
<section anchor="security" title="Security Considerations">

<section anchor="c-and-i" title="Confidentiality and Integrity">
<t>SETs may often contain sensitive information.  Therefore, methods for
distribution of events SHOULD require the use of a transport-layer
security mechanism when distributing events.  Parties MUST support
TLS 1.2 <xref target="RFC5246"></xref> and MAY support additional transport-layer
mechanisms meeting its security requirements.  When using TLS, the
client MUST perform a TLS/SSL server certificate check, per
<xref target="RFC6125"></xref>.  Implementation security considerations for TLS can be
found in “Recommendations for Secure Use of TLS and DTLS” <xref target="RFC7525"></xref>.</t>

<t>Security Events distributed through third-parties or that carry
personally identifiable information, SHOULD be encrypted using JWE
<xref target="RFC7516"></xref> or secured for confidentiality by other means.</t>

<t>Unless integrity of the JWT is ensured by other means, it MUST be
signed using JWS <xref target="RFC7515"></xref> so that individual events can be
authenticated and validated by the Event Receiver.</t>

</section>
<section anchor="delivery" title="Delivery">
<t>This specification does not define a delivery mechanism by itself.
In addition to confidentiality and integrity (discussed above),
implementers and Profiling Specifications MUST consider the
consequences of delivery mechanisms that are not secure and/or not
assured.  For example, while a SET may be end-to-end secured using
JWE encrypted SETs, without TLS there is no assurance that the
correct endpoint received the SET and that it could be successfully
processed.</t>

</section>
<section anchor="sequencing" title="Sequencing">
<t>As defined in this specification, there is no defined way to order
multiple SETs in a sequence.  Depending on the type and nature of SET
event, order may or may not matter.  For example, in provisioning,
event order is critical – an object could not be modified before it
was created.  In other SET types, such as a token revocation, the
order of SETs for revoked tokens does not matter.  If however, the
event was described as a log-in or logged-out status for a user
subject, then order becomes important.</t>

<t>Profiling Specifications and implementers SHOULD take caution when
using timestamps such as “iat” to define order.  Distributed systems
will have some amount of clock-skew and thus time by itself will not
guarantee order.</t>

<t>Specifications profiling SET SHOULD define a mechanism for detecting
order or sequence of events.</t>

</section>
<section anchor="timing" title="Timing Issues">
<t>When SETs are delivered asynchronously and/or out-of-band with
respect to the original action that incurred the security event, it
is important to consider that a SET might be delivered to an Event
Receiver in advance or well behind the process that caused the event.
For example, a user having been required to logout and then log back
in again, may cause a logout SET to be issued that may arrive at the
same time as the user-agent accesses a web site having just logged-
in.  If timing is not handled properly, the effect would be to
erroneously treat the new user session as logged out.  Profiling
Specifications SHOULD be careful to anticipate timing and subject
selection information.  For example, it might be more appropriate to
cancel a “session” rather than a “user”.  Alternatively, the
specification could use timestamps that allows new sessions to be
started immediately after a stated logout event time.</t>

</section>
<section anchor="not-id-tokens" title="Distinguishing SETs from ID Tokens">
<t>Because <xref target="RFC7519"></xref> states that “all claims that are not understood by
implementations MUST be ignored”, there is a consideration that a SET
token might be confused with ID Token <xref target="OpenID.Core"></xref> if a SET is
mistakenly or intentionally used in a context requiring an ID Token.
If a SET could otherwise be interpreted as a valid ID Token (because
it includes the required claims for an ID Token and valid issuer and
audience claim values for an ID Token) then that SET profile MUST
require that the “exp” claim not be present in the SET.  Because
“exp” is a required claim in ID Tokens, valid ID Token
implementations will reject such a SET if presented as if it were an
ID Token.</t>

<t>Excluding “exp” from SETs that could otherwise be confused with ID
Tokens is actually defense in depth.  In any OpenID Connect contexts
in which an attacker could attempt to substitute a SET for an ID
Token, the SET would actually already be rejected as an ID Token
because it would not contain the correct “nonce” claim value for the
ID Token to be accepted in contexts for which substitution is
possible.</t>

<t>Note that the use of explicit typing, as described in Section 2.2,
will not achieve disambiguation between ID Tokens and SETs, as the ID
Token validation rules do not use the “typ” header parameter value.</t>

</section>
<section anchor="not-access-tokens" title="Distinguishing SETs from Access Tokens">
<t>OAuth 2.0 <xref target="RFC6749"></xref> defines access tokens as being opaque.
Nonetheless, some implementations implement access tokens as JWTs.
Because the structure of these JWTs is implementation-specific,
ensuring that a SET cannot be confused with such an access token is
therefore likewise, in general, implementation specific.
Nonetheless, it is recommended that SET profiles employ the following
strategies to prevent possible substitutions of SETs for access
tokens in contexts in which that might be possible:</t>

<t><list style="symbols">
  <t>Prohibit use of the “exp” claim, as is done to prevent ID Token
confusion.</t>
  <t>Where possible, use a separate “aud” claim value to distinguish
between the Event Receiver and the protected resource that is the
audience of an access token.</t>
  <t>Modify access token validation systems to check for the presence
of the “events” claim as a means to detect security event tokens.
This is particularly useful if the same endpoint may receive both
types of tokens.</t>
  <t>Employ explicit typing, as described in Section 2.2, and modify
access token validation systems to use the “typ” header parameter
value.</t>
</list></t>

</section>
<section anchor="not-other-jwts" title="Distinguishing SETs from other kinds of JWTs">
<t>JWTs are now being used in application areas beyond the identity
applications in which they first appeared.  For instance, the Session
Initiation Protocol (SIP) Via Header Field <xref target="RFC8055"></xref> and Personal
Assertion Token (PASSporT) <xref target="I-D.ietf-stir-passport"></xref> specifications
both define JWT profiles that use mostly or completely different sets
of claims than are used by ID Tokens.  If it would otherwise be
possible for an attacker to substitute a SET for one of these (or
other) kinds of JWTs, then the SET profile must be defined in such a
way that any substituted SET will result in its rejection when
validated as the intended kind of JWT.</t>

<t>The most direct way to prevent confusion is to employ explicit
typing, as described in Section 2.2, and modify applicable token
validation systems to use the “typ” header parameter value.  This
approach can be employed for new systems but may not be applicable to
existing systems.</t>

<t>Another way to ensure that a SET is not confused with another kind of
JWT is to have the JWT validation logic reject JWTs containing an
“events” claim unless the JWT is intended to be a SET.  This approach
can be employed for new systems but may not be applicable to existing
systems.</t>

<t>For many use cases, the simplest way to prevent substitution is
requiring that the SET not include claims that are required for the
kind of JWT that might be the target of an attack.  For example, for
<xref target="RFC8055"></xref>, the “sip_callid” claim could be omitted and for
<xref target="I-D.ietf-stir-passport"></xref>, the “orig” claim could be omitted.</t>

<t>In many contexts, simple measures such as these will accomplish the
task, should confusion otherwise even be possible.  Note that this
topic is being explored in a more general fashion in JSON Web Token
Best Current Practices <xref target="I-D.sheffer-oauth-jwt-bcp"></xref>.  The proposed
best practices in that draft may also be applicable for particular
SET profiles and use cases.</t>

</section>
</section>
<section anchor="privacy" title="Privacy Considerations">
<t>If a SET needs to be retained for audit purposes, JWS MAY be used to
provide verification of its authenticity.</t>

<t>Event Transmitters SHOULD attempt to specialize feeds so that the
content is targeted to the specific business and protocol needs of an
Event Receiver.</t>

<t>When sharing personally identifiable information or information that
is otherwise considered confidential to affected users, Event
Transmitters and Receivers MUST have the appropriate legal agreements
and user consent or terms of service in place.</t>

<t>The propagation of subject identifiers can be perceived as personally
identifiable information.  Where possible, Event Transmitters and
Receivers SHOULD devise approaches that prevent propagation – for
example, the passing of a hash value that requires the Event Receiver
to know the subject.</t>

</section>
<section anchor="iana" title="IANA Considerations">

<section anchor="iana-sit" title="SET Subject Identifier Types Registry">
<t>This section establishes the IANA “SET Subject Identifier Types” registry
// TODO</t>

</section>
<section anchor="iana-claims" title="JSON Web Token Claims Registration">
<t>This specification registers the “event” claim in the IANA “JSON Web Token
Claims” registry <xref target="IANA.JWT.Claims"></xref> established by <xref target="RFC7519"></xref>.</t>

<section anchor="registry-contents" title="Registry Contents">
<t><list style="symbols">
  <t>Claim Name: “event”</t>
  <t>Claim Description: Security Event Payload</t>
  <t>Change Controller: IESG</t>
  <t>Specification Document(s): Section 2.1 of [[ this specification ]]</t>
</list></t>

</section>
</section>
<section anchor="iana-media-type" title="Media Type Registration">

<section anchor="registry-contents-1" title="Registry Contents">
<t>This section registers the “application/secevent+jwt” media type
<xref target="RFC2046"></xref> in the “Media Types” registry <xref target="IANA.MediaTypes"></xref> in the
manner described in <xref target="RFC6838"></xref>, which can be used to indicate that the
content is a SET.</t>

<t><list style="symbols">
  <t>Type name: application</t>
  <t>Subtype name: secevent+jwt</t>
  <t>Required parameters: n/a</t>
  <t>Optional parameters: n/a</t>
  <t>Encoding considerations: 8bit; A SET is a JWT; JWT values are
encoded as a series of base64url-encoded values (some of which may
be the empty string) separated by period (‘.’) characters.</t>
  <t>Security considerations: See the Security Considerations section
of [[ this specification ]]</t>
  <t>Interoperability considerations: n/a</t>
  <t>Published specification: Section 2.2 of [[ this specification ]]</t>
  <t>Applications that use this media type: TBD</t>
  <t>Fragment identifier considerations: n/a</t>
  <t>Additional information:</t>
  <t>Magic number(s): n/a</t>
  <t>File extension(s): n/a</t>
  <t>Macintosh file type code(s): n/a</t>
  <t>Person &amp; email address to contact for further information:
Michael B. Jones, mbj@microsoft.com</t>
  <t>Intended usage: COMMON</t>
  <t>Restrictions on usage: none</t>
  <t>Author: Michael B. Jones, mbj@microsoft.com</t>
  <t>Change controller: IESG</t>
  <t>Provisional registration?  No</t>
</list></t>

</section>
</section>
</section>


  </middle>

  <back>

    <references title='Normative References'>

<reference anchor="IANA.JWT.Claims" target="http://www.iana.org/assignments/jwt">
  <front>
    <title>JSON Web Token Claims</title>
    <author >
      <organization>IANA</organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="IANA.MediaTypes" target="http://www.iana.org/assignments/media-types">
  <front>
    <title>Media Types</title>
    <author >
      <organization>IANA</organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>




<reference  anchor="RFC2119" target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC3986" target='https://www.rfc-editor.org/info/rfc3986'>
<front>
<title>Uniform Resource Identifier (URI): Generic Syntax</title>
<author initials='T.' surname='Berners-Lee' fullname='T. Berners-Lee'><organization /></author>
<author initials='R.' surname='Fielding' fullname='R. Fielding'><organization /></author>
<author initials='L.' surname='Masinter' fullname='L. Masinter'><organization /></author>
<date year='2005' month='January' />
<abstract><t>A Uniform Resource Identifier (URI) is a compact sequence of characters that identifies an abstract or physical resource.  This specification defines the generic URI syntax and a process for resolving URI references that might be in relative form, along with guidelines and security considerations for the use of URIs on the Internet.  The URI syntax defines a grammar that is a superset of all valid URIs, allowing an implementation to parse the common components of a URI reference without knowing the scheme-specific requirements of every possible identifier.  This specification does not define a generative grammar for URIs; that task is performed by the individual specifications of each URI scheme.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='STD' value='66'/>
<seriesInfo name='RFC' value='3986'/>
<seriesInfo name='DOI' value='10.17487/RFC3986'/>
</reference>



<reference  anchor="RFC5246" target='https://www.rfc-editor.org/info/rfc5246'>
<front>
<title>The Transport Layer Security (TLS) Protocol Version 1.2</title>
<author initials='T.' surname='Dierks' fullname='T. Dierks'><organization /></author>
<author initials='E.' surname='Rescorla' fullname='E. Rescorla'><organization /></author>
<date year='2008' month='August' />
<abstract><t>This document specifies Version 1.2 of the Transport Layer Security (TLS) protocol.  The TLS protocol provides communications security over the Internet.  The protocol allows client/server applications to communicate in a way that is designed to prevent eavesdropping, tampering, or message forgery.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5246'/>
<seriesInfo name='DOI' value='10.17487/RFC5246'/>
</reference>



<reference  anchor="RFC5322" target='https://www.rfc-editor.org/info/rfc5322'>
<front>
<title>Internet Message Format</title>
<author initials='P.' surname='Resnick' fullname='P. Resnick' role='editor'><organization /></author>
<date year='2008' month='October' />
<abstract><t>This document specifies the Internet Message Format (IMF), a syntax for text messages that are sent between computer users, within the framework of &quot;electronic mail&quot; messages.  This specification is a revision of Request For Comments (RFC) 2822, which itself superseded Request For Comments (RFC) 822, &quot;Standard for the Format of ARPA Internet Text Messages&quot;, updating it to reflect current practice and incorporating incremental changes that were specified in other RFCs.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5322'/>
<seriesInfo name='DOI' value='10.17487/RFC5322'/>
</reference>



<reference  anchor="RFC6125" target='https://www.rfc-editor.org/info/rfc6125'>
<front>
<title>Representation and Verification of Domain-Based Application Service Identity within Internet Public Key Infrastructure Using X.509 (PKIX) Certificates in the Context of Transport Layer Security (TLS)</title>
<author initials='P.' surname='Saint-Andre' fullname='P. Saint-Andre'><organization /></author>
<author initials='J.' surname='Hodges' fullname='J. Hodges'><organization /></author>
<date year='2011' month='March' />
<abstract><t>Many application technologies enable secure communication between two entities by means of Internet Public Key Infrastructure Using X.509 (PKIX) certificates in the context of Transport Layer Security (TLS). This document specifies procedures for representing and verifying the identity of application services in such interactions.   [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6125'/>
<seriesInfo name='DOI' value='10.17487/RFC6125'/>
</reference>



<reference  anchor="RFC6749" target='https://www.rfc-editor.org/info/rfc6749'>
<front>
<title>The OAuth 2.0 Authorization Framework</title>
<author initials='D.' surname='Hardt' fullname='D. Hardt' role='editor'><organization /></author>
<date year='2012' month='October' />
<abstract><t>The OAuth 2.0 authorization framework enables a third-party application to obtain limited access to an HTTP service, either on behalf of a resource owner by orchestrating an approval interaction between the resource owner and the HTTP service, or by allowing the third-party application to obtain access on its own behalf.  This specification replaces and obsoletes the OAuth 1.0 protocol described in RFC 5849.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6749'/>
<seriesInfo name='DOI' value='10.17487/RFC6749'/>
</reference>



<reference  anchor="RFC7519" target='https://www.rfc-editor.org/info/rfc7519'>
<front>
<title>JSON Web Token (JWT)</title>
<author initials='M.' surname='Jones' fullname='M. Jones'><organization /></author>
<author initials='J.' surname='Bradley' fullname='J. Bradley'><organization /></author>
<author initials='N.' surname='Sakimura' fullname='N. Sakimura'><organization /></author>
<date year='2015' month='May' />
<abstract><t>JSON Web Token (JWT) is a compact, URL-safe means of representing claims to be transferred between two parties.  The claims in a JWT are encoded as a JSON object that is used as the payload of a JSON Web Signature (JWS) structure or as the plaintext of a JSON Web Encryption (JWE) structure, enabling the claims to be digitally signed or integrity protected with a Message Authentication Code (MAC) and/or encrypted.</t></abstract>
</front>
<seriesInfo name='RFC' value='7519'/>
<seriesInfo name='DOI' value='10.17487/RFC7519'/>
</reference>



<reference  anchor="RFC7525" target='https://www.rfc-editor.org/info/rfc7525'>
<front>
<title>Recommendations for Secure Use of Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS)</title>
<author initials='Y.' surname='Sheffer' fullname='Y. Sheffer'><organization /></author>
<author initials='R.' surname='Holz' fullname='R. Holz'><organization /></author>
<author initials='P.' surname='Saint-Andre' fullname='P. Saint-Andre'><organization /></author>
<date year='2015' month='May' />
<abstract><t>Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS) are widely used to protect data exchanged over application protocols such as HTTP, SMTP, IMAP, POP, SIP, and XMPP.  Over the last few years, several serious attacks on TLS have emerged, including attacks on its most commonly used cipher suites and their modes of operation.  This document provides recommendations for improving the security of deployed services that use TLS and DTLS. The recommendations are applicable to the majority of use cases.</t></abstract>
</front>
<seriesInfo name='BCP' value='195'/>
<seriesInfo name='RFC' value='7525'/>
<seriesInfo name='DOI' value='10.17487/RFC7525'/>
</reference>


<reference anchor="E.164" target="http://www.itu.int/rec/T-REC-E.164-201011-I/en">
  <front>
    <title>The international public telecommunication numbering plan</title>
    <author >
      <organization>International Telecommunication Union</organization>
    </author>
    <date year="2010"/>
  </front>
</reference>


    </references>

    <references title='Informative References'>





<reference anchor="I-D.ietf-stir-passport">
<front>
<title>Personal Assertion Token (PASSporT)</title>

<author initials='C' surname='Wendt' fullname='Chris Wendt'>
    <organization />
</author>

<author initials='J' surname='Peterson' fullname='Jon Peterson'>
    <organization />
</author>

<date month='February' day='9' year='2017' />

<abstract><t>This document defines a method for creating and validating a token that cryptographically verifies an originating identity, or more generally a URI or telephone number representing the originator of personal communications.  The PASSporT token is cryptographically signed to protect the integrity of the identity the originator and to verify the assertion of the identity information at the destination. The cryptographic signature is defined with the intention that it can confidently verify the originating persona even when the signature is sent to the destination party over an insecure channel.  PASSporT is particularly useful for many personal communications applications over IP networks and other multi-hop interconnection scenarios where the originating and destination parties may not have a direct trusted relationship.</t></abstract>

</front>

<seriesInfo name='Internet-Draft' value='draft-ietf-stir-passport-11' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-ietf-stir-passport-11.txt' />
</reference>



<reference anchor="I-D.sheffer-oauth-jwt-bcp">
<front>
<title>JSON Web Token Best Current Practices</title>

<author initials='Y' surname='Sheffer' fullname='Yaron Sheffer'>
    <organization />
</author>

<author initials='D' surname='Hardt' fullname='Dick Hardt'>
    <organization />
</author>

<author initials='M' surname='Jones' fullname='Michael Jones'>
    <organization />
</author>

<date month='July' day='3' year='2017' />

<abstract><t>JSON Web Tokens, also known as JWTs [RFC7519], are URL-safe JSON- based security tokens that contain a set of claims that can be signed and/or encrypted.  JWTs are being widely used and deployed as a simple security token format in numerous protocols and applications, both in the area of digital identity, and in other application areas. The goal of this Best Current Practices document is to provide actionable guidance leading to secure implementation and deployment of JWTs.</t></abstract>

</front>

<seriesInfo name='Internet-Draft' value='draft-sheffer-oauth-jwt-bcp-01' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-sheffer-oauth-jwt-bcp-01.txt' />
</reference>


<reference anchor="OpenID.Core" target="http://openid.net/specs/openid-connect-core-1_0.html">
  <front>
    <title>OpenID Connect Core 1.0</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>




<reference  anchor="RFC2046" target='https://www.rfc-editor.org/info/rfc2046'>
<front>
<title>Multipurpose Internet Mail Extensions (MIME) Part Two: Media Types</title>
<author initials='N.' surname='Freed' fullname='N. Freed'><organization /></author>
<author initials='N.' surname='Borenstein' fullname='N. Borenstein'><organization /></author>
<date year='1996' month='November' />
<abstract><t>This second document defines the general structure of the MIME media typing system and defines an initial set of media types.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='2046'/>
<seriesInfo name='DOI' value='10.17487/RFC2046'/>
</reference>



<reference  anchor="RFC6838" target='https://www.rfc-editor.org/info/rfc6838'>
<front>
<title>Media Type Specifications and Registration Procedures</title>
<author initials='N.' surname='Freed' fullname='N. Freed'><organization /></author>
<author initials='J.' surname='Klensin' fullname='J. Klensin'><organization /></author>
<author initials='T.' surname='Hansen' fullname='T. Hansen'><organization /></author>
<date year='2013' month='January' />
<abstract><t>This document defines procedures for the specification and registration of media types for use in HTTP, MIME, and other Internet protocols.  This memo documents an Internet Best Current Practice.</t></abstract>
</front>
<seriesInfo name='BCP' value='13'/>
<seriesInfo name='RFC' value='6838'/>
<seriesInfo name='DOI' value='10.17487/RFC6838'/>
</reference>



<reference  anchor="RFC7515" target='https://www.rfc-editor.org/info/rfc7515'>
<front>
<title>JSON Web Signature (JWS)</title>
<author initials='M.' surname='Jones' fullname='M. Jones'><organization /></author>
<author initials='J.' surname='Bradley' fullname='J. Bradley'><organization /></author>
<author initials='N.' surname='Sakimura' fullname='N. Sakimura'><organization /></author>
<date year='2015' month='May' />
<abstract><t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures.  Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification.  Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t></abstract>
</front>
<seriesInfo name='RFC' value='7515'/>
<seriesInfo name='DOI' value='10.17487/RFC7515'/>
</reference>



<reference  anchor="RFC7516" target='https://www.rfc-editor.org/info/rfc7516'>
<front>
<title>JSON Web Encryption (JWE)</title>
<author initials='M.' surname='Jones' fullname='M. Jones'><organization /></author>
<author initials='J.' surname='Hildebrand' fullname='J. Hildebrand'><organization /></author>
<date year='2015' month='May' />
<abstract><t>JSON Web Encryption (JWE) represents encrypted content using JSON-based data structures.  Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and IANA registries defined by that specification.  Related digital signature and Message Authentication Code (MAC) capabilities are described in the separate JSON Web Signature (JWS) specification.</t></abstract>
</front>
<seriesInfo name='RFC' value='7516'/>
<seriesInfo name='DOI' value='10.17487/RFC7516'/>
</reference>



<reference  anchor="RFC8055" target='https://www.rfc-editor.org/info/rfc8055'>
<front>
<title>Session Initiation Protocol (SIP) Via Header Field Parameter to Indicate Received Realm</title>
<author initials='C.' surname='Holmberg' fullname='C. Holmberg'><organization /></author>
<author initials='Y.' surname='Jiang' fullname='Y. Jiang'><organization /></author>
<date year='2017' month='January' />
<abstract><t>This specification defines a new Session Initiation Protocol (SIP) Via header field parameter, 'received-realm', which allows a SIP entity acting as an entry point to a transit network to indicate from which adjacent upstream network a SIP request is received by using a network realm value associated with the adjacent network.</t></abstract>
</front>
<seriesInfo name='RFC' value='8055'/>
<seriesInfo name='DOI' value='10.17487/RFC8055'/>
</reference>




    </references>


<section anchor="ack" title="Acknowledgments">
<t>The editors would like to thank Phil Hunt for his SET draft – on which much
of this specification is based – and his continuing contributions to this
draft.</t>

<t>The editors would like to thank the participants on the IETF secevent
mailing list and related working groups for their support of this
specification.</t>

</section>


  </back>

<!-- ##markdown-source:
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
I2gzBd0JjpLPqylq+XOOTtxJRf6TX09Mc3zbcBRkGK3QEv38G/+8kaQ20JH/
7iZy4vkjnR8BECoaqessNaRVTfUDSFR0fO7/lqS+ZHvuoawQtfhQ8A088Zfd
aG/nINrf3492dvcedsiMMbeZzL4ERKW2MzlJAdurT96twlee/3rKQ2PbDaM/
zONc6KCjhpoGa8+7NNjeVlIhsEp//2wKGaxEDuM380pOomHu2p1NVQx7qS5R
t148866E16750qwzjHfHGkLB3D0qsA7xxrNHvdxsiAD7onUKPcsC12U2rOuO
cOT/NoN+OUXfZyko4XWiSYfb23m6GkPCR1FtyPdUyw68+6hraDQA3+guM+OL
4UcePpWDReRGcrkTZY6oGozOUG+qql5b3aGegiQ8vfphG7z6y8db4Hk6o00m
L+axcUYMo0q1Gnuy9AgnKJVJ4I9eNM1izFxQtAoNeYmKUvKj44+hxY715e70
VJoBUfmHD/AtoiIqMKclqW+ltXMY+9bR+MSTVwKEJ4W8KmktTFNDHIPm9h20
b1ytK/sH1zmV99P5ycbPn5i1RU4B9OzuK3OQ60Co9LDA+S7TCdVsjse8yjhE
7qWEATZGfFALtDt84vHs/oc+pwfMSmHVCiFgUR+M/onOtJL/wvk3cIhgBVnf
uK1m65BQ5pR7L6CklaOEWgClxyv5OHHi/bmRoj3aDquK+1phySDCUr9tIn9I
EUmNJq86FftaL8UnRzYcLCVSpNwuuF1LPU2U+6XodCDBYC4UMyNabqwvLDAd
09rTm7X0BZCWE5Jhyblge0WMUjRQRGenTJLcRPTaOQC71ddwGtUU4MmoRSnn
y7HAjLMXzy8uT6OfmFXzRkUlbethuIP9XlxM4EsQ4yiS8DnzFLTWwaNFXXBF
qUgm8oiTNnOHFd5cPRs8dqE4e3AEYyE+BMs8K1KFIls+38l+Ocov8uef3709
L9LZz4v0uP09ffi3/MXx8+noxwR/W4z29ouzcochutqMHwwm88kB1NxCCTrX
bTU5O37+e/rjNYx5lL/c+9vtr5/PP777mOyff37z6PzH59cvr64//zr72+27
2dkn+Hfn3VV6/fLzUf7iiN6dm+ThS3o5/un1TvLTy4MXyyc7yezZItnbnac/
vS6SfL/IfnzWJj9+Kl7Mzm9Gl2fNcX40OZs92313fHZw9qyZmLPZdCf96enn
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

-->

</rfc>

