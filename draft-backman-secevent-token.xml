<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.3 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>

<rfc ipr="trust200902" docName="draft-backman-secevent-token-02" category="std">

  <front>
    <title abbrev="secevent-token">Security Event Token (SET)</title>

    <author initials="A." surname="Backman" fullname="Annabelle Backman">
      <organization>Amazon</organization>
      <address>
        <email>richanna@amazon.com</email>
      </address>
    </author>
    <author initials="W." surname="Denniss" fullname="William Denniss">
      <organization>Google</organization>
      <address>
        <email>wdenniss@google.com</email>
      </address>
    </author>
    <author initials="M." surname="Ansari" fullname="Morteza Ansari">
      <organization>Cisco</organization>
      <address>
        <email>morteza.ansari@cisco.com</email>
      </address>
    </author>
    <author initials="M." surname="Jones" fullname="Michael B. Jones">
      <organization>Microsoft</organization>
      <address>
        <email>mbj@microsoft.com</email>
        <uri>http://self-issued.info/</uri>
      </address>
    </author>

    <date year="2017" month="November" day="29"/>

    <area>Security</area>
    <workgroup>secevent</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This specification defines the Security Event Token, which may be
distributed via a protocol such as HTTP.  The Security Event Token
(SET) specification profiles the JSON Web Token (JWT), which can be
optionally signed and/or encrypted.  A SET describes a statement of
fact from the perspective of an issuer that it intends to share with
one or more receivers.</t>



    </abstract>


  </front>

  <middle>


<section anchor="intro" title="Introduction">
<t>This specification defines an extensible Security Event Token (SET)
format which may be exchanged using protocols such as HTTP.  The
specification builds on the JSON Web Token (JWT) format <xref target="RFC7519"></xref> in
order to provide a self-contained token that can be optionally signed
using JSON Web Signature (JWS) <xref target="RFC7515"></xref> and/or encrypted using JSON
Web Encryption (JWE) <xref target="RFC7516"></xref>.</t>

<t>This specification profiles the use of JWT for the purpose of issuing
security event tokens (SETs).  This specification defines a base
format upon which profiling specifications define actual events and
their meanings.  Unless otherwise specified, this specification uses
non-normative example events intended to demonstrate how events may
be constructed.</t>

<t>This specification is scoped to security and identity related events.
While security event tokens may be used for other purposes, the
specification only considers security and privacy concerns relevant
to identity and personal information.</t>

<t>Security Events are not commands issued between parties.  A security
event is a statement of fact from the perspective of an issuer about
the state of a security subject (e.g., a web resource, token, IP
address, the issuer itself) that the issuer controls or is aware of,
that has changed in some way (explicitly or implicitly).  A security
subject MAY be permanent (e.g., a user account) or temporary (e.g.,
an HTTP session) in nature.  A state change could describe a direct
change of entity state, an implicit change of state or other higher-
level security statements such as:</t>

<t><list style="symbols">
  <t>The creation, modification, removal of a resource.</t>
  <t>The resetting or suspension of an account.</t>
  <t>The revocation of a security token prior to its expiry.</t>
  <t>The logout of a user session.  Or,</t>
  <t>A cumulative conclusion such as to indicate that a user has taken
over an email identifier that may have been used in the past by
another user.</t>
</list></t>

<t>While subject state changes are often triggered by a user-agent or
security-subsystem, the issuance and transmission of an event often
occurs asynchronously and in a back-channel to the action which
caused the change that generated the security event.  Subsequently,
an Event Receiver, having received a SET, validates and interprets
the received SET and takes its own independent actions, if any.  For
example, having been informed of a personal identifier being
associated with a different security subject (e.g., an email address
is being used by someone else), the Event Receiver may choose to
ensure that the new user is not granted access to resources
associated with the previous user.  Or, the Event Receiver may not
have any relationship with the subject, and no action is taken.</t>

<t>While Event Receivers will often take actions upon receiving SETs,
security events cannot be assumed to be commands or requests.  The
intent of this specification is to define a way of exchanging
statements of fact that Event Receivers may interpret for their own
purposes.  As such, SETs have no capability for error signaling other
to ensure the validation of a received SET.</t>

<section anchor="conv" title="Notational Conventions">
<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”,
“SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and
“OPTIONAL” in this document are to be interpreted as described in
<xref target="RFC2119"></xref>.  These keywords are capitalized when used to unambiguously
specify requirements of the protocol or application features and
behavior that affect the inter-operability and security of
implementations.  When these words are not capitalized, they are
meant in their natural-language sense.</t>

<t>For purposes of readability, examples are not URL encoded.
Implementers MUST percent encode URLs as described in Section 2.1 of
<xref target="RFC3986"></xref>.</t>

<t>Throughout this document, all figures MAY contain spaces and extra
line-wrapping for readability and space limitations.  Similarly, some
URIs contained within examples have been shortened for space and
readability reasons.</t>

</section>
<section anchor="defn" title="Definitions">
<t>The following definitions are used with SETs:</t>

<t><list style="hanging">
  <t hangText='Security Event Token (SET)'><vspace blankLines='0'/>
  A SET is a JWT <xref target="RFC7519"></xref> that contains an event payload describing
a security event.</t>
  <t hangText='Event Transmitter'><vspace blankLines='0'/>
  A service provider that delivers SETs to other providers known as
Event Receivers.</t>
  <t hangText='Event Receiver'><vspace blankLines='0'/>
  An Event Receiver is an entity that receives SETs through some
distribution method.  An Event Receiver is the same entity
referred as “recipient” or “receiver” in and related
specifications.  <xref target="RFC7519"></xref></t>
  <t hangText='Subject'><vspace blankLines='0'/>
  A SET describes an event or state change that has occurred about a
Subject.  A Subject may be a principal (e.g., Section 4.1.2
<xref target="RFC7519"></xref>), a web resource, an entity such as an IP address, or
the issuer itself that a SET might reference.</t>
  <t hangText='Profiling Specification'><vspace blankLines='0'/>
  A specification that uses the SET Token specification to define one or
more event types and the associated claims included.</t>
</list></t>

</section>
</section>
<section anchor="set" title="The Security Event Token (SET)">
<t>A SET is a data structure that encodes an “event payload” describing a
security event, wrapped in an “envelope” providing metadata and context
for the security event.  The SET envelope is a JWT Claims Set as defined in
<xref target="RFC7519"></xref>, consisting of a JSON object containing a set of claims.  The
event payload is a JSON object contained within the SET envelope, itself
containing claims that express information about the event, e.g. the type
of event, the subject of the event, and other information defined in a
Profiling Specification.</t>

<t>This specification defines a core set of claims for use in SET envelopes
and event payloads, however Profiling Specifications MAY define additional
claims of both types.  It is RECOMMENDED that Profiling Specifications
define claims to be used in the event payload rather than the envelope.  If
a Profiling Specification does define envelope claims, those claims SHOULD
be registered in the JWT Token Claims Registry <xref target="IANA.JWT.Claims"></xref> or have
Public Claim Names as defined in Section 4.2 of <xref target="RFC7519"></xref>.</t>

<section anchor="claims" title="SET Claims">
<t>This specification profiles the following claims defined in <xref target="RFC7519"></xref> for
use in the SET envelope:</t>

<t><list style="hanging">
  <t hangText='iss'><vspace blankLines='0'/>
  A case-sensitive string identifying the principal that issued the SET,
as defined by Section 4.1.1 of <xref target="RFC7519"></xref>.  This claim is REQUIRED.</t>
  <t hangText='aud'><vspace blankLines='0'/>
  A case-sensitive string or array of case-sensitive strings identifying
the audience for the SET, as defined by Section 4.1.3 of <xref target="RFC7519"></xref>.  This
claim is RECOMMENDED.</t>
  <t hangText='exp'><vspace blankLines='0'/>
  As defined by Section 4.1.4 of <xref target="RFC7519"></xref>, this claim is the time after
which the JWT MUST NOT be accepted for processing.  In the context of a SET
however, this notion does not apply since a SET reflects something that
has already been processed and is historical in nature.  Use of this claim
is NOT RECOMMENDED.</t>
  <t hangText='iat'><vspace blankLines='0'/>
  A value identifying the time at which the SET was issued, as defined by
Section 4.1.6 of <xref target="RFC7519"></xref>.  This claim is REQUIRED.</t>
  <t hangText='jti'><vspace blankLines='0'/>
  A unique identifier for an event, as defined by Section 4.1.7 of
<xref target="RFC7519"></xref>.  This claim is REQUIRED.</t>
</list></t>

<t>This specification defines the following new claims for use in the SET
envelope:</t>

<t><list style="hanging">
  <t hangText='event'><vspace blankLines='0'/>
  A JSON object known as the “event payload”, whose contents identify the
type of event contained within the SET and contain additional information 
defined as part of an event type definition in a Profiling Specification.</t>
</list></t>

<t>This specification defines the following claims for use in event payloads:</t>

<t><list style="hanging">
  <t hangText='event_type'><vspace blankLines='0'/>
  A string containing a URI that uniquely identifies an event type
defined by a Profiling Specification.  This claim is REQUIRED.</t>
  <t hangText='event_id'><vspace blankLines='0'/>
  A string that identifies a specific “real world” event or state change
to which this event is related. Recipients MAY use this claim to correlate
events across different SETs received at different times and/or by different
systems. The value of this claim MUST be unique with respect to the
transmitter to a specific “real world” event or state change, however
recipients MUST NOT interpret a difference in “event_id” values as a
guarantee that two events are not related.  This claim is OPTIONAL.</t>
  <t hangText='event_subject'><vspace blankLines='0'/>
  A Subject Identifier that identifies the subject of the event.  (See:
  <xref target="subject"></xref>) This claim is RECOMMENDED. Profiling Specifications MAY omit
  this claim if the subject is implicitly known, or if the subject is
  identified by the JWT “sub” claim, in order to be compatible with one or
  more other specifications (e.g. <xref target="OpenID.Core"></xref>).  Profiling Specifications
  that use the JWT “sub” claim MUST reference the document that defines the
  semantics for that claim that the Profiling Specification is following,
  and MUST omit the “event_subject” payload claim.</t>
  <t hangText='event_time'><vspace blankLines='0'/>
  A number identifying the date and time at which the event is believed to
have occurred or will occur in the future.  Its value MUST take the form
of a NumericDate value, as defined in Section 2 of <xref target="RFC7519"></xref>.  This claim
is OPTIONAL, however if it is not present then the recipient MUST
interpret that to mean that no event time is being asserted, either
because there is no specific event time, the transmitter does not wish to
share it, or the transmitter does not know its value.</t>
</list></t>

<t>Both the SET envelope and event payload MAY contain additional claims, such
as those defined in a Profiling Specification.  The format and meaning of
these claims is out of scope of this specification.  Implementations SHOULD
ignore any claims in the SET envelope or event payload that they do not
understand.</t>

<t>The following is a non-normative example showing a SET envelope expressing
a hypothetical event with two additional claims in the event payload:</t>

<figure title="Example SET With Event Claims In Payload" anchor="figset"><artwork><![CDATA[
{
  "jti": "3d0c3cf797584bd193bd0fb1bd4e7d30",
  "iss": "https://transmitter.example.com",
  "aud": [ "https://receiver.example.com" ],
  "iat": 1458496025,
  "event": {
    "event_type": "https://secevent.example.com/example_event",
    "event_subject": {
      "identifier_type": "urn:ietf:params:secevent:subject:email",
      "email": "user@example.com"
    },
    "event_time": 1458492425,
    "claim_1": "foo",
    "claim_2": "bar"
  }
}
]]></artwork></figure>

<t>The payload in this example contains the following:</t>

<t><list style="symbols">
  <t>An “event_type” claim whose value is the URI identifying the
hypothetical event type.</t>
  <t>An “event_subject” claim whose value identifies a subject via email
address.</t>
  <t>An “event_time” claim whose value is the time at which the event occured.</t>
  <t>Two claims “claim_1” and “claim_2” that are defined by the hypothetical 
event type’s Profiling Specification.</t>
</list></t>

</section>
<section anchor="subject" title="Subject Identifiers">
<t>The Subject Identifier provides a common syntax for expressing the subject
of a security event.  A Subject Identifier is a JSON object representing an
instance of a Subject Identifier Type.  A Subject Identifier Type defines a
way of identifying the subject of an event. Typically this is done by
defining a set of one or more claims about a subject that when taken
together collectively identify that subject.  Each Subject Identifier Type
MUST have a name which MUST be registered in the IANA “SET Subject
Identifier Types” registry established by <xref target="iana-sit"></xref>.</t>

<t>A Subject Identifier MUST contain an “identifier_type” claim, whose value is
a string containing the name of the Subject Identifier’s Subject Identifier
Type.  All other claims within the Subject Identifier MUST be defined by the
Subject Identifier Type.</t>

<t>The names of the Subject Identifier Types defined below are registered in
the IANA “SET Subject Identifier Types” registry established by <xref target="iana-sit"></xref>.</t>

<section anchor="email-subject-identifier-type" title="Email Subject Identifier Type">
<t>The “Email” Subject Identifier Type identifies a subject by email address.
It has the name “email”, and contains a single additional claim:</t>

<t><list style="hanging">
  <t hangText='email'><vspace blankLines='0'/>
  A string containing an email address.  Its value SHOULD conform to
<xref target="RFC5322"></xref>.  This claim is REQUIRED.</t>
</list></t>

<t>The following is a non-normative example of a Subject Identifier
representing an instance of the Email Subject Identifier Type:</t>

<figure title="An Instance of the Email Subject Identifier Type" anchor="figemail"><artwork><![CDATA[
{
  "identifier_type": "email",
  "email": "user@example.com"
}
]]></artwork></figure>

</section>
<section anchor="phone-number-subject-identifier-type" title="Phone Number Subject Identifier Type">
<t>The “Phone Number” Subject Identifier Type identifies a subject by phone
number. It has the name “phone_number”, and contains a single claim:</t>

<t><list style="hanging">
  <t hangText='phone_number'><vspace blankLines='0'/>
  A string containing a phone number.  It SHOULD be formatted according to
<xref target="E.164"></xref>.  This claim is REQUIRED.</t>
</list></t>

<t>The following is a non-normative example of a Subject Identifier
representing an instance of the Phone Number Subject Identifier Type:</t>

<figure title="An Instance of the Phone Number Subject Identifier Type" anchor="figphone"><artwork><![CDATA[
{
  "identifier_type": "phone_number",
  "phone_number": "+1 206 555 0123"
}
]]></artwork></figure>

</section>
<section anchor="issuer-and-subject-subject-identifier-type" title="Issuer and Subject Subject Identifier Type">
<t>The “Issuer and Subject” Subject Identifier Type identifies a subject by an
issuer and subject pair.  It has the name “iss-sub”, and contains two
claims:</t>

<t><list style="hanging">
  <t hangText='iss'><vspace blankLines='0'/>
  A case-sensitive string identifying the principal who is responsible for
assignment of the identifier in the “sub” claim, as defined by Section 4.1.1
of <xref target="RFC7519"></xref>.  This claim is REQUIRED.</t>
  <t hangText='sub'><vspace blankLines='0'/>
  A case-sensitive string containing an identifier that identifies a subject
within the context of the principal identified by the “iss” claim, as
defined by Section 4.1.2 of <xref target="RFC7519"></xref>.  This claim is REQUIRED.</t>
</list></t>

<t>The following is a non-normative example of a Subject Identifier
representing an instance of the Issuer and Subject Subject Identifier Type:</t>

<figure title="An Instance of the Issuer and Subject Subject Identifier Type" anchor="figisssub"><artwork><![CDATA[
{
  "identifier_type": "iss-sub",
  "iss": "http://id.example.com",
  "sub": "example.user.1234"
}
]]></artwork></figure>

</section>
</section>
<section anchor="set-type" title="Explicit Typing of SETs">
<t>This specification registers the “application/secevent+jwt” media
type.  SETs MAY include this media type in the “typ” header parameter of
the JWT containing the SET to explicitly declare that the JWT is a SET.
This MUST be included if the SET could be used in an application context
in which it could be confused with other kinds of JWTs.  Profiling
Specifications MAY declare that this is REQUIRED for SETs containing events
defined by the Profiling Specification.</t>

<t>Per the definition of “typ” in Section 4.1.9 of <xref target="RFC7515"></xref>, it is
RECOMMENDED that the “application/” prefix be omitted.  Therefore,
the “typ” value used SHOULD be “secevent+jwt”.</t>

</section>
<section anchor="construction" title="Security Event Token Construction">
<t>A SET is a JWT, and therefore it’s construction follows that described in
<xref target="RFC7519"></xref>.</t>

<t>While this specification uses JWT to convey a SET, implementers SHALL
NOT use SETs to convey authentication or authorization assertions.</t>

<t>The following is the example JWT Claims Set from <xref target="figset"></xref>, expressed as
an unsigned JWT.  The JOSE Header is:</t>

<figure><artwork><![CDATA[
{"typ":"secevent+jwt","alg":"none"}
]]></artwork></figure>

<t>Base64url encoding of the octets of the UTF-8 representation of the
JOSE Header yields:</t>

<figure><artwork><![CDATA[
eyJ0eXAiOiJzZWNldmVudCtqd3QiLCJhbGciOiJub25lIn0
]]></artwork></figure>

<t>The example JWT Claims Set is encoded as follows:</t>

<figure><artwork><![CDATA[
ewogICJqdGkiOiAiM2QwYzNjZjc5NzU4NGJkMTkzYmQwZmIxYmQ0ZTdkMzAiLAogICJp
c3MiOiAiaHR0cHM6Ly90cmFuc21pdHRlci5leGFtcGxlLmNvbSIsCiAgImF1ZCI6IFsg
Imh0dHBzOi8vcmVjZWl2ZXIuZXhhbXBsZS5jb20iIF0sCiAgImlhdCI6IDE0NTg0OTYw
MjUsCiAgImV2ZW50IjogewogICAgImV2ZW50X3R5cGUiOiAiaHR0cHM6Ly9zZWNldmVu
dC5leGFtcGxlLmNvbS9leGFtcGxlX2V2ZW50IiwKICAgICJldmVudF9zdWJqZWN0Ijog
ewogICAgICAiaWRlbnRpZmllcl90eXBlIjogInVybjppZXRmOnBhcmFtczpzZWNldmVu
dDpzdWJqZWN0OmVtYWlsIiwKICAgICAgImVtYWlsIjogInVzZXJAZXhhbXBsZS5jb20i
CiAgICB9LAogICAgImV2ZW50X3RpbWUiOiAxNDU4NDkyNDI1LAogICAgImNsYWltXzEi
OiAiZm9vIiwKICAgICJjbGFpbV8yIjogImJhciIKICB9Cn0
]]></artwork></figure>

<t>The encoded JWS signature is the empty string.  Concatenating the
parts yields the following complete JWT:</t>

<figure title="Example Unsecured Security Event Token" anchor="figsetencoded"><artwork><![CDATA[
eyJ0eXAiOiJzZWNldmVudCtqd3QiLCJhbGciOiJub25lIn0.
ewogICJqdGkiOiAiM2QwYzNjZjc5NzU4NGJkMTkzYmQwZmIxYmQ0ZTdkMzAiLAogICJp
c3MiOiAiaHR0cHM6Ly90cmFuc21pdHRlci5leGFtcGxlLmNvbSIsCiAgImF1ZCI6IFsg
Imh0dHBzOi8vcmVjZWl2ZXIuZXhhbXBsZS5jb20iIF0sCiAgImlhdCI6IDE0NTg0OTYw
MjUsCiAgImV2ZW50IjogewogICAgImV2ZW50X3R5cGUiOiAiaHR0cHM6Ly9zZWNldmVu
dC5leGFtcGxlLmNvbS9leGFtcGxlX2V2ZW50IiwKICAgICJldmVudF9zdWJqZWN0Ijog
ewogICAgICAiaWRlbnRpZmllcl90eXBlIjogInVybjppZXRmOnBhcmFtczpzZWNldmVu
dDpzdWJqZWN0OmVtYWlsIiwKICAgICAgImVtYWlsIjogInVzZXJAZXhhbXBsZS5jb20i
CiAgICB9LAogICAgImV2ZW50X3RpbWUiOiAxNDU4NDkyNDI1LAogICAgImNsYWltXzEi
OiAiZm9vIiwKICAgICJjbGFpbV8yIjogImJhciIKICB9Cn0.
]]></artwork></figure>

<t>For the purpose of a simpler example in Figure 5, an unsecured token
was shown.  When SETs are not signed or encrypted, the Event Receiver
MUST employ other mechanisms such as TLS and HTTP to provide
integrity, confidentiality, and issuer validation, as needed by the
application.</t>

<t>When validation (i.e. auditing), or additional transmission security
is required, JWS signing and/or JWE encryption MAY be used.  To
create and or validate a signed and/or encrypted SET, follow the
instructions in Section 7 of <xref target="RFC7519"></xref>.</t>

</section>
</section>
<section anchor="related-events" title="Related Events">
<t>In order to accommodate use cases that require communicating multiple
related security events to an Event Receiver, this section defines the
“Related Events” event type.  A Related Events event is essentially a
container for two or more events that are related to one another, in that
they represent or express different aspects of the same event or state
change.  The Related Events event SHOULD NOT be used to combine unrelated
events into a single set, and MUST NOT be used as a general purpose batch
transmission mechanism.  Profiling Specifications that require an event
grouping mechanism with these or other semantics are encouraged to define
additional event types for their use cases.</t>

<t>The event type for the Related Events event is the URN
“urn:ietf:secevents:related_events”.</t>

<t>The Related Events event has a single additional event payload claim:</t>

<t><list style="hanging">
  <t hangText='events'><vspace blankLines='0'/>
  An array of event payloads, as defined in this document.  These event
payloads can be referred to as Nested Events for the Related Events event.
This claim is REQUIRED.</t>
</list></t>

<section anchor="related-events-proc" title="Processing Related Events">
<t>Nested Events can inherit the “event_id”, “event_subject”, and “event_time”
claims from the Related Events payload.  Transmitters MAY omit some, all, or
none of these claims from a Nested Event.  Transmitters MAY omit claims from
some Nested Events and include them in others within the same Related Events
event. When a claim is omitted, recipients MUST use the value of the
corresponding claim in the Related Event event’s payload.</t>

<t>The following is a non-normative example of a SET containing a Related
Events event:</t>

<figure title="Example SET Containing A Related Events Event" anchor="figrelated"><artwork><![CDATA[
{
  "jti": "1c0038c2-02db-40de-ad50-122a64724166",
  "iss": "https://transmitter.example.com",
  "aud": [ "https://receiver.example.com" ],
  "iat": 1510666261,
  "event": {
    "event_type": "urn:ietf:secevent:related_events",
    "event_subject": {
      "identifier_type": "email",
      "email": "user@example.com"
    },
    "event_id": "container",
    "event_time": 1510662661,
    "events": [
      {
        "event_id": "nested_1",
        "event_type": "http://specs.example.com/set_profile/event_1"
      },
      {
        "event_id": "nested_2",
        "event_type": "http://specs.example.com/set_profile/event_2",
        "event_time": 151059061
      }
    ]
  }
}
]]></artwork></figure>

<t>The following table demonstrates how Nested Events inherit values for
omitted claims:</t>

<figure title="Example of Event Payloads Inheriting Values for Omitted Claims" anchor="figomitted"><artwork><![CDATA[
         +-----------+------------+-------------------------------+         
         | Event ID  | Event Time | Event Subject                 |
         +-----------+------------+-------------------------------+
         | container | 151062661  | {                             |
         +-----------+            |   "identifier_type": "email", |
         | nested_1  |            |   "email": "user@example.com" |
         +-----------+------------+ }                             |
         | nested_2  | 151059061  |                               |
         +-----------+------------+-------------------------------+
]]></artwork></figure>

<t>Since the Nested Event with event ID “nested_1” omits the “event_time”
claim, it inherits the event time from the Related Events event payload.
Similarly, since both Nested Events “nested_1” and “nested_2” omit the
“event_subject” claim, both inherit the event subject from the Related
Events event payload.</t>

</section>
</section>
<section anchor="profile-req" title="Requirements for SET Profiles">
<t>Profiling Specifications for SETs define the syntax and semantics of
SETs conforming to that SET profile and rules for validating those
SETs.  The syntax defined by Profiling Specifications includes what
SET envelope and event payload claims are used by SETs expressing and
event defined by the profile.</t>

<t>Defining the semantics of the SET contents for SETs utilizing the
profile is equally important.  Possibly most important is defining
the procedures used to validate the SET issuer and to obtain the keys
controlled by the issuer that were used for cryptographic operations
used in the JWT representing the SET.  For instance, some profiles
may define an algorithm for retrieving the SET issuer’s keys that
uses the “iss” claim value as its input.  Likewise, if the profile
allows (or requires) that the JWT be unsecured, the means by which
the integrity of the JWT is ensured MUST be specified.</t>

<t>Profiling Specifications MUST define how the event Subject is
identified in the SET, as well as how to differentiate between the
event Subject’s Issuer and the SET Issuer, if applicable.  It is NOT
RECOMMENDED for Profiling Specifications to use the “sub” claim 
defined in <xref target="RFC7519"></xref> in cases in which the Subject is not globally
unique and has a different Issuer from the SET itself.</t>

<t>Profiling Specifications MUST clearly specify the steps that a
recipient of a SET utilizing that profile MUST perform to validate
that the SET is both syntactically and semantically valid.</t>

<section anchor="extensions" title="Extending Events">
<t>As needs change and new use cases develop, it may be desirable to augment
existing event definitions with new claims. In order to avoid collisions,
Profiling Specifications that extend existing events with additional event
payload claims SHOULD use Collision-Resistant Names as defined in Section 2
of <xref target="RFC7519"></xref> for the names of the new claims.</t>

</section>
</section>
<section anchor="security" title="Security Considerations">

<section anchor="c-and-i" title="Confidentiality and Integrity">
<t>SETs may often contain sensitive information.  Therefore, methods for
distribution of events SHOULD require the use of a transport-layer
security mechanism when distributing events.  Parties MUST support
TLS 1.2 <xref target="RFC5246"></xref> and MAY support additional transport-layer
mechanisms meeting its security requirements.  When using TLS, the
client MUST perform a TLS/SSL server certificate check, per
<xref target="RFC6125"></xref>.  Implementation security considerations for TLS can be
found in “Recommendations for Secure Use of TLS and DTLS” <xref target="RFC7525"></xref>.</t>

<t>Security Events distributed through third-parties or that carry
personally identifiable information, SHOULD be encrypted using JWE
<xref target="RFC7516"></xref> or secured for confidentiality by other means.</t>

<t>Unless integrity of the JWT is ensured by other means, it MUST be
signed using JWS <xref target="RFC7515"></xref> so that individual events can be
authenticated and validated by the Event Receiver.</t>

</section>
<section anchor="delivery" title="Delivery">
<t>This specification does not define a delivery mechanism by itself.
In addition to confidentiality and integrity (discussed above),
implementers and Profiling Specifications MUST consider the
consequences of delivery mechanisms that are not secure and/or not
assured.  For example, while a SET may be end-to-end secured using
JWE encrypted SETs, without TLS there is no assurance that the
correct endpoint received the SET and that it could be successfully
processed.</t>

</section>
<section anchor="sequencing" title="Sequencing">
<t>As defined in this specification, there is no defined way to order
multiple SETs in a sequence.  Depending on the type and nature of SET
event, order may or may not matter.  For example, in provisioning,
event order is critical – an object could not be modified before it
was created.  In other SET types, such as a token revocation, the
order of SETs for revoked tokens does not matter.  If however, the
event was described as a log-in or logged-out status for a user
subject, then order becomes important.</t>

<t>Profiling Specifications and implementers SHOULD take caution when
using timestamps such as “iat” to define order.  Distributed systems
will have some amount of clock-skew and thus time by itself will not
guarantee order.</t>

<t>Specifications profiling SET SHOULD define a mechanism for detecting
order or sequence of events.</t>

</section>
<section anchor="timing" title="Timing Issues">
<t>When SETs are delivered asynchronously and/or out-of-band with
respect to the original action that incurred the security event, it
is important to consider that a SET might be delivered to an Event
Receiver in advance or well behind the process that caused the event.
For example, a user having been required to logout and then log back
in again, may cause a logout SET to be issued that may arrive at the
same time as the user-agent accesses a web site having just logged-
in.  If timing is not handled properly, the effect would be to
erroneously treat the new user session as logged out.  Profiling
Specifications SHOULD be careful to anticipate timing and subject
selection information.  For example, it might be more appropriate to
cancel a “session” rather than a “user”.  Alternatively, the
specification could use timestamps that allows new sessions to be
started immediately after a stated logout event time.</t>

</section>
<section anchor="not-id-tokens" title="Distinguishing SETs from ID Tokens">
<t>Because <xref target="RFC7519"></xref> states that “all claims that are not understood by
implementations MUST be ignored”, there is a consideration that a SET
token might be confused with ID Token <xref target="OpenID.Core"></xref> if a SET is
mistakenly or intentionally used in a context requiring an ID Token.
If a SET could otherwise be interpreted as a valid ID Token (because
it includes the required claims for an ID Token and valid issuer and
audience claim values for an ID Token) then that SET profile MUST
require that the “exp” claim not be present in the SET.  Because
“exp” is a required claim in ID Tokens, valid ID Token
implementations will reject such a SET if presented as if it were an
ID Token.</t>

<t>Excluding “exp” from SETs that could otherwise be confused with ID
Tokens is actually defense in depth.  In any OpenID Connect contexts
in which an attacker could attempt to substitute a SET for an ID
Token, the SET would actually already be rejected as an ID Token
because it would not contain the correct “nonce” claim value for the
ID Token to be accepted in contexts for which substitution is
possible.</t>

<t>Note that the use of explicit typing, as described in Section 2.2,
will not achieve disambiguation between ID Tokens and SETs, as the ID
Token validation rules do not use the “typ” header parameter value.</t>

</section>
<section anchor="not-access-tokens" title="Distinguishing SETs from Access Tokens">
<t>OAuth 2.0 <xref target="RFC6749"></xref> defines access tokens as being opaque.
Nonetheless, some implementations implement access tokens as JWTs.
Because the structure of these JWTs is implementation-specific,
ensuring that a SET cannot be confused with such an access token is
therefore likewise, in general, implementation specific.
Nonetheless, it is recommended that SET profiles employ the following
strategies to prevent possible substitutions of SETs for access
tokens in contexts in which that might be possible:</t>

<t><list style="symbols">
  <t>Prohibit use of the “exp” claim, as is done to prevent ID Token
confusion.</t>
  <t>Where possible, use a separate “aud” claim value to distinguish
between the Event Receiver and the protected resource that is the
audience of an access token.</t>
  <t>Modify access token validation systems to check for the presence
of the “events” claim as a means to detect security event tokens.
This is particularly useful if the same endpoint may receive both
types of tokens.</t>
  <t>Employ explicit typing, as described in Section 2.2, and modify
access token validation systems to use the “typ” header parameter
value.</t>
</list></t>

</section>
<section anchor="not-other-jwts" title="Distinguishing SETs from other kinds of JWTs">
<t>JWTs are now being used in application areas beyond the identity
applications in which they first appeared.  For instance, the Session
Initiation Protocol (SIP) Via Header Field <xref target="RFC8055"></xref> and Personal
Assertion Token (PASSporT) <xref target="I-D.ietf-stir-passport"></xref> specifications
both define JWT profiles that use mostly or completely different sets
of claims than are used by ID Tokens.  If it would otherwise be
possible for an attacker to substitute a SET for one of these (or
other) kinds of JWTs, then the SET profile must be defined in such a
way that any substituted SET will result in its rejection when
validated as the intended kind of JWT.</t>

<t>The most direct way to prevent confusion is to employ explicit
typing, as described in Section 2.2, and modify applicable token
validation systems to use the “typ” header parameter value.  This
approach can be employed for new systems but may not be applicable to
existing systems.</t>

<t>Another way to ensure that a SET is not confused with another kind of
JWT is to have the JWT validation logic reject JWTs containing an
“events” claim unless the JWT is intended to be a SET.  This approach
can be employed for new systems but may not be applicable to existing
systems.</t>

<t>For many use cases, the simplest way to prevent substitution is
requiring that the SET not include claims that are required for the
kind of JWT that might be the target of an attack.  For example, for
<xref target="RFC8055"></xref>, the “sip_callid” claim could be omitted and for
<xref target="I-D.ietf-stir-passport"></xref>, the “orig” claim could be omitted.</t>

<t>In many contexts, simple measures such as these will accomplish the
task, should confusion otherwise even be possible.  Note that this
topic is being explored in a more general fashion in JSON Web Token
Best Current Practices <xref target="I-D.sheffer-oauth-jwt-bcp"></xref>.  The proposed
best practices in that draft may also be applicable for particular
SET profiles and use cases.</t>

</section>
</section>
<section anchor="privacy" title="Privacy Considerations">
<t>If a SET needs to be retained for audit purposes, JWS MAY be used to
provide verification of its authenticity.</t>

<t>Event Transmitters SHOULD attempt to specialize feeds so that the
content is targeted to the specific business and protocol needs of an
Event Receiver.</t>

<t>When sharing personally identifiable information or information that
is otherwise considered confidential to affected users, Event
Transmitters and Receivers MUST have the appropriate legal agreements
and user consent or terms of service in place.</t>

<t>The propagation of subject identifiers can be perceived as personally
identifiable information.  Where possible, Event Transmitters and
Receivers SHOULD devise approaches that prevent propagation – for
example, the passing of a hash value that requires the Event Receiver
to know the subject.</t>

</section>
<section anchor="iana" title="IANA Considerations">

<section anchor="iana-sit" title="SET Subject Identifier Types Registry">
<t>This section establishes the IANA “SET Subject Identifier Types” registry
// TODO</t>

</section>
<section anchor="iana-claims" title="JSON Web Token Claims Registration">
<t>This specification registers the “event” claim in the IANA “JSON Web Token
Claims” registry <xref target="IANA.JWT.Claims"></xref> established by <xref target="RFC7519"></xref>.</t>

<section anchor="registry-contents" title="Registry Contents">
<t><list style="symbols">
  <t>Claim Name: “event”</t>
  <t>Claim Description: Security Event Payload</t>
  <t>Change Controller: IESG</t>
  <t>Specification Document(s): Section 2.1 of [[ this specification ]]</t>
</list></t>

</section>
</section>
<section anchor="iana-media-type" title="Media Type Registration">

<section anchor="registry-contents-1" title="Registry Contents">
<t>This section registers the “application/secevent+jwt” media type
<xref target="RFC2046"></xref> in the “Media Types” registry <xref target="IANA.MediaTypes"></xref> in the
manner described in <xref target="RFC6838"></xref>, which can be used to indicate that the
content is a SET.</t>

<t><list style="symbols">
  <t>Type name: application</t>
  <t>Subtype name: secevent+jwt</t>
  <t>Required parameters: n/a</t>
  <t>Optional parameters: n/a</t>
  <t>Encoding considerations: 8bit; A SET is a JWT; JWT values are
encoded as a series of base64url-encoded values (some of which may
be the empty string) separated by period (‘.’) characters.</t>
  <t>Security considerations: See the Security Considerations section
of [[ this specification ]]</t>
  <t>Interoperability considerations: n/a</t>
  <t>Published specification: Section 2.2 of [[ this specification ]]</t>
  <t>Applications that use this media type: TBD</t>
  <t>Fragment identifier considerations: n/a</t>
  <t>Additional information:</t>
  <t>Magic number(s): n/a</t>
  <t>File extension(s): n/a</t>
  <t>Macintosh file type code(s): n/a</t>
  <t>Person &amp; email address to contact for further information:
Michael B. Jones, mbj@microsoft.com</t>
  <t>Intended usage: COMMON</t>
  <t>Restrictions on usage: none</t>
  <t>Author: Michael B. Jones, mbj@microsoft.com</t>
  <t>Change controller: IESG</t>
  <t>Provisional registration?  No</t>
</list></t>

</section>
</section>
</section>


  </middle>

  <back>

    <references title='Normative References'>

<reference anchor="IANA.JWT.Claims" target="http://www.iana.org/assignments/jwt">
  <front>
    <title>JSON Web Token Claims</title>
    <author >
      <organization>IANA</organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="IANA.MediaTypes" target="http://www.iana.org/assignments/media-types">
  <front>
    <title>Media Types</title>
    <author >
      <organization>IANA</organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>




<reference  anchor="RFC2119" target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC3986" target='https://www.rfc-editor.org/info/rfc3986'>
<front>
<title>Uniform Resource Identifier (URI): Generic Syntax</title>
<author initials='T.' surname='Berners-Lee' fullname='T. Berners-Lee'><organization /></author>
<author initials='R.' surname='Fielding' fullname='R. Fielding'><organization /></author>
<author initials='L.' surname='Masinter' fullname='L. Masinter'><organization /></author>
<date year='2005' month='January' />
<abstract><t>A Uniform Resource Identifier (URI) is a compact sequence of characters that identifies an abstract or physical resource.  This specification defines the generic URI syntax and a process for resolving URI references that might be in relative form, along with guidelines and security considerations for the use of URIs on the Internet.  The URI syntax defines a grammar that is a superset of all valid URIs, allowing an implementation to parse the common components of a URI reference without knowing the scheme-specific requirements of every possible identifier.  This specification does not define a generative grammar for URIs; that task is performed by the individual specifications of each URI scheme.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='STD' value='66'/>
<seriesInfo name='RFC' value='3986'/>
<seriesInfo name='DOI' value='10.17487/RFC3986'/>
</reference>



<reference  anchor="RFC5246" target='https://www.rfc-editor.org/info/rfc5246'>
<front>
<title>The Transport Layer Security (TLS) Protocol Version 1.2</title>
<author initials='T.' surname='Dierks' fullname='T. Dierks'><organization /></author>
<author initials='E.' surname='Rescorla' fullname='E. Rescorla'><organization /></author>
<date year='2008' month='August' />
<abstract><t>This document specifies Version 1.2 of the Transport Layer Security (TLS) protocol.  The TLS protocol provides communications security over the Internet.  The protocol allows client/server applications to communicate in a way that is designed to prevent eavesdropping, tampering, or message forgery.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5246'/>
<seriesInfo name='DOI' value='10.17487/RFC5246'/>
</reference>



<reference  anchor="RFC5322" target='https://www.rfc-editor.org/info/rfc5322'>
<front>
<title>Internet Message Format</title>
<author initials='P.' surname='Resnick' fullname='P. Resnick' role='editor'><organization /></author>
<date year='2008' month='October' />
<abstract><t>This document specifies the Internet Message Format (IMF), a syntax for text messages that are sent between computer users, within the framework of &quot;electronic mail&quot; messages.  This specification is a revision of Request For Comments (RFC) 2822, which itself superseded Request For Comments (RFC) 822, &quot;Standard for the Format of ARPA Internet Text Messages&quot;, updating it to reflect current practice and incorporating incremental changes that were specified in other RFCs.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5322'/>
<seriesInfo name='DOI' value='10.17487/RFC5322'/>
</reference>



<reference  anchor="RFC6125" target='https://www.rfc-editor.org/info/rfc6125'>
<front>
<title>Representation and Verification of Domain-Based Application Service Identity within Internet Public Key Infrastructure Using X.509 (PKIX) Certificates in the Context of Transport Layer Security (TLS)</title>
<author initials='P.' surname='Saint-Andre' fullname='P. Saint-Andre'><organization /></author>
<author initials='J.' surname='Hodges' fullname='J. Hodges'><organization /></author>
<date year='2011' month='March' />
<abstract><t>Many application technologies enable secure communication between two entities by means of Internet Public Key Infrastructure Using X.509 (PKIX) certificates in the context of Transport Layer Security (TLS). This document specifies procedures for representing and verifying the identity of application services in such interactions.   [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6125'/>
<seriesInfo name='DOI' value='10.17487/RFC6125'/>
</reference>



<reference  anchor="RFC6749" target='https://www.rfc-editor.org/info/rfc6749'>
<front>
<title>The OAuth 2.0 Authorization Framework</title>
<author initials='D.' surname='Hardt' fullname='D. Hardt' role='editor'><organization /></author>
<date year='2012' month='October' />
<abstract><t>The OAuth 2.0 authorization framework enables a third-party application to obtain limited access to an HTTP service, either on behalf of a resource owner by orchestrating an approval interaction between the resource owner and the HTTP service, or by allowing the third-party application to obtain access on its own behalf.  This specification replaces and obsoletes the OAuth 1.0 protocol described in RFC 5849.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6749'/>
<seriesInfo name='DOI' value='10.17487/RFC6749'/>
</reference>



<reference  anchor="RFC7519" target='https://www.rfc-editor.org/info/rfc7519'>
<front>
<title>JSON Web Token (JWT)</title>
<author initials='M.' surname='Jones' fullname='M. Jones'><organization /></author>
<author initials='J.' surname='Bradley' fullname='J. Bradley'><organization /></author>
<author initials='N.' surname='Sakimura' fullname='N. Sakimura'><organization /></author>
<date year='2015' month='May' />
<abstract><t>JSON Web Token (JWT) is a compact, URL-safe means of representing claims to be transferred between two parties.  The claims in a JWT are encoded as a JSON object that is used as the payload of a JSON Web Signature (JWS) structure or as the plaintext of a JSON Web Encryption (JWE) structure, enabling the claims to be digitally signed or integrity protected with a Message Authentication Code (MAC) and/or encrypted.</t></abstract>
</front>
<seriesInfo name='RFC' value='7519'/>
<seriesInfo name='DOI' value='10.17487/RFC7519'/>
</reference>



<reference  anchor="RFC7525" target='https://www.rfc-editor.org/info/rfc7525'>
<front>
<title>Recommendations for Secure Use of Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS)</title>
<author initials='Y.' surname='Sheffer' fullname='Y. Sheffer'><organization /></author>
<author initials='R.' surname='Holz' fullname='R. Holz'><organization /></author>
<author initials='P.' surname='Saint-Andre' fullname='P. Saint-Andre'><organization /></author>
<date year='2015' month='May' />
<abstract><t>Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS) are widely used to protect data exchanged over application protocols such as HTTP, SMTP, IMAP, POP, SIP, and XMPP.  Over the last few years, several serious attacks on TLS have emerged, including attacks on its most commonly used cipher suites and their modes of operation.  This document provides recommendations for improving the security of deployed services that use TLS and DTLS. The recommendations are applicable to the majority of use cases.</t></abstract>
</front>
<seriesInfo name='BCP' value='195'/>
<seriesInfo name='RFC' value='7525'/>
<seriesInfo name='DOI' value='10.17487/RFC7525'/>
</reference>


<reference anchor="E.164" target="http://www.itu.int/rec/T-REC-E.164-201011-I/en">
  <front>
    <title>The international public telecommunication numbering plan</title>
    <author >
      <organization>International Telecommunication Union</organization>
    </author>
    <date year="2010"/>
  </front>
</reference>


    </references>

    <references title='Informative References'>





<reference anchor="I-D.ietf-stir-passport">
<front>
<title>Personal Assertion Token (PASSporT)</title>

<author initials='C' surname='Wendt' fullname='Chris Wendt'>
    <organization />
</author>

<author initials='J' surname='Peterson' fullname='Jon Peterson'>
    <organization />
</author>

<date month='February' day='9' year='2017' />

<abstract><t>This document defines a method for creating and validating a token that cryptographically verifies an originating identity, or more generally a URI or telephone number representing the originator of personal communications.  The PASSporT token is cryptographically signed to protect the integrity of the identity the originator and to verify the assertion of the identity information at the destination. The cryptographic signature is defined with the intention that it can confidently verify the originating persona even when the signature is sent to the destination party over an insecure channel.  PASSporT is particularly useful for many personal communications applications over IP networks and other multi-hop interconnection scenarios where the originating and destination parties may not have a direct trusted relationship.</t></abstract>

</front>

<seriesInfo name='Internet-Draft' value='draft-ietf-stir-passport-11' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-ietf-stir-passport-11.txt' />
</reference>



<reference anchor="I-D.sheffer-oauth-jwt-bcp">
<front>
<title>JSON Web Token Best Current Practices</title>

<author initials='Y' surname='Sheffer' fullname='Yaron Sheffer'>
    <organization />
</author>

<author initials='D' surname='Hardt' fullname='Dick Hardt'>
    <organization />
</author>

<author initials='M' surname='Jones' fullname='Michael Jones'>
    <organization />
</author>

<date month='July' day='3' year='2017' />

<abstract><t>JSON Web Tokens, also known as JWTs [RFC7519], are URL-safe JSON- based security tokens that contain a set of claims that can be signed and/or encrypted.  JWTs are being widely used and deployed as a simple security token format in numerous protocols and applications, both in the area of digital identity, and in other application areas. The goal of this Best Current Practices document is to provide actionable guidance leading to secure implementation and deployment of JWTs.</t></abstract>

</front>

<seriesInfo name='Internet-Draft' value='draft-sheffer-oauth-jwt-bcp-01' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-sheffer-oauth-jwt-bcp-01.txt' />
</reference>


<reference anchor="OpenID.Core" target="http://openid.net/specs/openid-connect-core-1_0.html">
  <front>
    <title>OpenID Connect Core 1.0</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>




<reference  anchor="RFC2046" target='https://www.rfc-editor.org/info/rfc2046'>
<front>
<title>Multipurpose Internet Mail Extensions (MIME) Part Two: Media Types</title>
<author initials='N.' surname='Freed' fullname='N. Freed'><organization /></author>
<author initials='N.' surname='Borenstein' fullname='N. Borenstein'><organization /></author>
<date year='1996' month='November' />
<abstract><t>This second document defines the general structure of the MIME media typing system and defines an initial set of media types.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='2046'/>
<seriesInfo name='DOI' value='10.17487/RFC2046'/>
</reference>



<reference  anchor="RFC6838" target='https://www.rfc-editor.org/info/rfc6838'>
<front>
<title>Media Type Specifications and Registration Procedures</title>
<author initials='N.' surname='Freed' fullname='N. Freed'><organization /></author>
<author initials='J.' surname='Klensin' fullname='J. Klensin'><organization /></author>
<author initials='T.' surname='Hansen' fullname='T. Hansen'><organization /></author>
<date year='2013' month='January' />
<abstract><t>This document defines procedures for the specification and registration of media types for use in HTTP, MIME, and other Internet protocols.  This memo documents an Internet Best Current Practice.</t></abstract>
</front>
<seriesInfo name='BCP' value='13'/>
<seriesInfo name='RFC' value='6838'/>
<seriesInfo name='DOI' value='10.17487/RFC6838'/>
</reference>



<reference  anchor="RFC7515" target='https://www.rfc-editor.org/info/rfc7515'>
<front>
<title>JSON Web Signature (JWS)</title>
<author initials='M.' surname='Jones' fullname='M. Jones'><organization /></author>
<author initials='J.' surname='Bradley' fullname='J. Bradley'><organization /></author>
<author initials='N.' surname='Sakimura' fullname='N. Sakimura'><organization /></author>
<date year='2015' month='May' />
<abstract><t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures.  Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification.  Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t></abstract>
</front>
<seriesInfo name='RFC' value='7515'/>
<seriesInfo name='DOI' value='10.17487/RFC7515'/>
</reference>



<reference  anchor="RFC7516" target='https://www.rfc-editor.org/info/rfc7516'>
<front>
<title>JSON Web Encryption (JWE)</title>
<author initials='M.' surname='Jones' fullname='M. Jones'><organization /></author>
<author initials='J.' surname='Hildebrand' fullname='J. Hildebrand'><organization /></author>
<date year='2015' month='May' />
<abstract><t>JSON Web Encryption (JWE) represents encrypted content using JSON-based data structures.  Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and IANA registries defined by that specification.  Related digital signature and Message Authentication Code (MAC) capabilities are described in the separate JSON Web Signature (JWS) specification.</t></abstract>
</front>
<seriesInfo name='RFC' value='7516'/>
<seriesInfo name='DOI' value='10.17487/RFC7516'/>
</reference>



<reference  anchor="RFC8055" target='https://www.rfc-editor.org/info/rfc8055'>
<front>
<title>Session Initiation Protocol (SIP) Via Header Field Parameter to Indicate Received Realm</title>
<author initials='C.' surname='Holmberg' fullname='C. Holmberg'><organization /></author>
<author initials='Y.' surname='Jiang' fullname='Y. Jiang'><organization /></author>
<date year='2017' month='January' />
<abstract><t>This specification defines a new Session Initiation Protocol (SIP) Via header field parameter, 'received-realm', which allows a SIP entity acting as an entry point to a transit network to indicate from which adjacent upstream network a SIP request is received by using a network realm value associated with the adjacent network.</t></abstract>
</front>
<seriesInfo name='RFC' value='8055'/>
<seriesInfo name='DOI' value='10.17487/RFC8055'/>
</reference>




    </references>


<section anchor="ack" title="Acknowledgments">
<t>The editors would like to thank Phil Hunt for his SET draft – on which much
of this specification is based – and his continuing contributions to this
draft.</t>

<t>The editors would like to thank the participants on the IETF secevent
mailing list and related working groups for their support of this
specification.</t>

</section>


  </back>

<!-- ##markdown-source:
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
y9RaqYsAAA==

-->

</rfc>

