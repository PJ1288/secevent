<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.3 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>

<rfc ipr="trust200902" docName="draft-backman-secevent-token-02" category="std">

  <front>
    <title abbrev="secevent-token">Security Event Token (SET)</title>

    <author initials="A." surname="Backman" fullname="Annabelle Backman">
      <organization>Amazon</organization>
      <address>
        <email>richanna@amazon.com</email>
      </address>
    </author>
    <author initials="W." surname="Denniss" fullname="William Denniss">
      <organization>Google</organization>
      <address>
        <email>wdenniss@google.com</email>
      </address>
    </author>
    <author initials="M." surname="Ansari" fullname="Morteza Ansari">
      <organization>Cisco</organization>
      <address>
        <email>morteza.ansari@cisco.com</email>
      </address>
    </author>
    <author initials="M." surname="Jones" fullname="Michael B. Jones">
      <organization>Microsoft</organization>
      <address>
        <email>mbj@microsoft.com</email>
        <uri>http://self-issued.info/</uri>
      </address>
    </author>

    <date year="2017" month="November" day="29"/>

    <area>Security</area>
    <workgroup>secevent</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This specification defines the Security Event Token, which may be
distributed via a protocol such as HTTP.  The Security Event Token
(SET) specification profiles the JSON Web Token (JWT), which can be
optionally signed and/or encrypted.  A SET describes a statement of
fact from the perspective of an issuer that it intends to share with
one or more receivers.</t>



    </abstract>


  </front>

  <middle>


<section anchor="intro" title="Introduction">
<t>This specification defines an extensible Security Event Token (SET)
format which may be exchanged using protocols such as HTTP.  The
specification builds on the JSON Web Token (JWT) format <xref target="RFC7519"></xref> in
order to provide a self-contained token that can be optionally signed
using JSON Web Signature (JWS) <xref target="RFC7515"></xref> and/or encrypted using JSON
Web Encryption (JWE) <xref target="RFC7516"></xref>.</t>

<t>This specification profiles the use of JWT for the purpose of issuing
security event tokens (SETs).  This specification defines a base
format upon which profiling specifications define actual events and
their meanings.  Unless otherwise specified, this specification uses
non-normative example events intended to demonstrate how events may
be constructed.</t>

<t>This specification is scoped to security and identity related events.
While security event tokens may be used for other purposes, the
specification only considers security and privacy concerns relevant
to identity and personal information.</t>

<t>Security Events are not commands issued between parties.  A security
event is a statement of fact from the perspective of an issuer about
the state of a security subject (e.g., a web resource, token, IP
address, the issuer itself) that the issuer controls or is aware of,
that has changed in some way (explicitly or implicitly).  A security
subject MAY be permanent (e.g., a user account) or temporary (e.g.,
an HTTP session) in nature.  A state change could describe a direct
change of entity state, an implicit change of state or other higher-
level security statements such as:</t>

<t><list style="symbols">
  <t>The creation, modification, removal of a resource.</t>
  <t>The resetting or suspension of an account.</t>
  <t>The revocation of a security token prior to its expiry.</t>
  <t>The logout of a user session.  Or,</t>
  <t>A cumulative conclusion such as to indicate that a user has taken
over an email identifier that may have been used in the past by
another user.</t>
</list></t>

<t>While subject state changes are often triggered by a user-agent or
security-subsystem, the issuance and transmission of an event often
occurs asynchronously and in a back-channel to the action which
caused the change that generated the security event.  Subsequently,
an Event Receiver, having received a SET, validates and interprets
the received SET and takes its own independent actions, if any.  For
example, having been informed of a personal identifier being
associated with a different security subject (e.g., an email address
is being used by someone else), the Event Receiver may choose to
ensure that the new user is not granted access to resources
associated with the previous user.  Or, the Event Receiver may not
have any relationship with the subject, and no action is taken.</t>

<t>While Event Receivers will often take actions upon receiving SETs,
security events cannot be assumed to be commands or requests.  The
intent of this specification is to define a way of exchanging
statements of fact that Event Receivers may interpret for their own
purposes.  As such, SETs have no capability for error signaling other
to ensure the validation of a received SET.</t>

<section anchor="conv" title="Notational Conventions">
<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”,
“SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and
“OPTIONAL” in this document are to be interpreted as described in
<xref target="RFC2119"></xref>.  These keywords are capitalized when used to unambiguously
specify requirements of the protocol or application features and
behavior that affect the inter-operability and security of
implementations.  When these words are not capitalized, they are
meant in their natural-language sense.</t>

<t>For purposes of readability, examples are not URL encoded.
Implementers MUST percent encode URLs as described in Section 2.1 of
<xref target="RFC3986"></xref>.</t>

<t>Throughout this document, all figures MAY contain spaces and extra
line-wrapping for readability and space limitations.  Similarly, some
URIs contained within examples have been shortened for space and
readability reasons.</t>

</section>
<section anchor="defn" title="Definitions">
<t>The following definitions are used with SETs:</t>

<t><list style="hanging">
  <t hangText='Security Event Token (SET)'><vspace blankLines='0'/>
  A SET is a JWT <xref target="RFC7519"></xref> that contains an event payload describing
a security event.</t>
  <t hangText='Event Transmitter'><vspace blankLines='0'/>
  A service provider that delivers SETs to other providers known as
Event Receivers.</t>
  <t hangText='Event Receiver'><vspace blankLines='0'/>
  An Event Receiver is an entity that receives SETs through some
distribution method.  An Event Receiver is the same entity
referred as “recipient” or “receiver” in and related
specifications.  <xref target="RFC7519"></xref></t>
  <t hangText='Subject'><vspace blankLines='0'/>
  A SET describes an event or state change that has occurred about a
Subject.  A Subject may be a principal (e.g., Section 4.1.2
<xref target="RFC7519"></xref>), a web resource, an entity such as an IP address, or
the issuer itself that a SET might reference.</t>
  <t hangText='Profiling Specification'><vspace blankLines='0'/>
  A specification that uses the SET Token specification to define one or
more event types and the associated claims included.</t>
</list></t>

</section>
</section>
<section anchor="set" title="The Security Event Token (SET)">
<t>A SET is a data structure that encodes an “event payload” describing a
security event, wrapped in an “envelope” providing metadata and context
for the security event.  The SET envelope is a JWT Claims Set as defined in
<xref target="RFC7519"></xref>, consisting of a JSON object containing a set of claims.  The
event payload is a JSON object contained within the SET envelope, itself
containing claims that express information about the event, e.g. the type
of event, the subject of the event, and other information defined in a
Profiling Specification.</t>

<t>This specification defines a core set of claims for use in SET envelopes
and event payloads, however Profiling Specifications MAY define additional
claims of both types.  It is RECOMMENDED that Profiling Specifications
define claims to be used in the event payload rather than the envelope.  If
a Profiling Specification does define envelope claims, those claims SHOULD
be registered in the JWT Token Claims Registry <xref target="IANA.JWT.Claims"></xref> or have
Public Claim Names as defined in Section 4.2 of <xref target="RFC7519"></xref>.</t>

<section anchor="claims" title="SET Claims">
<t>This specification profiles the following claims defined in <xref target="RFC7519"></xref> for
use in the SET envelope:</t>

<t><list style="hanging">
  <t hangText='iss'><vspace blankLines='0'/>
  A case-sensitive string identifying the principal that issued the SET,
as defined by Section 4.1.1 of <xref target="RFC7519"></xref>.  This claim is REQUIRED.</t>
  <t hangText='aud'><vspace blankLines='0'/>
  A case-sensitive string or array of case-sensitive strings identifying
the audience for the SET, as defined by Section 4.1.3 of <xref target="RFC7519"></xref>.  This
claim is RECOMMENDED.</t>
  <t hangText='exp'><vspace blankLines='0'/>
  As defined by Section 4.1.4 of <xref target="RFC7519"></xref>, this claim is the time after
which the JWT MUST NOT be accepted for processing.  In the context of a SET
however, this notion does not apply since a SET reflects something that
has already been processed and is historical in nature.  Use of this claim
is NOT RECOMMENDED.</t>
  <t hangText='iat'><vspace blankLines='0'/>
  A value identifying the time at which the SET was issued, as defined by
Section 4.1.6 of <xref target="RFC7519"></xref>.  Since SETs typically describe events that have
already occurred, this is likely to be different from the value stored in
the “event_time” payload claim (see below).  This claim is REQUIRED.</t>
  <t hangText='jti'><vspace blankLines='0'/>
  A unique identifier for an event, as defined by Section 4.1.7 of
<xref target="RFC7519"></xref>.  This claim is REQUIRED.</t>
</list></t>

<t>This specification defines the following new claims for use in the SET
envelope:</t>

<t><list style="hanging">
  <t hangText='event'><vspace blankLines='0'/>
  A JSON object known as the “event payload”, whose contents identify the
type of event contained within the SET and contain additional information 
defined as part of an event type definition in a Profiling Specification.</t>
</list></t>

<t>This specification defines the following claims for use in event payloads:</t>

<t><list style="hanging">
  <t hangText='event_type'><vspace blankLines='0'/>
  A string containing a URI that uniquely identifies an event type
defined by a Profiling Specification.  This claim is REQUIRED.</t>
  <t hangText='event_id'><vspace blankLines='0'/>
  A string that identifies a specific “real world” event or state change
to which this event is related. Recipients MAY use this claim to correlate
events across different SETs received at different times and/or by different
systems. The value of this claim MUST be unique with respect to the
transmitter to a specific “real world” event or state change, however
recipients MUST NOT interpret a difference in “event_id” values as a
guarantee that two events are not related.  This claim is OPTIONAL.</t>
  <t hangText='event_subject'><vspace blankLines='0'/>
  A Subject Identifier that identifies the subject of the event.  (See:
  <xref target="subject"></xref>) This claim is RECOMMENDED. Profiling Specifications MAY use
  the JWT “sub” claim to identify the subject, in order to be compatible 
  with one or more other specifications (e.g. <xref target="OpenID.Core"></xref>).  Profiling Specifications
  that do so MUST reference the document that defines the semantics for the
  “sub” claim that the Profiling Specification is following, and MUST omit
  the “event_subject” payload claim.</t>
  <t hangText='event_time'><vspace blankLines='0'/>
  A number identifying the date and time at which the event is believed to
have occurred or will occur in the future.  Its value MUST take the form
of a NumericDate value, as defined in Section 2 of <xref target="RFC7519"></xref>.  This claim
is OPTIONAL, however if it is not present then the recipient MUST
interpret that to mean that no event time is being asserted, either
because there is no specific event time, the transmitter does not wish to
share it, or the transmitter does not know its value.</t>
</list></t>

<t>Both the SET envelope and event payload MAY contain additional claims, such
as those defined in a Profiling Specification.  The format and meaning of
these claims is out of scope of this specification.  Implementations SHOULD
ignore any claims in the SET envelope or event payload that they do not
understand.</t>

<t>The following is a non-normative example showing a SET envelope expressing
a hypothetical event with two additional claims in the event payload:</t>

<figure title="Example SET With Event Claims In Payload" anchor="figset"><artwork><![CDATA[
{
  "jti": "3d0c3cf797584bd193bd0fb1bd4e7d30",
  "iss": "https://transmitter.example.com",
  "aud": [ "https://receiver.example.com" ],
  "iat": 1458496025,
  "event": {
    "event_type": "https://secevent.example.com/example_event",
    "event_subject": {
      "identifier_type": "urn:ietf:params:secevent:subject:email",
      "email": "user@example.com"
    },
    "event_time": 1458492425,
    "claim_1": "foo",
    "claim_2": "bar"
  }
}
]]></artwork></figure>

<t>The payload in this example contains the following:</t>

<t><list style="symbols">
  <t>An “event_type” claim whose value is the URI identifying the
hypothetical event type.</t>
  <t>An “event_subject” claim whose value identifies a subject via email
address.</t>
  <t>An “event_time” claim whose value is the time at which the event occured.</t>
  <t>Two claims “claim_1” and “claim_2” that are defined by the hypothetical 
event type’s Profiling Specification.</t>
</list></t>

</section>
<section anchor="subject" title="Subject Identifiers">
<t>The Subject Identifier provides a common syntax for expressing the subject
of a security event.  A Subject Identifier is a JSON object representing an
instance of a Subject Identifier Type.  A Subject Identifier Type defines a
way of identifying the subject of an event. Typically this is done by
defining a set of one or more claims about a subject that when taken
together collectively identify that subject.  Each Subject Identifier Type
MUST have a name which MUST be registered in the IANA “SET Subject
Identifier Types” registry established by <xref target="iana-sit"></xref>.</t>

<t>A Subject Identifier MUST contain an “identifier_type” claim, whose value is
a string containing the name of the Subject Identifier’s Subject Identifier
Type.  All other claims within the Subject Identifier MUST be defined by the
Subject Identifier Type.</t>

<t>The names of the Subject Identifier Types defined below are registered in
the IANA “SET Subject Identifier Types” registry established by <xref target="iana-sit"></xref>.</t>

<section anchor="implicit-subject-identifier-type" title="Implicit Subject Identifier Type">
<t>The “Implicit” Subject Identifier Type indicates that the recipient is to be
determined implicitly, either from other claims in the SET envelope or event
payload, or through some other context.  For example, there may be event
types for which the only logical subject is the transmitter itself, in which
case the subject is implicitly known from the “iss” claim in the SET
envelope.</t>

<t>The Implicit Subject Identifier Type has the name “implicit”.  This type
contains no additional claims.</t>

<t>The following is a non-normative example of a Subject Identifier
representing an instance of the Implicit Subject Identifier Type:</t>

<figure title="An Instance of the Implicit Subject Identifier Type" anchor="figimplicit"><artwork><![CDATA[
{
  "identifier_type": "implicit"
}
]]></artwork></figure>

</section>
<section anchor="email-subject-identifier-type" title="Email Subject Identifier Type">
<t>The “Email” Subject Identifier Type identifies a subject by email address.
It has the name “email”, and contains a single additional claim:</t>

<t><list style="hanging">
  <t hangText='email'><vspace blankLines='0'/>
  A string containing an email address.  Its value SHOULD conform to
<xref target="RFC5322"></xref>.  This claim is REQUIRED.</t>
</list></t>

<t>The following is a non-normative example of a Subject Identifier
representing an instance of the Email Subject Identifier Type:</t>

<figure title="An Instance of the Email Subject Identifier Type" anchor="figemail"><artwork><![CDATA[
{
  "identifier_type": "email",
  "email": "user@example.com"
}
]]></artwork></figure>

</section>
<section anchor="phone-number-subject-identifier-type" title="Phone Number Subject Identifier Type">
<t>The “Phone Number” Subject Identifier Type identifies a subject by phone
number. It has the name “phone_number”, and contains a single claim:</t>

<t><list style="hanging">
  <t hangText='phone_number'><vspace blankLines='0'/>
  A string containing a phone number.  It SHOULD be formatted according to
<xref target="E.164"></xref>.  This claim is REQUIRED.</t>
</list></t>

<t>The following is a non-normative example of a Subject Identifier
representing an instance of the Phone Number Subject Identifier Type:</t>

<figure title="An Instance of the Phone Number Subject Identifier Type" anchor="figphone"><artwork><![CDATA[
{
  "identifier_type": "phone_number",
  "phone_number": "+1 206 555 0123"
}
]]></artwork></figure>

</section>
<section anchor="issuer-and-subject-subject-identifier-type" title="Issuer and Subject Subject Identifier Type">
<t>The “Issuer and Subject” Subject Identifier Type identifies a subject by an
issuer and subject pair.  It has the name “iss-sub”, and contains two
claims:</t>

<t><list style="hanging">
  <t hangText='iss'><vspace blankLines='0'/>
  A case-sensitive string identifying the principal who is responsible for
assignment of the identifier in the “sub” claim, as defined by Section 4.1.1
of <xref target="RFC7519"></xref>.  This claim is REQUIRED.</t>
  <t hangText='sub'><vspace blankLines='0'/>
  A case-sensitive string containing an identifier that identifies a subject
within the context of the principal identified by the “iss” claim, as
defined by Section 4.1.2 of <xref target="RFC7519"></xref>.  This claim is REQUIRED.</t>
</list></t>

<t>The following is a non-normative example of a Subject Identifier
representing an instance of the Issuer and Subject Subject Identifier Type:</t>

<figure title="An Instance of the Issuer and Subject Subject Identifier Type" anchor="figisssub"><artwork><![CDATA[
{
  "identifier_type": "iss-sub",
  "iss": "http://id.example.com",
  "sub": "example.user.1234"
}
]]></artwork></figure>

</section>
</section>
<section anchor="set-type" title="Explicit Typing of SETs">
<t>This specification registers the “application/secevent+jwt” media
type.  SETs MAY include this media type in the “typ” header parameter of
the JWT containing the SET to explicitly declare that the JWT is a SET.
This MUST be included if the SET could be used in an application context
in which it could be confused with other kinds of JWTs.  Profiling
Specifications MAY declare that this is REQUIRED for SETs containing events
defined by the Profiling Specification.</t>

<t>Per the definition of “typ” in Section 4.1.9 of <xref target="RFC7515"></xref>, it is
RECOMMENDED that the “application/” prefix be omitted.  Therefore,
the “typ” value used SHOULD be “secevent+jwt”.</t>

</section>
<section anchor="construction" title="Security Event Token Construction">
<t>A SET is a JWT, and therefore it’s construction follows that described in
<xref target="RFC7519"></xref>.</t>

<t>While this specification uses JWT to convey a SET, implementers SHALL
NOT use SETs to convey authentication or authorization assertions.</t>

<t>The following is the example JWT Claims Set from <xref target="figset"></xref>, expressed as
an unsigned JWT.  The JOSE Header is:</t>

<figure><artwork><![CDATA[
{"typ":"secevent+jwt","alg":"none"}
]]></artwork></figure>

<t>Base64url encoding of the octets of the UTF-8 representation of the
JOSE Header yields:</t>

<figure><artwork><![CDATA[
eyJ0eXAiOiJzZWNldmVudCtqd3QiLCJhbGciOiJub25lIn0
]]></artwork></figure>

<t>The example JWT Claims Set is encoded as follows:</t>

<figure><artwork><![CDATA[
ewogICJqdGkiOiAiM2QwYzNjZjc5NzU4NGJkMTkzYmQwZmIxYmQ0ZTdkMzAiLAogICJp
c3MiOiAiaHR0cHM6Ly90cmFuc21pdHRlci5leGFtcGxlLmNvbSIsCiAgImF1ZCI6IFsg
Imh0dHBzOi8vcmVjZWl2ZXIuZXhhbXBsZS5jb20iIF0sCiAgImlhdCI6IDE0NTg0OTYw
MjUsCiAgImV2ZW50IjogewogICAgImV2ZW50X3R5cGUiOiAiaHR0cHM6Ly9zZWNldmVu
dC5leGFtcGxlLmNvbS9leGFtcGxlX2V2ZW50IiwKICAgICJldmVudF9zdWJqZWN0Ijog
ewogICAgICAiaWRlbnRpZmllcl90eXBlIjogInVybjppZXRmOnBhcmFtczpzZWNldmVu
dDpzdWJqZWN0OmVtYWlsIiwKICAgICAgImVtYWlsIjogInVzZXJAZXhhbXBsZS5jb20i
CiAgICB9LAogICAgImV2ZW50X3RpbWUiOiAxNDU4NDkyNDI1LAogICAgImNsYWltXzEi
OiAiZm9vIiwKICAgICJjbGFpbV8yIjogImJhciIKICB9Cn0
]]></artwork></figure>

<t>The encoded JWS signature is the empty string.  Concatenating the
parts yields the following complete JWT:</t>

<figure title="Example Unsecured Security Event Token" anchor="figsetencoded"><artwork><![CDATA[
eyJ0eXAiOiJzZWNldmVudCtqd3QiLCJhbGciOiJub25lIn0.
ewogICJqdGkiOiAiM2QwYzNjZjc5NzU4NGJkMTkzYmQwZmIxYmQ0ZTdkMzAiLAogICJp
c3MiOiAiaHR0cHM6Ly90cmFuc21pdHRlci5leGFtcGxlLmNvbSIsCiAgImF1ZCI6IFsg
Imh0dHBzOi8vcmVjZWl2ZXIuZXhhbXBsZS5jb20iIF0sCiAgImlhdCI6IDE0NTg0OTYw
MjUsCiAgImV2ZW50IjogewogICAgImV2ZW50X3R5cGUiOiAiaHR0cHM6Ly9zZWNldmVu
dC5leGFtcGxlLmNvbS9leGFtcGxlX2V2ZW50IiwKICAgICJldmVudF9zdWJqZWN0Ijog
ewogICAgICAiaWRlbnRpZmllcl90eXBlIjogInVybjppZXRmOnBhcmFtczpzZWNldmVu
dDpzdWJqZWN0OmVtYWlsIiwKICAgICAgImVtYWlsIjogInVzZXJAZXhhbXBsZS5jb20i
CiAgICB9LAogICAgImV2ZW50X3RpbWUiOiAxNDU4NDkyNDI1LAogICAgImNsYWltXzEi
OiAiZm9vIiwKICAgICJjbGFpbV8yIjogImJhciIKICB9Cn0.
]]></artwork></figure>

<t>For the purpose of a simpler example in Figure 5, an unsecured token
was shown.  When SETs are not signed or encrypted, the Event Receiver
MUST employ other mechanisms such as TLS and HTTP to provide
integrity, confidentiality, and issuer validation, as needed by the
application.</t>

<t>When validation (i.e. auditing), or additional transmission security
is required, JWS signing and/or JWE encryption MAY be used.  To
create and or validate a signed and/or encrypted SET, follow the
instructions in Section 7 of <xref target="RFC7519"></xref>.</t>

</section>
</section>
<section anchor="related-events" title="Related Events">
<t>In order to accommodate use cases that require communicating multiple
related security events to an Event Receiver, this section defines the
“Related Events” event type.  A Related Events event is essentially a
container for two or more events that are related to one another, in that
they represent or express different aspects of the same event or state
change.  The Related Events event SHOULD NOT be used to combine unrelated
events into a single set, and MUST NOT be used as a general purpose batch
transmission mechanism.  Profiling Specifications that require an event
grouping mechanism with these or other semantics are encouraged to define
additional event types for their use cases.</t>

<t>The event type for the Related Events event is the URN
“urn:ietf:secevents:related_events”.</t>

<t>The Related Events event has a single additional event payload claim:</t>

<t><list style="hanging">
  <t hangText='events'><vspace blankLines='0'/>
  An array of event payloads, as defined in this document.  These event
payloads can be referred to as Nested Events for the Related Events event.
This claim is REQUIRED.</t>
</list></t>

<section anchor="related-events-proc" title="Processing Related Events">
<t>Nested Events can inherit the “event_id”, “event_subject”, and “event_time”
claims from the Related Events payload.  Transmitters MAY omit some, all, or
none of these claims from a Nested Event.  Transmitters MAY omit claims from
some Nested Events and include them in others within the same Related Events
event. When a claim is omitted, recipients MUST use the value of the
corresponding claim in the Related Event event’s payload.</t>

<t>The following is a non-normative example of a SET containing a Related
Events event:</t>

<figure title="Example SET Containing A Related Events Event" anchor="figrelated"><artwork><![CDATA[
{
  "jti": "1c0038c2-02db-40de-ad50-122a64724166",
  "iss": "https://transmitter.example.com",
  "aud": [ "https://receiver.example.com" ],
  "iat": 1510666261,
  "event": {
    "event_type": "urn:ietf:secevent:related_events",
    "event_subject": {
      "identifier_type": "email",
      "email": "user@example.com"
    },
    "event_id": "container",
    "event_time": 1510662661,
    "events": [
      {
        "event_id": "nested_1",
        "event_type": "http://specs.example.com/set_profile/event_1"
      },
      {
        "event_id": "nested_2",
        "event_type": "http://specs.example.com/set_profile/event_2",
        "event_time": 151059061
      }
    ]
  }
}
]]></artwork></figure>

<t>The following table demonstrates how Nested Events inherit values for
omitted claims:</t>

<figure title="Example of Event Payloads Inheriting Values for Omitted Claims" anchor="figomitted"><artwork><![CDATA[
         +-----------+------------+-------------------------------+         
         | Event ID  | Event Time | Event Subject                 |
         +-----------+------------+-------------------------------+
         | container | 151062661  | {                             |
         +-----------+            |   "identifier_type": "email", |
         | nested_1  |            |   "email": "user@example.com" |
         +-----------+------------+ }                             |
         | nested_2  | 151059061  |                               |
         +-----------+------------+-------------------------------+
]]></artwork></figure>

<t>Since the Nested Event with event ID “nested_1” omits the “event_time”
claim, it inherits the event time from the Related Events event payload.
Similarly, since both Nested Events “nested_1” and “nested_2” omit the
“event_subject” claim, both inherit the event subject from the Related
Events event payload.</t>

</section>
</section>
<section anchor="profile-req" title="Requirements for SET Profiles">
<t>Profiling Specifications for SETs define the syntax and semantics of
SETs conforming to that SET profile and rules for validating those
SETs.  The syntax defined by Profiling Specifications includes what
SET envelope and event payload claims are used by SETs expressing and
event defined by the profile.</t>

<t>Defining the semantics of the SET contents for SETs utilizing the
profile is equally important.  Possibly most important is defining
the procedures used to validate the SET issuer and to obtain the keys
controlled by the issuer that were used for cryptographic operations
used in the JWT representing the SET.  For instance, some profiles
may define an algorithm for retrieving the SET issuer’s keys that
uses the “iss” claim value as its input.  Likewise, if the profile
allows (or requires) that the JWT be unsecured, the means by which
the integrity of the JWT is ensured MUST be specified.</t>

<t>Profiling Specifications MUST define how the event Subject is
identified in the SET, as well as how to differentiate between the
event Subject’s Issuer and the SET Issuer, if applicable.  It is NOT
RECOMMENDED for Profiling Specifications to use the “sub” claim 
defined in <xref target="RFC7519"></xref> in cases in which the Subject is not globally
unique and has a different Issuer from the SET itself.</t>

<t>Profiling Specifications MUST clearly specify the steps that a
recipient of a SET utilizing that profile MUST perform to validate
that the SET is both syntactically and semantically valid.</t>

<section anchor="extensions" title="Extending Events">
<t>As needs change and new use cases develop, it may be desirable to augment
existing event definitions with new claims. In order to avoid collisions,
Profiling Specifications that extend existing events with additional event
payload claims SHOULD use Collision-Resistant Names as defined in Section 2
of <xref target="RFC7519"></xref> for the names of the new claims.</t>

</section>
</section>
<section anchor="security" title="Security Considerations">

<section anchor="c-and-i" title="Confidentiality and Integrity">
<t>SETs may often contain sensitive information.  Therefore, methods for
distribution of events SHOULD require the use of a transport-layer
security mechanism when distributing events.  Parties MUST support
TLS 1.2 <xref target="RFC5246"></xref> and MAY support additional transport-layer
mechanisms meeting its security requirements.  When using TLS, the
client MUST perform a TLS/SSL server certificate check, per
<xref target="RFC6125"></xref>.  Implementation security considerations for TLS can be
found in “Recommendations for Secure Use of TLS and DTLS” <xref target="RFC7525"></xref>.</t>

<t>Security Events distributed through third-parties or that carry
personally identifiable information, SHOULD be encrypted using JWE
<xref target="RFC7516"></xref> or secured for confidentiality by other means.</t>

<t>Unless integrity of the JWT is ensured by other means, it MUST be
signed using JWS <xref target="RFC7515"></xref> so that individual events can be
authenticated and validated by the Event Receiver.</t>

</section>
<section anchor="delivery" title="Delivery">
<t>This specification does not define a delivery mechanism by itself.
In addition to confidentiality and integrity (discussed above),
implementers and Profiling Specifications MUST consider the
consequences of delivery mechanisms that are not secure and/or not
assured.  For example, while a SET may be end-to-end secured using
JWE encrypted SETs, without TLS there is no assurance that the
correct endpoint received the SET and that it could be successfully
processed.</t>

</section>
<section anchor="sequencing" title="Sequencing">
<t>As defined in this specification, there is no defined way to order
multiple SETs in a sequence.  Depending on the type and nature of SET
event, order may or may not matter.  For example, in provisioning,
event order is critical – an object could not be modified before it
was created.  In other SET types, such as a token revocation, the
order of SETs for revoked tokens does not matter.  If however, the
event was described as a log-in or logged-out status for a user
subject, then order becomes important.</t>

<t>Profiling Specifications and implementers SHOULD take caution when
using timestamps such as “iat” to define order.  Distributed systems
will have some amount of clock-skew and thus time by itself will not
guarantee order.</t>

<t>Specifications profiling SET SHOULD define a mechanism for detecting
order or sequence of events.</t>

</section>
<section anchor="timing" title="Timing Issues">
<t>When SETs are delivered asynchronously and/or out-of-band with
respect to the original action that incurred the security event, it
is important to consider that a SET might be delivered to an Event
Receiver in advance or well behind the process that caused the event.
For example, a user having been required to logout and then log back
in again, may cause a logout SET to be issued that may arrive at the
same time as the user-agent accesses a web site having just logged-
in.  If timing is not handled properly, the effect would be to
erroneously treat the new user session as logged out.  Profiling
Specifications SHOULD be careful to anticipate timing and subject
selection information.  For example, it might be more appropriate to
cancel a “session” rather than a “user”.  Alternatively, the
specification could use timestamps that allows new sessions to be
started immediately after a stated logout event time.</t>

</section>
<section anchor="not-id-tokens" title="Distinguishing SETs from ID Tokens">
<t>Because <xref target="RFC7519"></xref> states that “all claims that are not understood by
implementations MUST be ignored”, there is a consideration that a SET
token might be confused with ID Token <xref target="OpenID.Core"></xref> if a SET is
mistakenly or intentionally used in a context requiring an ID Token.
If a SET could otherwise be interpreted as a valid ID Token (because
it includes the required claims for an ID Token and valid issuer and
audience claim values for an ID Token) then that SET profile MUST
require that the “exp” claim not be present in the SET.  Because
“exp” is a required claim in ID Tokens, valid ID Token
implementations will reject such a SET if presented as if it were an
ID Token.</t>

<t>Excluding “exp” from SETs that could otherwise be confused with ID
Tokens is actually defense in depth.  In any OpenID Connect contexts
in which an attacker could attempt to substitute a SET for an ID
Token, the SET would actually already be rejected as an ID Token
because it would not contain the correct “nonce” claim value for the
ID Token to be accepted in contexts for which substitution is
possible.</t>

<t>Note that the use of explicit typing, as described in Section 2.2,
will not achieve disambiguation between ID Tokens and SETs, as the ID
Token validation rules do not use the “typ” header parameter value.</t>

</section>
<section anchor="not-access-tokens" title="Distinguishing SETs from Access Tokens">
<t>OAuth 2.0 <xref target="RFC6749"></xref> defines access tokens as being opaque.
Nonetheless, some implementations implement access tokens as JWTs.
Because the structure of these JWTs is implementation-specific,
ensuring that a SET cannot be confused with such an access token is
therefore likewise, in general, implementation specific.
Nonetheless, it is recommended that SET profiles employ the following
strategies to prevent possible substitutions of SETs for access
tokens in contexts in which that might be possible:</t>

<t><list style="symbols">
  <t>Prohibit use of the “exp” claim, as is done to prevent ID Token
confusion.</t>
  <t>Where possible, use a separate “aud” claim value to distinguish
between the Event Receiver and the protected resource that is the
audience of an access token.</t>
  <t>Modify access token validation systems to check for the presence
of the “events” claim as a means to detect security event tokens.
This is particularly useful if the same endpoint may receive both
types of tokens.</t>
  <t>Employ explicit typing, as described in Section 2.2, and modify
access token validation systems to use the “typ” header parameter
value.</t>
</list></t>

</section>
<section anchor="not-other-jwts" title="Distinguishing SETs from other kinds of JWTs">
<t>JWTs are now being used in application areas beyond the identity
applications in which they first appeared.  For instance, the Session
Initiation Protocol (SIP) Via Header Field <xref target="RFC8055"></xref> and Personal
Assertion Token (PASSporT) <xref target="I-D.ietf-stir-passport"></xref> specifications
both define JWT profiles that use mostly or completely different sets
of claims than are used by ID Tokens.  If it would otherwise be
possible for an attacker to substitute a SET for one of these (or
other) kinds of JWTs, then the SET profile must be defined in such a
way that any substituted SET will result in its rejection when
validated as the intended kind of JWT.</t>

<t>The most direct way to prevent confusion is to employ explicit
typing, as described in Section 2.2, and modify applicable token
validation systems to use the “typ” header parameter value.  This
approach can be employed for new systems but may not be applicable to
existing systems.</t>

<t>Another way to ensure that a SET is not confused with another kind of
JWT is to have the JWT validation logic reject JWTs containing an
“events” claim unless the JWT is intended to be a SET.  This approach
can be employed for new systems but may not be applicable to existing
systems.</t>

<t>For many use cases, the simplest way to prevent substitution is
requiring that the SET not include claims that are required for the
kind of JWT that might be the target of an attack.  For example, for
<xref target="RFC8055"></xref>, the “sip_callid” claim could be omitted and for
<xref target="I-D.ietf-stir-passport"></xref>, the “orig” claim could be omitted.</t>

<t>In many contexts, simple measures such as these will accomplish the
task, should confusion otherwise even be possible.  Note that this
topic is being explored in a more general fashion in JSON Web Token
Best Current Practices <xref target="I-D.sheffer-oauth-jwt-bcp"></xref>.  The proposed
best practices in that draft may also be applicable for particular
SET profiles and use cases.</t>

</section>
</section>
<section anchor="privacy" title="Privacy Considerations">
<t>If a SET needs to be retained for audit purposes, JWS MAY be used to
provide verification of its authenticity.</t>

<t>Event Transmitters SHOULD attempt to specialize feeds so that the
content is targeted to the specific business and protocol needs of an
Event Receiver.</t>

<t>When sharing personally identifiable information or information that
is otherwise considered confidential to affected users, Event
Transmitters and Receivers MUST have the appropriate legal agreements
and user consent or terms of service in place.</t>

<t>The propagation of subject identifiers can be perceived as personally
identifiable information.  Where possible, Event Transmitters and
Receivers SHOULD devise approaches that prevent propagation – for
example, the passing of a hash value that requires the Event Receiver
to know the subject.</t>

</section>
<section anchor="iana" title="IANA Considerations">

<section anchor="iana-sit" title="SET Subject Identifier Types Registry">
<t>This section establishes the IANA “SET Subject Identifier Types” registry
// TODO</t>

</section>
<section anchor="iana-claims" title="JSON Web Token Claims Registration">
<t>This specification registers the “event” claim in the IANA “JSON Web Token
Claims” registry <xref target="IANA.JWT.Claims"></xref> established by <xref target="RFC7519"></xref>.</t>

<section anchor="registry-contents" title="Registry Contents">
<t><list style="symbols">
  <t>Claim Name: “event”</t>
  <t>Claim Description: Security Event Payload</t>
  <t>Change Controller: IESG</t>
  <t>Specification Document(s): Section 2.1 of [[ this specification ]]</t>
</list></t>

</section>
</section>
<section anchor="iana-media-type" title="Media Type Registration">

<section anchor="registry-contents-1" title="Registry Contents">
<t>This section registers the “application/secevent+jwt” media type
<xref target="RFC2046"></xref> in the “Media Types” registry <xref target="IANA.MediaTypes"></xref> in the
manner described in <xref target="RFC6838"></xref>, which can be used to indicate that the
content is a SET.</t>

<t><list style="symbols">
  <t>Type name: application</t>
  <t>Subtype name: secevent+jwt</t>
  <t>Required parameters: n/a</t>
  <t>Optional parameters: n/a</t>
  <t>Encoding considerations: 8bit; A SET is a JWT; JWT values are
encoded as a series of base64url-encoded values (some of which may
be the empty string) separated by period (‘.’) characters.</t>
  <t>Security considerations: See the Security Considerations section
of [[ this specification ]]</t>
  <t>Interoperability considerations: n/a</t>
  <t>Published specification: Section 2.2 of [[ this specification ]]</t>
  <t>Applications that use this media type: TBD</t>
  <t>Fragment identifier considerations: n/a</t>
  <t>Additional information:</t>
  <t>Magic number(s): n/a</t>
  <t>File extension(s): n/a</t>
  <t>Macintosh file type code(s): n/a</t>
  <t>Person &amp; email address to contact for further information:
Michael B. Jones, mbj@microsoft.com</t>
  <t>Intended usage: COMMON</t>
  <t>Restrictions on usage: none</t>
  <t>Author: Michael B. Jones, mbj@microsoft.com</t>
  <t>Change controller: IESG</t>
  <t>Provisional registration?  No</t>
</list></t>

</section>
</section>
</section>


  </middle>

  <back>

    <references title='Normative References'>

<reference anchor="IANA.JWT.Claims" target="http://www.iana.org/assignments/jwt">
  <front>
    <title>JSON Web Token Claims</title>
    <author >
      <organization>IANA</organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="IANA.MediaTypes" target="http://www.iana.org/assignments/media-types">
  <front>
    <title>Media Types</title>
    <author >
      <organization>IANA</organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>




<reference  anchor="RFC2119" target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC3986" target='https://www.rfc-editor.org/info/rfc3986'>
<front>
<title>Uniform Resource Identifier (URI): Generic Syntax</title>
<author initials='T.' surname='Berners-Lee' fullname='T. Berners-Lee'><organization /></author>
<author initials='R.' surname='Fielding' fullname='R. Fielding'><organization /></author>
<author initials='L.' surname='Masinter' fullname='L. Masinter'><organization /></author>
<date year='2005' month='January' />
<abstract><t>A Uniform Resource Identifier (URI) is a compact sequence of characters that identifies an abstract or physical resource.  This specification defines the generic URI syntax and a process for resolving URI references that might be in relative form, along with guidelines and security considerations for the use of URIs on the Internet.  The URI syntax defines a grammar that is a superset of all valid URIs, allowing an implementation to parse the common components of a URI reference without knowing the scheme-specific requirements of every possible identifier.  This specification does not define a generative grammar for URIs; that task is performed by the individual specifications of each URI scheme.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='STD' value='66'/>
<seriesInfo name='RFC' value='3986'/>
<seriesInfo name='DOI' value='10.17487/RFC3986'/>
</reference>



<reference  anchor="RFC5246" target='https://www.rfc-editor.org/info/rfc5246'>
<front>
<title>The Transport Layer Security (TLS) Protocol Version 1.2</title>
<author initials='T.' surname='Dierks' fullname='T. Dierks'><organization /></author>
<author initials='E.' surname='Rescorla' fullname='E. Rescorla'><organization /></author>
<date year='2008' month='August' />
<abstract><t>This document specifies Version 1.2 of the Transport Layer Security (TLS) protocol.  The TLS protocol provides communications security over the Internet.  The protocol allows client/server applications to communicate in a way that is designed to prevent eavesdropping, tampering, or message forgery.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5246'/>
<seriesInfo name='DOI' value='10.17487/RFC5246'/>
</reference>



<reference  anchor="RFC5322" target='https://www.rfc-editor.org/info/rfc5322'>
<front>
<title>Internet Message Format</title>
<author initials='P.' surname='Resnick' fullname='P. Resnick' role='editor'><organization /></author>
<date year='2008' month='October' />
<abstract><t>This document specifies the Internet Message Format (IMF), a syntax for text messages that are sent between computer users, within the framework of &quot;electronic mail&quot; messages.  This specification is a revision of Request For Comments (RFC) 2822, which itself superseded Request For Comments (RFC) 822, &quot;Standard for the Format of ARPA Internet Text Messages&quot;, updating it to reflect current practice and incorporating incremental changes that were specified in other RFCs.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5322'/>
<seriesInfo name='DOI' value='10.17487/RFC5322'/>
</reference>



<reference  anchor="RFC6125" target='https://www.rfc-editor.org/info/rfc6125'>
<front>
<title>Representation and Verification of Domain-Based Application Service Identity within Internet Public Key Infrastructure Using X.509 (PKIX) Certificates in the Context of Transport Layer Security (TLS)</title>
<author initials='P.' surname='Saint-Andre' fullname='P. Saint-Andre'><organization /></author>
<author initials='J.' surname='Hodges' fullname='J. Hodges'><organization /></author>
<date year='2011' month='March' />
<abstract><t>Many application technologies enable secure communication between two entities by means of Internet Public Key Infrastructure Using X.509 (PKIX) certificates in the context of Transport Layer Security (TLS). This document specifies procedures for representing and verifying the identity of application services in such interactions.   [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6125'/>
<seriesInfo name='DOI' value='10.17487/RFC6125'/>
</reference>



<reference  anchor="RFC6749" target='https://www.rfc-editor.org/info/rfc6749'>
<front>
<title>The OAuth 2.0 Authorization Framework</title>
<author initials='D.' surname='Hardt' fullname='D. Hardt' role='editor'><organization /></author>
<date year='2012' month='October' />
<abstract><t>The OAuth 2.0 authorization framework enables a third-party application to obtain limited access to an HTTP service, either on behalf of a resource owner by orchestrating an approval interaction between the resource owner and the HTTP service, or by allowing the third-party application to obtain access on its own behalf.  This specification replaces and obsoletes the OAuth 1.0 protocol described in RFC 5849.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6749'/>
<seriesInfo name='DOI' value='10.17487/RFC6749'/>
</reference>



<reference  anchor="RFC7519" target='https://www.rfc-editor.org/info/rfc7519'>
<front>
<title>JSON Web Token (JWT)</title>
<author initials='M.' surname='Jones' fullname='M. Jones'><organization /></author>
<author initials='J.' surname='Bradley' fullname='J. Bradley'><organization /></author>
<author initials='N.' surname='Sakimura' fullname='N. Sakimura'><organization /></author>
<date year='2015' month='May' />
<abstract><t>JSON Web Token (JWT) is a compact, URL-safe means of representing claims to be transferred between two parties.  The claims in a JWT are encoded as a JSON object that is used as the payload of a JSON Web Signature (JWS) structure or as the plaintext of a JSON Web Encryption (JWE) structure, enabling the claims to be digitally signed or integrity protected with a Message Authentication Code (MAC) and/or encrypted.</t></abstract>
</front>
<seriesInfo name='RFC' value='7519'/>
<seriesInfo name='DOI' value='10.17487/RFC7519'/>
</reference>



<reference  anchor="RFC7525" target='https://www.rfc-editor.org/info/rfc7525'>
<front>
<title>Recommendations for Secure Use of Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS)</title>
<author initials='Y.' surname='Sheffer' fullname='Y. Sheffer'><organization /></author>
<author initials='R.' surname='Holz' fullname='R. Holz'><organization /></author>
<author initials='P.' surname='Saint-Andre' fullname='P. Saint-Andre'><organization /></author>
<date year='2015' month='May' />
<abstract><t>Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS) are widely used to protect data exchanged over application protocols such as HTTP, SMTP, IMAP, POP, SIP, and XMPP.  Over the last few years, several serious attacks on TLS have emerged, including attacks on its most commonly used cipher suites and their modes of operation.  This document provides recommendations for improving the security of deployed services that use TLS and DTLS. The recommendations are applicable to the majority of use cases.</t></abstract>
</front>
<seriesInfo name='BCP' value='195'/>
<seriesInfo name='RFC' value='7525'/>
<seriesInfo name='DOI' value='10.17487/RFC7525'/>
</reference>


<reference anchor="E.164" target="http://www.itu.int/rec/T-REC-E.164-201011-I/en">
  <front>
    <title>The international public telecommunication numbering plan</title>
    <author >
      <organization>International Telecommunication Union</organization>
    </author>
    <date year="2010"/>
  </front>
</reference>


    </references>

    <references title='Informative References'>





<reference anchor="I-D.ietf-stir-passport">
<front>
<title>Personal Assertion Token (PASSporT)</title>

<author initials='C' surname='Wendt' fullname='Chris Wendt'>
    <organization />
</author>

<author initials='J' surname='Peterson' fullname='Jon Peterson'>
    <organization />
</author>

<date month='February' day='9' year='2017' />

<abstract><t>This document defines a method for creating and validating a token that cryptographically verifies an originating identity, or more generally a URI or telephone number representing the originator of personal communications.  The PASSporT token is cryptographically signed to protect the integrity of the identity the originator and to verify the assertion of the identity information at the destination. The cryptographic signature is defined with the intention that it can confidently verify the originating persona even when the signature is sent to the destination party over an insecure channel.  PASSporT is particularly useful for many personal communications applications over IP networks and other multi-hop interconnection scenarios where the originating and destination parties may not have a direct trusted relationship.</t></abstract>

</front>

<seriesInfo name='Internet-Draft' value='draft-ietf-stir-passport-11' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-ietf-stir-passport-11.txt' />
</reference>



<reference anchor="I-D.sheffer-oauth-jwt-bcp">
<front>
<title>JSON Web Token Best Current Practices</title>

<author initials='Y' surname='Sheffer' fullname='Yaron Sheffer'>
    <organization />
</author>

<author initials='D' surname='Hardt' fullname='Dick Hardt'>
    <organization />
</author>

<author initials='M' surname='Jones' fullname='Michael Jones'>
    <organization />
</author>

<date month='July' day='3' year='2017' />

<abstract><t>JSON Web Tokens, also known as JWTs [RFC7519], are URL-safe JSON- based security tokens that contain a set of claims that can be signed and/or encrypted.  JWTs are being widely used and deployed as a simple security token format in numerous protocols and applications, both in the area of digital identity, and in other application areas. The goal of this Best Current Practices document is to provide actionable guidance leading to secure implementation and deployment of JWTs.</t></abstract>

</front>

<seriesInfo name='Internet-Draft' value='draft-sheffer-oauth-jwt-bcp-01' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-sheffer-oauth-jwt-bcp-01.txt' />
</reference>


<reference anchor="OpenID.Core" target="http://openid.net/specs/openid-connect-core-1_0.html">
  <front>
    <title>OpenID Connect Core 1.0</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>




<reference  anchor="RFC2046" target='https://www.rfc-editor.org/info/rfc2046'>
<front>
<title>Multipurpose Internet Mail Extensions (MIME) Part Two: Media Types</title>
<author initials='N.' surname='Freed' fullname='N. Freed'><organization /></author>
<author initials='N.' surname='Borenstein' fullname='N. Borenstein'><organization /></author>
<date year='1996' month='November' />
<abstract><t>This second document defines the general structure of the MIME media typing system and defines an initial set of media types.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='2046'/>
<seriesInfo name='DOI' value='10.17487/RFC2046'/>
</reference>



<reference  anchor="RFC6838" target='https://www.rfc-editor.org/info/rfc6838'>
<front>
<title>Media Type Specifications and Registration Procedures</title>
<author initials='N.' surname='Freed' fullname='N. Freed'><organization /></author>
<author initials='J.' surname='Klensin' fullname='J. Klensin'><organization /></author>
<author initials='T.' surname='Hansen' fullname='T. Hansen'><organization /></author>
<date year='2013' month='January' />
<abstract><t>This document defines procedures for the specification and registration of media types for use in HTTP, MIME, and other Internet protocols.  This memo documents an Internet Best Current Practice.</t></abstract>
</front>
<seriesInfo name='BCP' value='13'/>
<seriesInfo name='RFC' value='6838'/>
<seriesInfo name='DOI' value='10.17487/RFC6838'/>
</reference>



<reference  anchor="RFC7515" target='https://www.rfc-editor.org/info/rfc7515'>
<front>
<title>JSON Web Signature (JWS)</title>
<author initials='M.' surname='Jones' fullname='M. Jones'><organization /></author>
<author initials='J.' surname='Bradley' fullname='J. Bradley'><organization /></author>
<author initials='N.' surname='Sakimura' fullname='N. Sakimura'><organization /></author>
<date year='2015' month='May' />
<abstract><t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures.  Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification.  Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t></abstract>
</front>
<seriesInfo name='RFC' value='7515'/>
<seriesInfo name='DOI' value='10.17487/RFC7515'/>
</reference>



<reference  anchor="RFC7516" target='https://www.rfc-editor.org/info/rfc7516'>
<front>
<title>JSON Web Encryption (JWE)</title>
<author initials='M.' surname='Jones' fullname='M. Jones'><organization /></author>
<author initials='J.' surname='Hildebrand' fullname='J. Hildebrand'><organization /></author>
<date year='2015' month='May' />
<abstract><t>JSON Web Encryption (JWE) represents encrypted content using JSON-based data structures.  Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and IANA registries defined by that specification.  Related digital signature and Message Authentication Code (MAC) capabilities are described in the separate JSON Web Signature (JWS) specification.</t></abstract>
</front>
<seriesInfo name='RFC' value='7516'/>
<seriesInfo name='DOI' value='10.17487/RFC7516'/>
</reference>



<reference  anchor="RFC8055" target='https://www.rfc-editor.org/info/rfc8055'>
<front>
<title>Session Initiation Protocol (SIP) Via Header Field Parameter to Indicate Received Realm</title>
<author initials='C.' surname='Holmberg' fullname='C. Holmberg'><organization /></author>
<author initials='Y.' surname='Jiang' fullname='Y. Jiang'><organization /></author>
<date year='2017' month='January' />
<abstract><t>This specification defines a new Session Initiation Protocol (SIP) Via header field parameter, 'received-realm', which allows a SIP entity acting as an entry point to a transit network to indicate from which adjacent upstream network a SIP request is received by using a network realm value associated with the adjacent network.</t></abstract>
</front>
<seriesInfo name='RFC' value='8055'/>
<seriesInfo name='DOI' value='10.17487/RFC8055'/>
</reference>




    </references>


<section anchor="ack" title="Acknowledgments">
<t>The editors would like to thank Phil Hunt for his SET draft – on which much
of this specification is based – and his continuing contributions to this
draft.</t>

<t>The editors would like to thank the participants on the IETF secevent
mailing list and related working groups for their support of this
specification.</t>

</section>
<section anchor="changelog" title="Change Log">
<t>Draft 00 - A. Backman - First Draft</t>

<t>Draft 01 - A. Backman</t>

<t><list style="symbols">
  <t>Added Acknowledgements section.</t>
  <t>Relaxed event_subject claim definition to allow usage of JWT “sub” claim.</t>
</list></t>

<t>Draft 02 - A. Backman</t>

<t><list style="symbols">
  <t>Added text to iat claim definition clarifying the difference between iat
and event_time.</t>
</list></t>

</section>


  </back>

<!-- ##markdown-source:
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
Zgy6czqKPq+mKOXP2TtxJxb5Lb8dmeb4tWEvyDBawSV6/ZFfb0SpDXjkf7sJ
nXj8SMfHCQgWjdR0lhzSqqb8AUQqOj73/xelvmZ77sGsELTYKHgCLf66G+3t
HET7+/vRzu7eww6aMeQ2o9nXTFGx7UxOUsD2asu7RfhK+2/HPFS2XTf6Yh7n
ggcdMdQ0mHvexcH2tpIMgVX8+1dDyKAlshu/mVdyEg1j1+5sqkLYC3WJuPX8
mXcFvHbN10adob871hAy5u5RgXWAN54+6sVmQwDYD61R6GkWuC6zYV13uCP/
pwn06zH6Pk1BEa/jTTrc3s7TVR8SNkWxIc8plx1o91FX0WhgfqO71Iyvnj/S
8KkcLCIzktOdKHJE2WB0hnpTVvXa7A61FCTg6eUPW+fVXz/dAs3TGW1SeTGO
jSOiG1Wy1diSpSYcoFQigT960TSLMXJB3ipU5MUrSsGPjj2GGjvml7vTU2kG
SOUfPsCvCIsowZyWpLaV5s6h71t74xNPXgoQnhTysqQ1MU0VcXSa229Qv3G5
rmwfXOeU3k/nJxs/fmLWJjkFs2dzX4mDTAcCpQcFjneZjqtmsz/mVcYuci8k
DHNjwAe5QLvDJx7N7n/oc3jArCRWrSACJvVB75/pTCvZLxx/A4MIVpD1jdtq
1g4JZE649wJMWjlKqAlQerySjxMn3p8bMdrD7TCruK8ZljxFWOpfmsjvUlhS
o8GrTsa+5kvxyZENB0sJFSm2C2bXUk8T5X4qOh1IMBgLxciIphvrBwsMx7T2
9GYtdQGk5IREWHJO2F5ho+QNFNbZSZMkMxGtdnbAbvXVnUY5BXgyalHK+XJM
MOPoxfOLy9PoZybVvFFWSdt6GO5gvxcXE3gIbBxZErYzT0FqHTxa1AVnlApn
Ios4aTN3WOHN1bPBY+eKswdH0Bfiz2CZZ0Wqs8iWz3eyX4/yi/z5l3dvz4t0
9ssiPW5/Tx/+PX9x/Hw6+inBd4vR3n5xVu7wjK42wwedyXxyACW3YIKOdVtN
zo6f/57+dA19HuUv9/5++9uX80/vPiX751/ePDr/6fn1y6vrL7/N/n77bnb2
Gf7deXeVXr/8cpS/OKJv5yZ5+JI+jn9+vZP8/PLgxfLJTjJ7tkj2dufpz6+L
JN8vsp+etclPn4sXs/Ob0eVZc5wfTc5mz3bfHZ8dnD1rJuZsNt1Jf3765SJ/
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
HJH/fxp6aTlSkAAA

-->

</rfc>

