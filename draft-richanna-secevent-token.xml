<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.3 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>

<rfc ipr="trust200902" docName="draft-richanna-secevent-token-02" category="info">

  <front>
    <title abbrev="secevent-token">Security Event Token (SET)</title>

    <author initials="A." surname="Backman" fullname="Annabelle Backman">
      <organization>Amazon</organization>
      <address>
        <email>richanna@amazon.com</email>
      </address>
    </author>
    <author initials="W." surname="Denniss" fullname="William Denniss">
      <organization>Google</organization>
      <address>
        <email>wdenniss@google.com</email>
      </address>
    </author>
    <author initials="M." surname="Ansari" fullname="Morteza Ansari">
      <organization>Cisco</organization>
      <address>
        <email>morteza.ansari@cisco.com</email>
      </address>
    </author>
    <author initials="M." surname="Jones" fullname="Michael B. Jones">
      <organization>Microsoft</organization>
      <address>
        <email>mbj@microsoft.com</email>
        <uri>http://self-issued.info/</uri>
      </address>
    </author>

    <date year="2017" month="November" day="14"/>

    <area>Security</area>
    <workgroup>secevent</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This specification defines the Security Event Token, which may be
distributed via a protocol such as HTTP.  The Security Event Token
(SET) specification profiles the JSON Web Token (JWT), which can be
optionally signed and/or encrypted.  A SET describes a statement of
fact from the perspective of an issuer that it intends to share with
one or more receivers.</t>



    </abstract>


  </front>

  <middle>


<section anchor="intro" title="Introduction">
<t>This specification defines an extensible Security Event Token (SET)
format which may be exchanged using protocols such as HTTP.  The
specification builds on the JSON Web Token (JWT) format <xref target="RFC7519"></xref> in
order to provide a self-contained token that can be optionally signed
using JSON Web Signature (JWS) <xref target="RFC7515"></xref> and/or encrypted using JSON
Web Encryption (JWE) <xref target="RFC7516"></xref>.</t>

<t>This specification profiles the use of JWT for the purpose of issuing
security event tokens (SETs).  This specification defines a base
format upon which profiling specifications define actual events and
their meanings.  Unless otherwise specified, this specification uses
non-normative example events intended to demonstrate how events may
be constructed.</t>

<t>This specification is scoped to security and identity related events.
While security event tokens may be used for other purposes, the
specification only considers security and privacy concerns relevant
to identity and personal information.</t>

<t>Security Events are not commands issued between parties.  A security
event is a statement of fact from the perspective of an issuer about
the state of a security subject (e.g., a web resource, token, IP
address, the issuer itself) that the issuer controls or is aware of,
that has changed in some way (explicitly or implicitly).  A security
subject MAY be permanent (e.g., a user account) or temporary (e.g.,
an HTTP session) in nature.  A state change could describe a direct
change of entity state, an implicit change of state or other higher-
level security statements such as:</t>

<t><list style="symbols">
  <t>The creation, modification, removal of a resource.</t>
  <t>The resetting or suspension of an account.</t>
  <t>The revocation of a security token prior to its expiry.</t>
  <t>The logout of a user session.  Or,</t>
  <t>A cumulative conclusion such as to indicate that a user has taken
over an email identifier that may have been used in the past by
another user.</t>
</list></t>

<t>While subject state changes are often triggered by a user-agent or
security-subsystem, the issuance and transmission of an event often
occurs asynchronously and in a back-channel to the action which
caused the change that generated the security event.  Subsequently,
an Event Receiver, having received a SET, validates and interprets
the received SET and takes its own independent actions, if any.  For
example, having been informed of a personal identifier being
associated with a different security subject (e.g., an email address
is being used by someone else), the Event Receiver may choose to
ensure that the new user is not granted access to resources
associated with the previous user.  Or, the Event Receiver may not
have any relationship with the subject, and no action is taken.</t>

<t>While Event Receivers will often take actions upon receiving SETs,
security events cannot be assumed to be commands or requests.  The
intent of this specification is to define a way of exchanging
statements of fact that Event Receivers may interpret for their own
purposes.  As such, SETs have no capability for error signaling other
to ensure the validation of a received SET.</t>

<section anchor="conv" title="Notational Conventions">
<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”,
“SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and
“OPTIONAL” in this document are to be interpreted as described in
<xref target="RFC2119"></xref>.  These keywords are capitalized when used to unambiguously
specify requirements of the protocol or application features and
behavior that affect the inter-operability and security of
implementations.  When these words are not capitalized, they are
meant in their natural-language sense.</t>

<t>For purposes of readability, examples are not URL encoded.
Implementers MUST percent encode URLs as described in Section 2.1 of
<xref target="RFC3986"></xref>.</t>

<t>Throughout this document, all figures MAY contain spaces and extra
line-wrapping for readability and space limitations.  Similarly, some
URIs contained within examples have been shortened for space and
readability reasons.</t>

</section>
<section anchor="defn" title="Definitions">
<t>The following definitions are used with SETs:</t>

<t><list style="hanging">
  <t hangText='Security Event Token (SET)'><vspace blankLines='0'/>
  A SET is a JWT <xref target="RFC7519"></xref> that contains an event payload describing
a security event.</t>
  <t hangText='Event Transmitter'><vspace blankLines='0'/>
  A service provider that delivers SETs to other providers known as
Event Receivers.</t>
  <t hangText='Event Receiver'><vspace blankLines='0'/>
  An Event Receiver is an entity that receives SETs through some
distribution method.  An Event Receiver is the same entity
referred as “recipient” or “receiver” in and related
specifications.  <xref target="RFC7519"></xref></t>
  <t hangText='Subject'><vspace blankLines='0'/>
  A SET describes an event or state change that has occurred about a
Subject.  A Subject may be a principal (e.g., Section 4.1.2
<xref target="RFC7519"></xref>), a web resource, an entity such as an IP address, or
the issuer itself that a SET might reference.</t>
  <t hangText='Profiling Specification'><vspace blankLines='0'/>
  A specification that uses the SET Token specification to define one or
more event types and the associated claims included.</t>
</list></t>

</section>
</section>
<section anchor="set" title="The Security Event Token (SET)">
<t>A SET is a data structure that encodes an “event payload” describing a
security event, wrapped in an “envelope” providing metadata and context
for the security event.  The SET envelope is a JWT Claims Set as defined in
<xref target="RFC7519"></xref>, consisting of a JSON object containing a set of claims.  The
event payload is a JSON object contained within the SET envelope, itself
containing claims that express information about the event, e.g. the type
of event, the subject of the event, and other information defined in a
Profiling Specification.</t>

<t>This specification defines a core set of claims for use in SET envelopes
and event payloads, however Profiling Specifications MAY define additional
claims of both types.  It is RECOMMENDED that Profiling Specifications
define claims to be used in the event payload rather than the envelope.  If
a Profiling Specification does define envelope claims, those claims SHOULD
be registered in the JWT Token Claims Registry <xref target="IANA.JWT.Claims"></xref> or have
Public Claim Names as defined in Section 4.2 of <xref target="RFC7519"></xref>.</t>

<section anchor="claims" title="SET Claims">
<t>This specification profiles the following claims defined in <xref target="RFC7519"></xref> for
use in the SET envelope:</t>

<t><list style="hanging">
  <t hangText='iss'><vspace blankLines='0'/>
  A case-sensitive string identifying the principal that issued the SET,
as defined by Section 4.1.1 of <xref target="RFC7519"></xref>.  This claim is REQUIRED.</t>
  <t hangText='aud'><vspace blankLines='0'/>
  A case-sensitive string or array of case-sensitive strings identifying
the audience for the SET, as defined by Section 4.1.3 of <xref target="RFC7519"></xref>.  This
claim is RECOMMENDED.</t>
  <t hangText='exp'><vspace blankLines='0'/>
  As defined by Section 4.1.4 of <xref target="RFC7519"></xref>, this claim is the time after
which the JWT MUST NOT be accepted for processing.  In the context of a SET
however, this notion does not apply since a SET reflects something that
has already been processed and is historical in nature.  Use of this claim
is NOT RECOMMENDED.</t>
  <t hangText='iat'><vspace blankLines='0'/>
  A value identifying the time at which the SET was issued, as defined by
Section 4.1.6 of <xref target="RFC7519"></xref>.  This claim is REQUIRED.</t>
  <t hangText='jti'><vspace blankLines='0'/>
  A unique identifier for an event, as defined by Section 4.1.7 of
<xref target="RFC7519"></xref>.  This claim is REQUIRED.</t>
</list></t>

<t>This specification defines the following new claims for use in the SET
envelope:</t>

<t><list style="hanging">
  <t hangText='event'><vspace blankLines='0'/>
  A JSON object known as the “event payload”, whose contents identify the
type of event contained within the SET and contain additional information 
defined as part of an event type definition in a Profiling Specification.</t>
</list></t>

<t>This specification defines the following claims for use in event payloads:</t>

<t><list style="hanging">
  <t hangText='event_type'><vspace blankLines='0'/>
  A string containing a URI that uniquely identifies an event type
defined by a Profiling Specification.  This claim is REQUIRED.</t>
  <t hangText='event_id'><vspace blankLines='0'/>
  A string that identifies a specific “real world” event or state change
to which this event is related. Recipients MAY use this claim to correlate
events across different SETs received at different times and/or by different
systems. The value of this claim MUST be unique with respect to the
transmitter to a specific “real world” event or state change, however
recipients MUST NOT interpret a difference in “event_id” values as a
guarantee that two events are not related to the same “real world” event or
state change. This claim is OPTIONAL.</t>
  <t hangText='event_subject'><vspace blankLines='0'/>
  A Subject Identifier that identifies the subject of the event.  (See:
<xref target="subject"></xref>) This claim is REQUIRED.</t>
  <t hangText='event_time'><vspace blankLines='0'/>
  A number identifying the date and time at which the event is believed to
  have occurred or will occur in the future.  Its value MUST take the form
  of a NumericDate value, as defined in Section 2 of <xref target="RFC7519"></xref>.  This claim
  is OPTIONAL, however if it is not present then the recipient MUST
  interpret that to mean that no event time is being asserted, either
  because there is no specific event time, the transmitter does not wish to
  share it, or the transmitter does not know its value.</t>
</list></t>

<t>Both the SET envelope and event payload MAY contain additional claims, such
as those defined in a Profiling Specification.  The format and meaning of
these claims is out of scope of this specification.  Implementations SHOULD
ignore any claims in the SET envelope or event payload that they do not
understand.</t>

<t>The following is a non-normative example showing a SET envelope expressing
a hypothetical event with two additional claims in the event payload:</t>

<figure title="Example SET With Event Claims In Payload" anchor="figset"><artwork><![CDATA[
{
  "jti": "3d0c3cf797584bd193bd0fb1bd4e7d30",
  "iss": "https://transmitter.example.com",
  "aud": [ "https://receiver.example.com" ],
  "iat": 1458496025,
  "event": {
    "event_type": "https://secevent.example.com/example_event",
    "event_subject": {
      "identifier_type": "urn:ietf:params:secevent:subject:email",
      "email": "user@example.com"
    },
    "event_time": 1458492425,
    "claim_1": "foo",
    "claim_2": "bar"
  }
}
]]></artwork></figure>

<t>The payload in this example contains the following:</t>

<t><list style="symbols">
  <t>An “event_type” claim whose value is the URI identifying the
hypothetical event type.</t>
  <t>An “event_subject” claim whose value identifies a subject via email
address.</t>
  <t>An “event_time” claim whose value is the time at which the event occured.</t>
  <t>Two claims “claim_1” and “claim_2” that are defined by the hypothetical 
event type’s Profiling Specification.</t>
</list></t>

</section>
<section anchor="subject" title="Subject Identifiers">
<t>The Subject Identifier provides a common syntax for expressing the subject
of a security event.  A Subject Identifier is a JSON object representing an
instance of a Subject Identifier Type.  A Subject Identifier Type defines a
way of identifying the subject of an event. Typically this is done by
defining a set of one or more claims about a subject that when taken
together collectively identify that subject.  Each Subject Identifier Type
MUST have a name which MUST be registered in the IANA “SET Subject
Identifier Types” registry established by <xref target="iana-sit"></xref>.</t>

<t>A Subject Identifier MUST contain an “identifier_type” claim, whose value is
a string containing the name of the Subject Identifier’s Subject Identifier
Type.  All other claims within the Subject Identifier MUST be defined by the
Subject Identifier Type.</t>

<t>The names of the Subject Identifier Types defined below are registered in
the IANA “SET Subject Identifier Types” registry established by <xref target="iana-sit"></xref>.</t>

<section anchor="implicit-subject-identifier-type" title="Implicit Subject Identifier Type">
<t>The “Implicit” Subject Identifier Type indicates that the recipient is to be
determined implicitly, either from other claims in the SET envelope or event
payload, or through some other context.  For example, there may be event
types for which the only logical subject is the transmitter itself, in which
case the subject is implicitly known from the “iss” claim in the SET
envelope.</t>

<t>The Implicit Subject Identifier Type has the name “implicit”.  This type
contains no additional claims.</t>

<t>The following is a non-normative example of a Subject Identifier
representing an instance of the Implicit Subject Identifier Type:</t>

<figure title="An Instance of the Implicit Subject Identifier Type" anchor="figimplicit"><artwork><![CDATA[
{
  "identifier_type": "implicit"
}
]]></artwork></figure>

</section>
<section anchor="email-subject-identifier-type" title="Email Subject Identifier Type">
<t>The “Email” Subject Identifier Type identifies a subject by email address.
It has the name “email”, and contains a single additional claim:</t>

<t><list style="hanging">
  <t hangText='email'><vspace blankLines='0'/>
  A string containing an email address.  Its value SHOULD conform to
<xref target="RFC5322"></xref>.  This claim is REQUIRED.</t>
</list></t>

<t>The following is a non-normative example of a Subject Identifier
representing an instance of the Email Subject Identifier Type:</t>

<figure title="An Instance of the Email Subject Identifier Type" anchor="figemail"><artwork><![CDATA[
{
  "identifier_type": "email",
  "email": "user@example.com"
}
]]></artwork></figure>

</section>
<section anchor="phone-number-subject-identifier-type" title="Phone Number Subject Identifier Type">
<t>The “Phone Number” Subject Identifier Type identifies a subject by phone
number. It has the name “phone_number”, and contains a single claim:</t>

<t><list style="hanging">
  <t hangText='phone_number'><vspace blankLines='0'/>
  A string containing a phone number.  It SHOULD be formatted according to
<xref target="E.164"></xref>.  This claim is REQUIRED.</t>
</list></t>

<t>The following is a non-normative example of a Subject Identifier
representing an instance of the Phone Number Subject Identifier Type:</t>

<figure title="An Instance of the Phone Number Subject Identifier Type" anchor="figphone"><artwork><![CDATA[
{
  "identifier_type": "phone_number",
  "phone_number": "+1 206 555 0123"
}
]]></artwork></figure>

</section>
<section anchor="issuer-and-subject-subject-identifier-type" title="Issuer and Subject Subject Identifier Type">
<t>The “Issuer and Subject” Subject Identifier Type identifies a subject by an
issuer and subject pair.  It has the name “iss-sub”, and contains two
claims:</t>

<t><list style="hanging">
  <t hangText='iss'><vspace blankLines='0'/>
  A case-sensitive string identifying the principal who is responsible for
assignment of the identifier in the “sub” claim, as defined by Section 4.1.1
of <xref target="RFC7519"></xref>.  This claim is REQUIRED.</t>
  <t hangText='sub'><vspace blankLines='0'/>
  A case-sensitive string containing an identifier that identifies a subject
within the context of the principal identified by the “iss” claim, as
defined by Section 4.1.2 of <xref target="RFC7519"></xref>.  This claim is REQUIRED.</t>
</list></t>

<t>The following is a non-normative example of a Subject Identifier
representing an instance of the Issuer and Subject Subject Identifier Type:</t>

<figure title="An Instance of the Issuer and Subject Subject Identifier Type" anchor="figisssub"><artwork><![CDATA[
{
  "identifier_type": "iss-sub",
  "iss": "http://id.example.com",
  "sub": "example.user.1234"
}
]]></artwork></figure>

</section>
</section>
<section anchor="set-type" title="Explicit Typing of SETs">
<t>This specification registers the “application/secevent+jwt” media
type.  SETs MAY include this media type in the “typ” header parameter of
the JWT containing the SET to explicitly declare that the JWT is a SET.
This MUST be included if the SET could be used in an application context
in which it could be confused with other kinds of JWTs.  Profiling
Specifications MAY declare that this is REQUIRED for SETs containing events
defined by the Profiling Specification.</t>

<t>Per the definition of “typ” in Section 4.1.9 of <xref target="RFC7515"></xref>, it is
RECOMMENDED that the “application/” prefix be omitted.  Therefore,
the “typ” value used SHOULD be “secevent+jwt”.</t>

</section>
<section anchor="construction" title="Security Event Token Construction">
<t>A SET is a JWT, and therefore it’s construction follows that described in
<xref target="RFC7519"></xref>.</t>

<t>While this specification uses JWT to convey a SET, implementers SHALL
NOT use SETs to convey authentication or authorization assertions.</t>

<t>The following is the example JWT Claims Set from <xref target="figset"></xref>, expressed as
an unsigned JWT.  The JOSE Header is:</t>

<figure><artwork><![CDATA[
{"typ":"secevent+jwt","alg":"none"}
]]></artwork></figure>

<t>Base64url encoding of the octets of the UTF-8 representation of the
JOSE Header yields:</t>

<figure><artwork><![CDATA[
eyJ0eXAiOiJzZWNldmVudCtqd3QiLCJhbGciOiJub25lIn0
]]></artwork></figure>

<t>The example JWT Claims Set is encoded as follows:</t>

<figure><artwork><![CDATA[
ew0KICAgImp0aSI6ICIzZDBjM2NmNzk3NTg0YmQxOTNiZDBmYjFiZDRlN2QzMCIsDQog
ICAiaXNzIjogImh0dHBzOi8vdHJhbnNtaXR0ZXIuZXhhbXBsZS5jb20iLA0KICAgImF1
ZCI6IFsgImh0dHBzOi8vcmVjZWl2ZXIuZXhhbXBsZS5jb20iIF0sDQogICAiaWF0Ijog
MTQ1ODQ5NjAyNSwNCiAgICJldmVudCI6IHsNCiAgICAgImV2ZW50X3R5cGUiOiAiaHR0
cHM6Ly9zZWNldmVudC5leGFtcGxlLmNvbS9leGFtcGxlX2V2ZW50IiwNCiAgICAgImV2
ZW50X3N1YmplY3QiOiB7DQogICAgICAgImlkZW50aWZpZXJfdHlwZSI6ICJlbWFpbCIs
DQogICAgICAgImVtYWlsIjogInVzZXJAZXhhbXBsZS5jb20iDQogICAgIH0sDQogICAg
ICJldmVudF90aW1lIjogMTQ1ODQ5MjQyNSwNCiAgICAgImNsYWltXzEiOiAiZm9vIiwN
CiAgICAgImNsYWltXzIiOiAiYmFyIg0KICAgfQ0KIH0=
]]></artwork></figure>

<t>The encoded JWS signature is the empty string.  Concatenating the
parts yields the following complete JWT:</t>

<figure title="Example Unsecured Security Event Token" anchor="figsetencoded"><artwork><![CDATA[
eyJ0eXAiOiJzZWNldmVudCtqd3QiLCJhbGciOiJub25lIn0.
ew0KICAgImp0aSI6ICIzZDBjM2NmNzk3NTg0YmQxOTNiZDBmYjFiZDRlN2QzMCIsDQog
ICAiaXNzIjogImh0dHBzOi8vdHJhbnNtaXR0ZXIuZXhhbXBsZS5jb20iLA0KICAgImF1
ZCI6IFsgImh0dHBzOi8vcmVjZWl2ZXIuZXhhbXBsZS5jb20iIF0sDQogICAiaWF0Ijog
MTQ1ODQ5NjAyNSwNCiAgICJldmVudCI6IHsNCiAgICAgImV2ZW50X3R5cGUiOiAiaHR0
cHM6Ly9zZWNldmVudC5leGFtcGxlLmNvbS9leGFtcGxlX2V2ZW50IiwNCiAgICAgImV2
ZW50X3N1YmplY3QiOiB7DQogICAgICAgImlkZW50aWZpZXJfdHlwZSI6ICJlbWFpbCIs
DQogICAgICAgImVtYWlsIjogInVzZXJAZXhhbXBsZS5jb20iDQogICAgIH0sDQogICAg
ICJldmVudF90aW1lIjogMTQ1ODQ5MjQyNSwNCiAgICAgImNsYWltXzEiOiAiZm9vIiwN
CiAgICAgImNsYWltXzIiOiAiYmFyIg0KICAgfQ0KIH0=.
]]></artwork></figure>

<t>For the purpose of a simpler example in Figure 5, an unsecured token
was shown.  When SETs are not signed or encrypted, the Event Receiver
MUST employ other mechanisms such as TLS and HTTP to provide
integrity, confidentiality, and issuer validation, as needed by the
application.</t>

<t>When validation (i.e. auditing), or additional transmission security
is required, JWS signing and/or JWE encryption MAY be used.  To
create and or validate a signed and/or encrypted SET, follow the
instructions in Section 7 of <xref target="RFC7519"></xref>.</t>

</section>
</section>
<section anchor="related-events" title="Related Events">
<t>In order to accommodate use cases that require communicating multiple
related security events to an Event Receiver, this section defines the
“Related Events” event type. A Related Events event is essentially a
container for two or more events that are related to one another, in
that they are all related to the same “real world” event or state
change. The Related Events event SHOULD NOT be used to combine
unrelated events into a single set, and MUST NOT be used as a general
purpose batch transmission mechanism. Profiling Specifications and/or
implementers who desire an event grouping mechanism with these or
other semantics are encouraged to profile this specification and
define additional event types for those use cases.</t>

<t>The event type for the Related Events event is the URN
“urn:ietf:secevents:related_events”.</t>

<t>The Related Events event has a single additional event payload claim:</t>

<t><list style="hanging">
  <t hangText='events'><vspace blankLines='0'/>
  An array of event payloads, as defined in this document.</t>
</list></t>

<section anchor="related-events-proc" title="Processing Related Events">
<t>Event payloads within the “events” claim can inherit the “event_id”,
“event_subject”, and “event_time” claims from the Related Event’s event
payload. Transmitters MAY omit some, all, or none of these claims from an
event payload within the “events” claim. When a claim is omitted, recipients
MUST use the value of the corresponding claim in the Related Event event’s
payload.</t>

<t>The following is a non-normative example of a SET containing a Related
Events event:</t>

<figure title="Example SET Containing A Related Events Event" anchor="figrelated"><artwork><![CDATA[
{
  "jti": "1c0038c2-02db-40de-ad50-122a64724166",
  "iss": "https://transmitter.example.com",
  "aud": [ "https://receiver.example.com" ],
  "iat": 1510666261,
  "event": {
    "event_type": "urn:ietf:secevent:related_events",
    "event_subject": {
      "identifier_type": "email",
      "email": "user@example.com"
    },
    "event_time": 1510662661,
    "events": [
      {
        "event_type": "http://specs.example.com/set_profile/event_1"
      },
      {
        "event_type": "http://specs.example.com/set_profile/event_2",
        "event_time": 151059061
      }
    ]
  }
}
]]></artwork></figure>

<t>The following table demonstrates how event payloads within a Related Events
event inherit values for omitted claims (For brevity, event types have are
abbreviated in this table):</t>

<figure title="Example of Event Payloads Inheriting Values for Omitted Claims" anchor="figomitted"><artwork><![CDATA[
+--------------------+------------+-------------------------------+
| Event Type         | Event Time | Event Subject                 |
+--------------------+------------+-------------------------------+
| ...:related_events | 151062661  | {                             |
+--------------------+            |   "identifier_type": "email", |
| .../event_1        |            |   "email": "user@example.com" |
+--------------------+------------+ }                             |
| .../event_2        | 151059061  |                               |
+--------------------+------------+-------------------------------+
]]></artwork></figure>

<t>Since the first related event payload omits the “event_time” claim, it
inherits the event time from the Related Events event payload. Similarly,
since both the first and the second related event paylods omit the
“event_subject” claim, both inherit the event subject from the Related
Events payload.</t>

</section>
</section>
<section anchor="profile-req" title="Requirements for SET Profiles">
<t>Profiling Specifications for SETs define the syntax and semantics of
SETs conforming to that SET profile and rules for validating those
SETs.  The syntax defined by Profiling Specifications includes what
SET envelope and event payload claims are used by SETs expressing and
event defined by the profile.</t>

<t>Defining the semantics of the SET contents for SETs utilizing the
profile is equally important.  Possibly most important is defining
the procedures used to validate the SET issuer and to obtain the keys
controlled by the issuer that were used for cryptographic operations
used in the JWT representing the SET.  For instance, some profiles
may define an algorithm for retrieving the SET issuer’s keys that
uses the “iss” claim value as its input.  Likewise, if the profile
allows (or requires) that the JWT be unsecured, the means by which
the integrity of the JWT is ensured MUST be specified.</t>

<t>Profiling Specifications MUST define how the event Subject is
identified in the SET, as well as how to differentiate between the
event Subject’s Issuer and the SET Issuer, if applicable.  It is NOT
RECOMMENDED for Profiling Specifications to use the “sub” claim 
defined in <xref target="RFC7519"></xref> in cases in which the Subject is not globally
unique and has a different Issuer from the SET itself.</t>

<t>Profiling Specifications MUST clearly specify the steps that a
recipient of a SET utilizing that profile MUST perform to validate
that the SET is both syntactically and semantically valid.</t>

<section anchor="extensions" title="Extending Events">
<t>As needs change and new use cases develop, it may be desirable to augment
existing event definitions with new claims. In order to avoid collisions,
Profiling Specifications that extend existing events with additional event
payload claims SHOULD use Collision-Resistant Names as defined in Section 2
of <xref target="RFC7519"></xref> for the names of the new claims.</t>

</section>
</section>
<section anchor="security" title="Security Considerations">

<section anchor="c-and-i" title="Confidentiality and Integrity">
<t>SETs may often contain sensitive information.  Therefore, methods for
distribution of events SHOULD require the use of a transport-layer
security mechanism when distributing events.  Parties MUST support
TLS 1.2 <xref target="RFC5246"></xref> and MAY support additional transport-layer
mechanisms meeting its security requirements.  When using TLS, the
client MUST perform a TLS/SSL server certificate check, per
<xref target="RFC6125"></xref>.  Implementation security considerations for TLS can be
found in “Recommendations for Secure Use of TLS and DTLS” <xref target="RFC7525"></xref>.</t>

<t>Security Events distributed through third-parties or that carry
personally identifiable information, SHOULD be encrypted using JWE
<xref target="RFC7516"></xref> or secured for confidentiality by other means.</t>

<t>Unless integrity of the JWT is ensured by other means, it MUST be
signed using JWS <xref target="RFC7515"></xref> so that individual events can be
authenticated and validated by the Event Receiver.</t>

</section>
<section anchor="delivery" title="Delivery">
<t>This specification does not define a delivery mechanism by itself.
In addition to confidentiality and integrity (discussed above),
implementers and Profiling Specifications MUST consider the
consequences of delivery mechanisms that are not secure and/or not
assured.  For example, while a SET may be end-to-end secured using
JWE encrypted SETs, without TLS there is no assurance that the
correct endpoint received the SET and that it could be successfully
processed.</t>

</section>
<section anchor="sequencing" title="Sequencing">
<t>As defined in this specification, there is no defined way to order
multiple SETs in a sequence.  Depending on the type and nature of SET
event, order may or may not matter.  For example, in provisioning,
event order is critical – an object could not be modified before it
was created.  In other SET types, such as a token revocation, the
order of SETs for revoked tokens does not matter.  If however, the
event was described as a log-in or logged-out status for a user
subject, then order becomes important.</t>

<t>Profiling Specifications and implementers SHOULD take caution when
using timestamps such as “iat” to define order.  Distributed systems
will have some amount of clock-skew and thus time by itself will not
guarantee order.</t>

<t>Specifications profiling SET SHOULD define a mechanism for detecting
order or sequence of events.</t>

</section>
<section anchor="timing" title="Timing Issues">
<t>When SETs are delivered asynchronously and/or out-of-band with
respect to the original action that incurred the security event, it
is important to consider that a SET might be delivered to an Event
Receiver in advance or well behind the process that caused the event.
For example, a user having been required to logout and then log back
in again, may cause a logout SET to be issued that may arrive at the
same time as the user-agent accesses a web site having just logged-
in.  If timing is not handled properly, the effect would be to
erroneously treat the new user session as logged out.  Profiling
Specifications SHOULD be careful to anticipate timing and subject
selection information.  For example, it might be more appropriate to
cancel a “session” rather than a “user”.  Alternatively, the
specification could use timestamps that allows new sessions to be
started immediately after a stated logout event time.</t>

</section>
<section anchor="not-id-tokens" title="Distinguishing SETs from ID Tokens">
<t>Because <xref target="RFC7519"></xref> states that “all claims that are not understood by
implementations MUST be ignored”, there is a consideration that a SET
token might be confused with ID Token <xref target="OpenID.Core"></xref> if a SET is
mistakenly or intentionally used in a context requiring an ID Token.
If a SET could otherwise be interpreted as a valid ID Token (because
it includes the required claims for an ID Token and valid issuer and
audience claim values for an ID Token) then that SET profile MUST
require that the “exp” claim not be present in the SET.  Because
“exp” is a required claim in ID Tokens, valid ID Token
implementations will reject such a SET if presented as if it were an
ID Token.</t>

<t>Excluding “exp” from SETs that could otherwise be confused with ID
Tokens is actually defense in depth.  In any OpenID Connect contexts
in which an attacker could attempt to substitute a SET for an ID
Token, the SET would actually already be rejected as an ID Token
because it would not contain the correct “nonce” claim value for the
ID Token to be accepted in contexts for which substitution is
possible.</t>

<t>Note that the use of explicit typing, as described in Section 2.2,
will not achieve disambiguation between ID Tokens and SETs, as the ID
Token validation rules do not use the “typ” header parameter value.</t>

</section>
<section anchor="not-access-tokens" title="Distinguishing SETs from Access Tokens">
<t>OAuth 2.0 <xref target="RFC6749"></xref> defines access tokens as being opaque.
Nonetheless, some implementations implement access tokens as JWTs.
Because the structure of these JWTs is implementation-specific,
ensuring that a SET cannot be confused with such an access token is
therefore likewise, in general, implementation specific.
Nonetheless, it is recommended that SET profiles employ the following
strategies to prevent possible substitutions of SETs for access
tokens in contexts in which that might be possible:</t>

<t><list style="symbols">
  <t>Prohibit use of the “exp” claim, as is done to prevent ID Token
confusion.</t>
  <t>Where possible, use a separate “aud” claim value to distinguish
between the Event Receiver and the protected resource that is the
audience of an access token.</t>
  <t>Modify access token validation systems to check for the presence
of the “events” claim as a means to detect security event tokens.
This is particularly useful if the same endpoint may receive both
types of tokens.</t>
  <t>Employ explicit typing, as described in Section 2.2, and modify
access token validation systems to use the “typ” header parameter
value.</t>
</list></t>

</section>
<section anchor="not-other-jwts" title="Distinguishing SETs from other kinds of JWTs">
<t>JWTs are now being used in application areas beyond the identity
applications in which they first appeared.  For instance, the Session
Initiation Protocol (SIP) Via Header Field <xref target="RFC8055"></xref> and Personal
Assertion Token (PASSporT) <xref target="I-D.ietf-stir-passport"></xref> specifications
both define JWT profiles that use mostly or completely different sets
of claims than are used by ID Tokens.  If it would otherwise be
possible for an attacker to substitute a SET for one of these (or
other) kinds of JWTs, then the SET profile must be defined in such a
way that any substituted SET will result in its rejection when
validated as the intended kind of JWT.</t>

<t>The most direct way to prevent confusion is to employ explicit
typing, as described in Section 2.2, and modify applicable token
validation systems to use the “typ” header parameter value.  This
approach can be employed for new systems but may not be applicable to
existing systems.</t>

<t>Another way to ensure that a SET is not confused with another kind of
JWT is to have the JWT validation logic reject JWTs containing an
“events” claim unless the JWT is intended to be a SET.  This approach
can be employed for new systems but may not be applicable to existing
systems.</t>

<t>For many use cases, the simplest way to prevent substitution is
requiring that the SET not include claims that are required for the
kind of JWT that might be the target of an attack.  For example, for
<xref target="RFC8055"></xref>, the “sip_callid” claim could be omitted and for
<xref target="I-D.ietf-stir-passport"></xref>, the “orig” claim could be omitted.</t>

<t>In many contexts, simple measures such as these will accomplish the
task, should confusion otherwise even be possible.  Note that this
topic is being explored in a more general fashion in JSON Web Token
Best Current Practices <xref target="I-D.sheffer-oauth-jwt-bcp"></xref>.  The proposed
best practices in that draft may also be applicable for particular
SET profiles and use cases.</t>

</section>
</section>
<section anchor="privacy" title="Privacy Considerations">
<t>If a SET needs to be retained for audit purposes, JWS MAY be used to
provide verification of its authenticity.</t>

<t>Event Transmitters SHOULD attempt to specialize feeds so that the
content is targeted to the specific business and protocol needs of an
Event Receiver.</t>

<t>When sharing personally identifiable information or information that
is otherwise considered confidential to affected users, Event
Transmitters and Receivers MUST have the appropriate legal agreements
and user consent or terms of service in place.</t>

<t>The propagation of subject identifiers can be perceived as personally
identifiable information.  Where possible, Event Transmitters and
Receivers SHOULD devise approaches that prevent propagation – for
example, the passing of a hash value that requires the Event Receiver
to know the subject.</t>

</section>
<section anchor="iana" title="IANA Considerations">

<section anchor="iana-sit" title="SET Subject Identifier Types Registry">
<t>This section establishes the IANA “SET Subject Identifier Types” registry
// TODO</t>

</section>
<section anchor="iana-claims" title="JSON Web Token Claims Registration">
<t>This specification registers the “event” claim in the IANA “JSON Web Token
Claims” registry <xref target="IANA.JWT.Claims"></xref> established by <xref target="RFC7519"></xref>.</t>

<section anchor="registry-contents" title="Registry Contents">
<t><list style="symbols">
  <t>Claim Name: “event”</t>
  <t>Claim Description: Security Event Payload</t>
  <t>Change Controller: IESG</t>
  <t>Specification Document(s): Section 2.1 of [[ this specification ]]</t>
</list></t>

</section>
</section>
<section anchor="iana-media-type" title="Media Type Registration">

<section anchor="registry-contents-1" title="Registry Contents">
<t>This section registers the “application/secevent+jwt” media type
<xref target="RFC2046"></xref> in the “Media Types” registry <xref target="IANA.MediaTypes"></xref> in the
manner described in <xref target="RFC6838"></xref>, which can be used to indicate that the
content is a SET.</t>

<t><list style="symbols">
  <t>Type name: application</t>
  <t>Subtype name: secevent+jwt</t>
  <t>Required parameters: n/a</t>
  <t>Optional parameters: n/a</t>
  <t>Encoding considerations: 8bit; A SET is a JWT; JWT values are
encoded as a series of base64url-encoded values (some of which may
be the empty string) separated by period (‘.’) characters.</t>
  <t>Security considerations: See the Security Considerations section
of [[ this specification ]]</t>
  <t>Interoperability considerations: n/a</t>
  <t>Published specification: Section 2.2 of [[ this specification ]]</t>
  <t>Applications that use this media type: TBD</t>
  <t>Fragment identifier considerations: n/a</t>
  <t>Additional information:</t>
  <t>Magic number(s): n/a</t>
  <t>File extension(s): n/a</t>
  <t>Macintosh file type code(s): n/a</t>
  <t>Person &amp; email address to contact for further information:
Michael B. Jones, mbj@microsoft.com</t>
  <t>Intended usage: COMMON</t>
  <t>Restrictions on usage: none</t>
  <t>Author: Michael B. Jones, mbj@microsoft.com</t>
  <t>Change controller: IESG</t>
  <t>Provisional registration?  No</t>
</list></t>

</section>
</section>
</section>


  </middle>

  <back>

    <references title='Normative References'>

<reference anchor="IANA.JWT.Claims" target="http://www.iana.org/assignments/jwt">
  <front>
    <title>JSON Web Token Claims</title>
    <author >
      <organization>IANA</organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="IANA.MediaTypes" target="http://www.iana.org/assignments/media-types">
  <front>
    <title>Media Types</title>
    <author >
      <organization>IANA</organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>




<reference  anchor="RFC2119" target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC3986" target='https://www.rfc-editor.org/info/rfc3986'>
<front>
<title>Uniform Resource Identifier (URI): Generic Syntax</title>
<author initials='T.' surname='Berners-Lee' fullname='T. Berners-Lee'><organization /></author>
<author initials='R.' surname='Fielding' fullname='R. Fielding'><organization /></author>
<author initials='L.' surname='Masinter' fullname='L. Masinter'><organization /></author>
<date year='2005' month='January' />
<abstract><t>A Uniform Resource Identifier (URI) is a compact sequence of characters that identifies an abstract or physical resource.  This specification defines the generic URI syntax and a process for resolving URI references that might be in relative form, along with guidelines and security considerations for the use of URIs on the Internet.  The URI syntax defines a grammar that is a superset of all valid URIs, allowing an implementation to parse the common components of a URI reference without knowing the scheme-specific requirements of every possible identifier.  This specification does not define a generative grammar for URIs; that task is performed by the individual specifications of each URI scheme.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='STD' value='66'/>
<seriesInfo name='RFC' value='3986'/>
<seriesInfo name='DOI' value='10.17487/RFC3986'/>
</reference>



<reference  anchor="RFC5246" target='https://www.rfc-editor.org/info/rfc5246'>
<front>
<title>The Transport Layer Security (TLS) Protocol Version 1.2</title>
<author initials='T.' surname='Dierks' fullname='T. Dierks'><organization /></author>
<author initials='E.' surname='Rescorla' fullname='E. Rescorla'><organization /></author>
<date year='2008' month='August' />
<abstract><t>This document specifies Version 1.2 of the Transport Layer Security (TLS) protocol.  The TLS protocol provides communications security over the Internet.  The protocol allows client/server applications to communicate in a way that is designed to prevent eavesdropping, tampering, or message forgery.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5246'/>
<seriesInfo name='DOI' value='10.17487/RFC5246'/>
</reference>



<reference  anchor="RFC5322" target='https://www.rfc-editor.org/info/rfc5322'>
<front>
<title>Internet Message Format</title>
<author initials='P.' surname='Resnick' fullname='P. Resnick' role='editor'><organization /></author>
<date year='2008' month='October' />
<abstract><t>This document specifies the Internet Message Format (IMF), a syntax for text messages that are sent between computer users, within the framework of &quot;electronic mail&quot; messages.  This specification is a revision of Request For Comments (RFC) 2822, which itself superseded Request For Comments (RFC) 822, &quot;Standard for the Format of ARPA Internet Text Messages&quot;, updating it to reflect current practice and incorporating incremental changes that were specified in other RFCs.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5322'/>
<seriesInfo name='DOI' value='10.17487/RFC5322'/>
</reference>



<reference  anchor="RFC6125" target='https://www.rfc-editor.org/info/rfc6125'>
<front>
<title>Representation and Verification of Domain-Based Application Service Identity within Internet Public Key Infrastructure Using X.509 (PKIX) Certificates in the Context of Transport Layer Security (TLS)</title>
<author initials='P.' surname='Saint-Andre' fullname='P. Saint-Andre'><organization /></author>
<author initials='J.' surname='Hodges' fullname='J. Hodges'><organization /></author>
<date year='2011' month='March' />
<abstract><t>Many application technologies enable secure communication between two entities by means of Internet Public Key Infrastructure Using X.509 (PKIX) certificates in the context of Transport Layer Security (TLS). This document specifies procedures for representing and verifying the identity of application services in such interactions.   [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6125'/>
<seriesInfo name='DOI' value='10.17487/RFC6125'/>
</reference>



<reference  anchor="RFC6749" target='https://www.rfc-editor.org/info/rfc6749'>
<front>
<title>The OAuth 2.0 Authorization Framework</title>
<author initials='D.' surname='Hardt' fullname='D. Hardt' role='editor'><organization /></author>
<date year='2012' month='October' />
<abstract><t>The OAuth 2.0 authorization framework enables a third-party application to obtain limited access to an HTTP service, either on behalf of a resource owner by orchestrating an approval interaction between the resource owner and the HTTP service, or by allowing the third-party application to obtain access on its own behalf.  This specification replaces and obsoletes the OAuth 1.0 protocol described in RFC 5849.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6749'/>
<seriesInfo name='DOI' value='10.17487/RFC6749'/>
</reference>



<reference  anchor="RFC7519" target='https://www.rfc-editor.org/info/rfc7519'>
<front>
<title>JSON Web Token (JWT)</title>
<author initials='M.' surname='Jones' fullname='M. Jones'><organization /></author>
<author initials='J.' surname='Bradley' fullname='J. Bradley'><organization /></author>
<author initials='N.' surname='Sakimura' fullname='N. Sakimura'><organization /></author>
<date year='2015' month='May' />
<abstract><t>JSON Web Token (JWT) is a compact, URL-safe means of representing claims to be transferred between two parties.  The claims in a JWT are encoded as a JSON object that is used as the payload of a JSON Web Signature (JWS) structure or as the plaintext of a JSON Web Encryption (JWE) structure, enabling the claims to be digitally signed or integrity protected with a Message Authentication Code (MAC) and/or encrypted.</t></abstract>
</front>
<seriesInfo name='RFC' value='7519'/>
<seriesInfo name='DOI' value='10.17487/RFC7519'/>
</reference>



<reference  anchor="RFC7525" target='https://www.rfc-editor.org/info/rfc7525'>
<front>
<title>Recommendations for Secure Use of Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS)</title>
<author initials='Y.' surname='Sheffer' fullname='Y. Sheffer'><organization /></author>
<author initials='R.' surname='Holz' fullname='R. Holz'><organization /></author>
<author initials='P.' surname='Saint-Andre' fullname='P. Saint-Andre'><organization /></author>
<date year='2015' month='May' />
<abstract><t>Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS) are widely used to protect data exchanged over application protocols such as HTTP, SMTP, IMAP, POP, SIP, and XMPP.  Over the last few years, several serious attacks on TLS have emerged, including attacks on its most commonly used cipher suites and their modes of operation.  This document provides recommendations for improving the security of deployed services that use TLS and DTLS. The recommendations are applicable to the majority of use cases.</t></abstract>
</front>
<seriesInfo name='BCP' value='195'/>
<seriesInfo name='RFC' value='7525'/>
<seriesInfo name='DOI' value='10.17487/RFC7525'/>
</reference>


<reference anchor="E.164" target="http://www.itu.int/rec/T-REC-E.164-201011-I/en">
  <front>
    <title>The international public telecommunication numbering plan</title>
    <author >
      <organization>International Telecommunication Union</organization>
    </author>
    <date year="2010"/>
  </front>
</reference>


    </references>

    <references title='Informative References'>





<reference anchor="I-D.ietf-stir-passport">
<front>
<title>Personal Assertion Token (PASSporT)</title>

<author initials='C' surname='Wendt' fullname='Chris Wendt'>
    <organization />
</author>

<author initials='J' surname='Peterson' fullname='Jon Peterson'>
    <organization />
</author>

<date month='February' day='9' year='2017' />

<abstract><t>This document defines a method for creating and validating a token that cryptographically verifies an originating identity, or more generally a URI or telephone number representing the originator of personal communications.  The PASSporT token is cryptographically signed to protect the integrity of the identity the originator and to verify the assertion of the identity information at the destination. The cryptographic signature is defined with the intention that it can confidently verify the originating persona even when the signature is sent to the destination party over an insecure channel.  PASSporT is particularly useful for many personal communications applications over IP networks and other multi-hop interconnection scenarios where the originating and destination parties may not have a direct trusted relationship.</t></abstract>

</front>

<seriesInfo name='Internet-Draft' value='draft-ietf-stir-passport-11' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-ietf-stir-passport-11.txt' />
</reference>



<reference anchor="I-D.sheffer-oauth-jwt-bcp">
<front>
<title>JSON Web Token Best Current Practices</title>

<author initials='Y' surname='Sheffer' fullname='Yaron Sheffer'>
    <organization />
</author>

<author initials='D' surname='Hardt' fullname='Dick Hardt'>
    <organization />
</author>

<author initials='M' surname='Jones' fullname='Michael Jones'>
    <organization />
</author>

<date month='July' day='3' year='2017' />

<abstract><t>JSON Web Tokens, also known as JWTs [RFC7519], are URL-safe JSON- based security tokens that contain a set of claims that can be signed and/or encrypted.  JWTs are being widely used and deployed as a simple security token format in numerous protocols and applications, both in the area of digital identity, and in other application areas. The goal of this Best Current Practices document is to provide actionable guidance leading to secure implementation and deployment of JWTs.</t></abstract>

</front>

<seriesInfo name='Internet-Draft' value='draft-sheffer-oauth-jwt-bcp-01' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-sheffer-oauth-jwt-bcp-01.txt' />
</reference>


<reference anchor="OpenID.Core" target="http://openid.net/specs/openid-connect-core-1_0.html">
  <front>
    <title>OpenID Connect Core 1.0</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>




<reference  anchor="RFC2046" target='https://www.rfc-editor.org/info/rfc2046'>
<front>
<title>Multipurpose Internet Mail Extensions (MIME) Part Two: Media Types</title>
<author initials='N.' surname='Freed' fullname='N. Freed'><organization /></author>
<author initials='N.' surname='Borenstein' fullname='N. Borenstein'><organization /></author>
<date year='1996' month='November' />
<abstract><t>This second document defines the general structure of the MIME media typing system and defines an initial set of media types.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='2046'/>
<seriesInfo name='DOI' value='10.17487/RFC2046'/>
</reference>



<reference  anchor="RFC6838" target='https://www.rfc-editor.org/info/rfc6838'>
<front>
<title>Media Type Specifications and Registration Procedures</title>
<author initials='N.' surname='Freed' fullname='N. Freed'><organization /></author>
<author initials='J.' surname='Klensin' fullname='J. Klensin'><organization /></author>
<author initials='T.' surname='Hansen' fullname='T. Hansen'><organization /></author>
<date year='2013' month='January' />
<abstract><t>This document defines procedures for the specification and registration of media types for use in HTTP, MIME, and other Internet protocols.  This memo documents an Internet Best Current Practice.</t></abstract>
</front>
<seriesInfo name='BCP' value='13'/>
<seriesInfo name='RFC' value='6838'/>
<seriesInfo name='DOI' value='10.17487/RFC6838'/>
</reference>



<reference  anchor="RFC7515" target='https://www.rfc-editor.org/info/rfc7515'>
<front>
<title>JSON Web Signature (JWS)</title>
<author initials='M.' surname='Jones' fullname='M. Jones'><organization /></author>
<author initials='J.' surname='Bradley' fullname='J. Bradley'><organization /></author>
<author initials='N.' surname='Sakimura' fullname='N. Sakimura'><organization /></author>
<date year='2015' month='May' />
<abstract><t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures.  Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification.  Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t></abstract>
</front>
<seriesInfo name='RFC' value='7515'/>
<seriesInfo name='DOI' value='10.17487/RFC7515'/>
</reference>



<reference  anchor="RFC7516" target='https://www.rfc-editor.org/info/rfc7516'>
<front>
<title>JSON Web Encryption (JWE)</title>
<author initials='M.' surname='Jones' fullname='M. Jones'><organization /></author>
<author initials='J.' surname='Hildebrand' fullname='J. Hildebrand'><organization /></author>
<date year='2015' month='May' />
<abstract><t>JSON Web Encryption (JWE) represents encrypted content using JSON-based data structures.  Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and IANA registries defined by that specification.  Related digital signature and Message Authentication Code (MAC) capabilities are described in the separate JSON Web Signature (JWS) specification.</t></abstract>
</front>
<seriesInfo name='RFC' value='7516'/>
<seriesInfo name='DOI' value='10.17487/RFC7516'/>
</reference>



<reference  anchor="RFC8055" target='https://www.rfc-editor.org/info/rfc8055'>
<front>
<title>Session Initiation Protocol (SIP) Via Header Field Parameter to Indicate Received Realm</title>
<author initials='C.' surname='Holmberg' fullname='C. Holmberg'><organization /></author>
<author initials='Y.' surname='Jiang' fullname='Y. Jiang'><organization /></author>
<date year='2017' month='January' />
<abstract><t>This specification defines a new Session Initiation Protocol (SIP) Via header field parameter, 'received-realm', which allows a SIP entity acting as an entry point to a transit network to indicate from which adjacent upstream network a SIP request is received by using a network realm value associated with the adjacent network.</t></abstract>
</front>
<seriesInfo name='RFC' value='8055'/>
<seriesInfo name='DOI' value='10.17487/RFC8055'/>
</reference>




    </references>


<section anchor="ack" title="Acknowledgments">
<t>The editors would like to thank the participants on the IETF secevent
mailing list and related working groups for their support of this
specification.</t>

</section>


  </back>

<!-- ##markdown-source:
H4sIAAJYDloAA+19a3PTyLbo9/4VKk/VHbK3bZJAeOTUrjshhCFcCAwJAwNF
Tcly2xbIkkeSE8yc2b/9rmc/ZDuBffc598vhC7HU6sfq9V6rVw8GA9PmbWEP
k3ObLeu8XSUnl7Zsk4vqsy2TW+cnFzsmHY1qe3mYNDaz+HLQ4kszrrIyncOn
4zqdtIM6z2ZpWaaDuNlgd9+M0xaa7e/u3R/s7Q327poMHkyrenWY5OWkMvmi
Pkzaetm0+7u7D+EDk9Y29XMyV1X9eVpXy4WfhPlsV/B4fJiclq2tS9sOHuM8
jGnatBz/nhZVCYOubGMW+WHyoa2yftJUdVvbSQN/reb4x0cYatnOqvrQJAOT
wL+8bA6To2HyKM0+z9OSnvEyj2BxI1sUNnpX1dO0zL+mbV6V0Gaefq34hZ2n
eXGYKFh+SunVMKvm9Doa7+0weWzLMm+aYLy3eVHk6Tx6E4/2c1VNCxuOdjXm
xj9N6RWNFo30YgjraNI6DwZ6AVCxX9PwRTzOcd5kVTjMnL8YpvTFTxm+3zjW
M9iEcE0vEBq2SB6Fr+LBoEldNRXsZDjg6NNPc33hYAjIcZjM2nZxePt2Y4vJ
AFa+tOMhItVtY8qqnkOnlxY2Nzk9OjsaPnt7MTwu0nzeHFIHgvvPzl+eJW/t
SLCeW1ADhxz0byD/05QPqUvuJq2ntnVTubq6GuZpmQ6h1e20afJpOQeMbW5/
ump1Ji/sOE8vVgsbz4QeJ/T8v2D8OfY+aKX310+O9/f2Hh7yn3cePrgnfx7s
33V/3tnflz/v7e0f6J/37+pn9w/2/J/c4GS4d+9utKqLmQWMQCqlPU6LZLEc
FXmWtLawsJnzZZln9Copl/ORrfNymiwKobBNq2uXsMnt7dpmty8Gr0+OBzTo
AFjMLnCY09u2/AbwRTO6WJvKmzIXUnb8a9cgaoVYNXg8zG07GTRtXg8WAOwF
kIa+aWZ2MrH1oMJ5DGD3B6NsgS9fLmx5+nh4XNU2AhQ/T46rsrRZm+D7ZG+4
uwkMFTTNx0Pge7ebhc0aeTDI+Fv4v7aDvd93h7N2XhjZ7l23sfce3Hngt/DA
/6kNHuwewFMzGAySdNS0dZq15mKWNwmOlk8USGM7yYGOkxa2eJMI6SdXM6D5
ZJ6ukpE14xy6ykfL1o6TS8D0NFnUFbDmqkiaJTRLm+TpxcWrYUI4s6lDQzKp
MwvoZJIXMo0ONd8Cot/RaWRpidOoFrzrxSpB6oDJgMi4XdWJLbN6tYDZwQyO
EhgJFthkMGPoO01AsrQWSSmpJmYCEEkmdTWnQRe2xikhXsBL6C4hXlTDy7RN
8pbwvxzDDKukmYF4S67ydmaABwIyIj+1CSCzhc/rZshgn+fjMXB3A3haV+Nl
Riv984ccf/5l/hH8u25jYCb2Cwzd5KNiM0RFyjNeR9sFX6LwmgJ8lg3RpGxW
s2G3TDz+aJkXsFz4a9ueJDLiB2EjHwFGBiQ6Aq3CoS7zsUWoI2cHtG7THHeK
tAoGK+9msrabhmfrBj2Hp2m7BBjDwOc7OuLBx7VtT/yXBr884Re4IPj0xH16
7yNs0gaoR4i4bAgXYK24VEaTZb2o+DHiB4xlGt0SUmt4eQ3tSbNDkN2+tcko
baxu3HIBr3j3eBa4kOjDRr5MAHOXwPJoQMSQsYG55YCGFuRwOW1g2DclrAK2
D17UVznMWHqy4z4sZG1KsNQG5G05cDIXcCedLwDlZBTGf9o/mMYcZgM8pbXJ
rLrSJoB0BrYzo3eA70CFG4GMDzJgd9SXAx8sIwGEKVv8Udsixe3knofm7Qx2
JdkMasF1WMKY9onWrDvV4HK7uF2VgGo4TRivbuIpLOr8Ms3odQbipcGp2MsU
FFaYrJsftYRvSfQ4mQLqoTExicL2ANqWFSA7CKcUOQgrOTDl9soCJSzSus1t
QwxLZ2J4gXmXaSXfyLTSUbVsESn4a3rpl9ksR59QPN2yw+mwD2+ugFJq21TL
OrN9Bms/OX1l0vEYHjMIteu8RXreYQIOniOB18hZYAdw3le47mrSN9RwBqxG
WVFegh4/BwYK+3bLflmAIgHSc0UfzvXXTgwPnfKLo99wr2HhAEuEiVsDbD+s
O8uqZdnuYF8ANJDlab2SNgbAg9wOOgWVqip3cCLMVngsghRPElazLMZOdkD3
4xzYe2vkNcBTEIG+6hPoZe6JbyPAV5Sc5VP4b2AAn0CF9tuhG+y4Msjtv7EE
zcCOQrzqg4gZOwTuw27Nq0tAPdpY3bqhfgUPbNsi/4CxmyXgSNkQ3hOOCJCC
1peVEkaEJ8ypgSAq4uiw88AUFnm9cp8W1RQQjT+jDRDYAkBf1n1sdZRky/my
YJaCNFUsaSoqf7DfcozrsoxS0hEiTJt+Zj2wusS9LdmYECIEVibCGel/lkL3
IyQnYgM5Sy3Q59pktMIu0pL3ADsHIhV+IlgVbj0TLFgpKKTqfDq1NRLrSiY2
SKdEirXj+wPopVk1sIWeTlLgHcQjgEeWzTxvAvAzadMApsqgDxixWZXZrK7K
atkUwglLEg/Z5wGZn4AvACnsPmU9ggQF2OG0XHwuWEcQgSnamvgnsYCIa8LW
nMOE7R9L+FGsiCxYmXgt+ksfoYnIIwoNKFeoSfUTQLgcVelGZgjq96K2bUOM
xjVGpYuWDrvXENJUVyVusl2gAIGBeAnAVnIEyApm9ATgKfLGjU67yawVeiUU
8xzXo8DIohAGxb3Kcloy6mVEsKi643Bb+Z4ilLA5A2yLemMcgi1HNoUani0a
u8O7G4OKcC+bVagStJUBMkMlxbHG0l4xNkPPKAKmgA04RaBAFM6wo0q6zdoK
CH+BNHPACcZaoqltk4DuDREBAJSlJ4J4li98b7L8Pu1OWSkm5UJojiri3hvo
oCiUIKChbh8rLLztCDRUePodbahBFQ9XjjwU6GLOMp+UBJGGwFtqRMambUQP
JU2DmMoGRSVvWAFhPYhkCDJj1nNJHfPcVOUl7Ud3VQg0h8Kq34EOBchqVHdA
ucBMuU/LYzYDoMvSRToCDQ3WiV/aukZGi1oqaW3EalBfcAhhlXgclw3pBUB/
VrVqyYL1iHMlGP/5A/DMy7/QntjwzyAP/mxXCTrSmqT34s35Ra/P/ydnL+nv
1ye/vDl9ffIY/z5/evT8ufuDWxj48fLNc3mPf/kvj1++eHFy9pg/hqdJ5xFI
4x6hk+m9fHVx+vLs6HmPeS9s07gCzk/kjhCgTXfwRhponHhFXmI+iDvjI2NB
QwvjdWEHAPG8BRB+RfqYKZ+HbpdlOh/l0yWxTtHzVoRSILEdHjA1iaUKe5Uu
UFjzdkwsKQGsSI8ssp9KREsKPCQTNQfnPgCttdadRzJy6A4GJSoANCLTHqzj
7YwsHVyMXwnpgn41RNErfGNQfW9FdgEmkm6SFoMCMHsJYgcGKxsQ8ga4pVNv
cXGgI4xlUn1V2/1Yb14/R/uoGqM6fqpzRBIgNIEFZbhL3ARbN929QauTILU/
3MOFfhB3E9tQdbWczlALiHYd0AK4xgQ2BiGLaptYgEDPaSYiBAzbOjVAMnZw
VcOWIO1MiCG4BTGU8ZOkyOe5h+05/CrSGiQYsWnz5vVpk3grE7leXnpoeAWh
maHzsxRjgbvGnQ8Hhb8bHMaYx8hpciVG4DtlRIxEgZOqKKornPw4aI3wJyQl
BozsA9S6Pw+TSxryH73d3l/mGnP+UPwXZAOgCerNbLadeamNVykW6aqoUqe1
kljsCn9jZCTWS1rAAxoJ5Mtlnlm12gX9x7ZgZknMD4hNTCtp1CSfS5TtaWM6
3NWNo09wkK6eQUsrVZGmAYUp6oCMW7y/zvOEiDi37awiH8+mTknYpWBhcNew
s6AJ1MxzejBEvsjhTQ/5QE+dNsS3ENfE8owtRkQ4B38w8ViSuj0KfExOv6tj
g8JZQaTy0WTQRktS7YwdVqKhiEmL3rW8hPmCVBClRUnx7nBvuG/cnHbWzTgP
WtW14cnpq8QZdaBzrdl1qoPjquZgruCWkBqF1oV55fwS5yF0GIMiMU3doFOB
HYvQG+N2p5WT5OxHM+RHE+MevdysSM5IeVDtKCPvPmwXmBJjcTFc5xgDsgVr
KHa4rf8zAbWBmEazG10YTp1j9kgw7EXk1gvoDXYzprd+QnyNuSh9CqK9ACHS
EyLCjwCZUxoSF4tkDWzRqMNpTXm/EHhqT55BcNgDINEyA58QIxTRSljSZ6dH
w6YhaiHkYqsY6YSj0DpgXNLAGNiimMVshsdd/94z37Yz1b4gmQlGkt1kGH9Z
IGaG/hShEuxJAIpkQL8RQQzqfvw80HBV4MsbBCszrrBjDx/YtS2Ivdl95d13
6KOPIUUyBf2GKDWDpYN+X45jPg0UOKuuLPKsLcOz3FRddzzOWUE0MhQMOqpQ
t0dKgS06JYdRoKIxVLd1bqRj3YHKOdFk6+LtBntyxnJB3srKcOAJCJotw4BC
YJ3f0uEsj4mbhpaTzIC1T/Qg1nYKSEqGt8wF8TsM7gG/xyb1KvnQCQx+RNaL
0t684hgVPU7OQB40MV0EvHQfgenIBJ14J46eQAWnP0K5f6Pr2KsEsrhgWC/I
AVmMIEuXVg6TNWUBY8jIabO0sQPUBXNyqqBYhHHEJF7h36ztquTgCAY7HWUY
sPr9lMDQDaXKXgwL8WDTMhi/2J4YYuR9fM2EUMuua7bPNrZowjmTKIIOcxQ1
zt1OboftU72zaaommKojBZgtcBec7dbO7kadiZfc9UUcJwedIp2gzsR+esVM
tbdIZoNtT5EIXAPgBFr6sD4kE95l4fDMf2GBRriAjAgquyMbVN/RUsG4CHmU
CEVAIhcw74b0ImS0U9pig9pFWqAau2JNV0bn6BguAvpvqxoQtoh8n284oOEX
jJ6QjrkHAATxS9sNluzSruEbA0fjT4rOV6n6uzv7aELQ3/tmlPvU5jSHZZn/
4SeBfiAEt2pf1+HMfbVgbhzrhmipJ3F086yzfwGBcRS9RtCcB4PLCcWo6tTU
QUfXwDAoccyKfCSegijIgYIgUYm4XRyrmoHGmJcqkXA0CjyYBsYnItclDeMt
HXZVbpOgSfIdgFwHYiwxDzEO3gFiwm1+J3UgSUgVZQYU6TNgHopSSpgDJOVw
p4mXZgLEuW5dW/FGZ5SP4/kwHw5GdTBBMwR24KqqC9AnNxoQ6E1S0oLhXHxI
zJUhGkBs17DWgPALOBh8DcoKNzYaN8R0nCZwlJLR5Z2+bfAKqbvRaCsAxr0x
7PoG/eOCnVzLDi9h5oiqBZMsWcOg5i3IsVIx4nprFB99F2CcFmXqAALKkL2H
z3uEM8Ksnm5Sj2dNykFqpsuUnLTqxb2qXJhV/CkamhR/PBmaG6dpwmkOO/ii
/rIAX0R7FaRRU/C0E+0IEGibygvIeevcAsP58PHWD9JgZ+dmhMVNltE5jWeN
yaP3n22yNW7vMHJki9xeEoCgM/K7OJsX9o69yfhAmeRkKXLoFKDMGET7R85m
ZhA15ouRwDxbzi1IsMc4EWrb36LU7W+XKdBXsANeDc8nlOjBchdNEcJ88eEl
Dr1odtiHwy1GlYri7/yjrJSjIKBcYAHMWFu3KAxtTj7iBF5QEAeHqC0P7tHf
98EGTkgoTkO4ypsZA5sTU/K2n4j+tLE9ChiKyxD8YP8fVa2X2E5HXzNYIi9e
IDhUmUc3gyG5hSIqtK+u5aJW80hwQMlgQBnNflO19sHc4UAjZQ5sDg4gCsU+
WLUp8mmJphrGRpz7YH3F6MmPFqyBHOB3FUVYliW6vTA/VdwOXnaRObw5g6KZ
cZM0Hk7MXfbTzVYLtFFbUs54Fhy4AQa0BuuNFhoIx3/+85/mT8CDHqhJvcOk
d2e8m93JJvcf3j94cHc03nt4ZzTenYz2RuO79v74zm6vj41BP8PGmJfWHN6+
HeDMUFaACZvcFjR0aPvBt1b/WdQ0+cgdpy003rsLgz+8t7t/QA9pzvD4T0qK
63nhHc5Bk4TDXm/L379zD/3we2Fyrlsc3PFN1/uyLg8x2e8QVJp03hzqKIfy
+SGFA6Vn7Jt+4odAtT+FC6QWf0VTQCJ1q92/y6uFt7Rjv+9hN5Oq6kVP9/Hp
KK2xv7/MX7x/h8kPk3yKXgVKKvxH70TQCJHnLeIEu7jEPAWr4pVoh38xTjoH
jQRiFA2dxzhSuijX4KiMdkKkBOuaou7zZ6hGdYSC2YC62Msw6ld3aFPXkUok
8gyTCwn+moQSd0fQ3j7NbeKJ5A76DP+WXABhCTW5PSIW5PZGfKG1DU0J7Cta
sPEr/rHZyuiczziQ5+hakOVuDPCxX3NdDRD3Ozug5nNMpljBzn7hUKRjKqF6
YOLEDtUSNmoZa3692oosJB5WGkChlhIc2IJd7wHTn7f1fuGMB1yAkfhtV88I
tBrVzYf4KUK8WDFaU7CptGhLsjES+i3DvEzZZfG3u75pdymUyHkmbTW15OLK
gDQ4qcpbCRKfaJyv/iQFxNqyPkPqC0fjKW9e8FA14XX3Fvqwkh4SuIYWOl02
Pfmqht0D8I8KEPqMkajkYbb4oMnbHUC0jWCnoZ3sLtfZI0Op3yEmk24wpiiz
AVclOuf6cEAI6w+NogXqfwxo3pjQPN0y81GXBjeQE6Mds8CSvH1b58cg9V2C
PL4iQo92xmzcmbVuvn1nfvjhB1JQKEtsG+7g9HvaqreVhDRpqvHZJl5BzcWd
C4QBi5mzHuZS61T55DzCaCuu04qMyBVRLn1oTrtgvxZn8yQum4f1Ws1Hpo44
tIPcyvNnSsksqinxVCVR5eaBFssRhD7OVFOgWHkOP/JrFW+Ky5gkZUeNoHUf
jaDPTZvE2WlKBj0drqdWBrkRnLgtN2hw36M+bmGzpsOXk5Avt9+wilBh3KAt
uVXFiolLcxTtBGTy6XcOjIoK0sIJZV9dSwjU5Boq2KQ6AOVFeV1Dc9p2dkwU
vdAVRj0AJAu7tlsbPHekmWzxNXXSyiLDVjJsoDkaPWi1fZBTOje4Iv+LceXa
rbgBUbzWfJ3GHCERA2g7Bl07HUWfVzOU8mfsqbgWi8KW349MC/zasEdkmKzh
Er3+nV9vRakteBR+uw2dePxEx8cJCBaN1HSWnMKqpngyIhUdp/r/i1Lfsj03
YFYMWmwUPYEWf99L9nfvJQcHB8nu3v6dDpox5Laj2bdMUbHtVDLrYXu15fUi
fK3992MeKtu+G32xSHPBg44YahrMRe7iYHtVScR4Hf/+1ZAiaInsfG4WlZxM
wlimP6uoEA4CNCJuezhF1TaviUKabw0JQX/XrCFmzN3U8U2AN4E+GsTqYgC4
D51RGGgWuC6zZV3XuCX/uwn02zH6Jk1BEa/jTTq8fTsfr/uQsCmKDXlOuc1A
u3e7ikYD8xtdp2Z88/yRhk/koAmZkZz+QvEOyg6iM7Xbsmw3RvvVUpAwXZBP
6pxXf/90BTRPZ3ZJ5cWkRRwR3aiSvcSWLDXhsJoSCfzoJTObYioeeatQkRev
KIWcO/YYauyYb+xP04wtIFWYjI5fERZRwjEtSW0rzaVCD7j2xidggpQQPDkS
ZM1qopIq4ug6d9+gfuNzH9k++JxTujedp0OlyLlKzMakl2j2bO4rcZDpQKAM
oMBRGtNx1Wz3x7yy7CIPApkwNwZ8lBuyN3wY0OzBxz4HCcxaos0aImCSF/T+
hc44kv0yZo83PK1q2zd+q1k7JJB54d6LMGntaJkmxOhxOz5emgU/t2J0gNtx
lmlfM+54irDUH5sk7FJYkpidaxncmj/DJwm2HDQkVKSIJJhdKz1dkoepyZSg
bjCCh7ERTT/VD5YYlGndab5azolLCQKJsuScwLvGRskbKKyzkzZHZiJa7eyA
3emrO40i4XhSZlnKeWNMOOLoxbOX5yfJUybVvFFWSdt6GO9gv5cWU3gIbBxZ
ErYzj0Bq3bu7rAvOMBTORBZx1lqfvP7m4snggXfFuYME6AsJZ7DKbTHWWdjV
s1377ih/mT/7+v7tWTGe/7ocH7d/jO/8kj8/fjYb/Zzhu+Vo/6A4LXd5Rhfb
4YPOZM4kR8ktmKBjXe3+n9PjoykYf7vp+em90+PTr+8fP/r0Yv9sfvb1852z
i+nub/Nfvry8OMvh+fy3T0/g/9fF2f4vX18cnzaPf6mmBjrI03dnX08/VdDR
bHf89NHXl/mDy/FTmGx51qbvXu++f3e6fP9uNhu9e9S8Pz/4NNrfzZ8f6eBP
9sz7Yxj9SRN1kM1//fT+bbG/6ePTJ7s0Og3+9skuDm5eXPyy9/LxLwdnn45W
Z+dXZ8c59H78TEAIAzxt5BmO+uv++7cHu+/uvD7Ifn4DIIWOnr7eNdnTF/ee
rx4GsD8o7M9P2uznL8Xz+dnl6Pyh+/1unzs5za+ijg33fLb3G+zIb7BxL/NH
92W60qj4jG3St+8X7989m4yfFlfvaQOeFaO3TxYjAK6JP/i1/e1t0RCQy1+/
wkdHXZi49k8dbHB3ZP1PHsJoewV2oHB68emXAE44yFkDg7Tvvp4QPN7PH17i
0sx6g1Nq8Nv8yep0yts4+QX+f7r7jwAhBe2evT3nczaUmavUPF/QMcqa86yA
IaJnDCtDSIQCU1gaIY1uykmFiN4Sqv9rVDP8H9T/H9T/t6P+sBMMVALoxATf
lBTUQbVhg26Aeu+T9coF6JXAr52XFhWeJ3RUJzmggwNL1y2XisI0Poxil3qo
iSSyZsSISAzrMGw6p8hhESDWolqJTji3mB2TN3NfkOLi+TnpIHRU29eRoFOB
05qOOKF2yWZIymeeOL2RrAF/zI6sy9LasQ8aBMoZ6SiwkOBY3q18CDo65qAi
49ghP3fgCoyO8rqD6WQF01kzWLNyJza4KFfq2dsThQp+J+fXUdFD9QEsczzg
zckWlZs9Vc3YXNeEdSXmX7Sm3OtmTai43u+mNL+WvCUpS/DnD5LINGDNuXtA
wpyiZiXFPNC5NJ9XNDVUyNDWFhVQVp8EtXfwTMOyaHPALKPZUt1zodjp+sFj
VhhlBUGOoOnFs++FcWaw/Ttrc7lIqLoRmuCpavXIS7IoZlZoiFAnpQHfIMcL
PURyeLzPQSHNCcGGeMjtmxPCOG/N+IQwu3ni/hims79I+Z2PYPJmWcbFMTAP
qfKeRuAVTBBhUvKSNVhoxUfDCz3imozSFiMwIW47ohxuP5jAaGkinR2dQmAQ
5JRoI0uhom98yEU6deeRGzrxw3ygsfMUFXrmKcjrlnU65XVLXv0mYwKP7a0d
j4jOD3EiOS7Uoa3YBEEuq2abb8MiTnw4Mz6BRNX65lD2gpNSmp50vrEnys/e
EGOIc462RRzYvKVjdC6tvnueJM6Ei85j8uktSUbvzq/LCwaYOX6N8SiH+3Tg
MILbE0CISysjvxNscd4GrzHrsm86mSGMtev5HY2P3kXT/rGJ45LD8FAjexHQ
6KYQJZ1GJYZeUmbAJImyy2iAtOwccNq6qiHLwNS77cS67/sYbMPSTjL7wsRY
y5m46Dkdu6RndfxEK+T1/di4FX63U/DkIg4lSPcmxMsNeWN72e7unQfZ/mB3
fzwa3N0d20E6Ptgd7O3vp/fu3t+/u3fv3n9P7tjB3u69e/f27+3dnDu2Rpxd
2vwXMsb+HQlhtIT9e7yExKESQEK61QlszIbDZDgsDxdlwgGP/13Y4m3+ZK8n
nfzV/zf2uu+WvmlVBw937+3psPT/x/U8Nicc13PZjj1mrklw+k8T2jzCY3qF
DctPNb7+1Bo7SjudalElYUeS9U0Vo5h8lR3cQp0ZS6bygfpAnHBOT22lpCof
SFVWS5PbEXL6+ya++fetPzY1Nv+pujwKKf3nHmKKm/5Qv3f333/+m+YxHA47
1ARDE2YjYuOk/lwb+1vmEbW5ngahD5qHInz4WdzHdir9Nngkf92wlnAe+35o
RxOdSX0HPL5vXwIyUwzukBlIAUaQV0obp4z9SEy/egJ4KZ+zrw/p7pwOnJGv
JK8bf+ohFpE4bHhQKZTb6Cc3QmxNkINJuZmbRXoTdz8MijwYPgE30lR1npUe
DweWX/mz+2EvYxbObERsSkXtc5+hksKfa7i1O1UVnl4ovw6LjUhsQlRni8qV
MNUBmEo3HEPfdhC58SEP0Xdp1Zz2yXVIVIGuJkZDI5gcwAkBbNngtFSbplIH
y0L2X61g8peBtkxdiH9bRgkCK1snKXEkNAXS1txwmkDTMrVMBgZKceJBBivq
9/xRJ6wjq3D1OTRtNIBCEMiSs3IOhMsWZv/VOQcFImgu/rEkUzHHynFtSjmy
r6oGA9wrMBQB4dwbSj+VsY1MKbNjqnaiFpuz5nUqQTAfLcsRZWPiy8921Rip
oFf4ZYYlSK9sHdQ4JG9ANa3TxSzPEqpKw4e6wwPc6L2PgsAyD0nR03gwF1Bx
55cN5uqpVQVStJhWQBizuVRmaevcXoZhR54kaOO4CJqrcYUfwnQ7VoFTLgmW
l4slQvd5/tliecq+hh5lFiblKNMtKQ8F5NUENQdxZXSkTNxU7G7CwyMNwo4z
AwmC6jVSjJAoKBdmGrsIqKuOub3KhYRLBTIzdr+oxe5yD02QGeATDMk0u7JF
gf/Tp5U/QodahKsG2bo6C9InADYIdCvQ+RFXUGOnFugergYAWP1ReBJ3buuq
sIaSWClBboY/AhqdWIcf7PtxYd8ww1bLnBXVCOnIyJE/nDgbv/5AoazJMVfC
JMrtvHEHssKiSEi01hNRfmsX6r/xBwG9FRSSfNo6LqgVkCQZz1Gs8/JocJRk
BHHCrJUk9JDt0gP6GCvfYLleMu2ceS0VfGEJ61a1OWI3pRbI5PJsXDlOgD22
xEUp8iyZtORoIW0YnT/LKQofY79IbY+AaUo1IvK6+IPKwyRy711W+Zjy3nOa
ZH/7DkihDlxhEg8nY3QdG6bD78W5hYs71gEHry1WJUG2el2dhv0oJ8i5baJk
72CJQbz8WGq9plrISd2RW+WxMcexl5m25dSxkz9/yAbwZJDfEGNnYTwnfw1W
0HNVsFyiUlg9NswOkCJHJLfi6kfq+XHAVB8sAmCpPn6yxVFaDYp0ZX29ytAV
h24M37XbSRR7XJWWKaRZLrAjg755TGH6IEXmP7Kj8eg3bbHmLw/GD3z9c2tp
NJQEblphyTYNM3A1ZxiWq/hmhTt/6ag2xde3z8+fUw0rzEPH2P+EK4pmM5t9
7mNbyk7AEvgf104J+ilkMZogguGSpej4pFpyYc7ea6o0DyQQKmckibSWgkYx
HsMfPcFZHHu9PHBYUV2z6sGcrMcDKQycaDG6LK3rldEamMEJdmIDARr1gxyS
tcrYb0+Mq4FNPmkJ9JBW0UH5kY/TpJRMIVWlb5Kq8XfEtkTQGglr6GTOg1re
jaipeLThMh8HFa5lA4K8D6lpofzaaUxxQIH0QyphtqLibfynp9iNlQn0mKyr
ManfBYQDo6mwOvVnYSVFZY1reHDdgt3OlpxPMqou7U4/dqFj6xuEn6Ao0wP8
oEKuGTPA9ZkGMQ2K1DGSSlAJT7RiVc6aglHRqY0ryt+ROmBydgO4XVsNrFY9
1F00QYiL41Ow4ygK8LgV0kEbnGym4VI2LVnCGvKGZlhha7yoAFS+AoHKX1Z8
uAy/SzFrllREdbJERcNVOiECI4ggAJHP64+ofM/RuqM8woJ+NGltiofVUG9H
sWk0wsUmBbmbdC8AmI+p2C1l87ASSIEGkuycusDph6zq9UUSk5Rw5VwTSuyu
uzuTlxwSRbkJ/feNRpc4/wgsg5wPJuLFD6WvzYVgk0qsXEqaDj5JkhcFeDkU
OeZKNUy/lFaInq++LyInZaF91WjmzTwBzapkW+ESWo61TLsjLLeu00kS1L5R
vfcqqj5JIxbVdJBTohf8NbXjAaIWBtOWPBKXZtYi4dSZajcjZNW2CUy6a9RL
ItY4DY34KFUiyNKlVF62pVxQQFUxWtgYH74mx3VY2A5ngQgRsHkpmWGoFAK5
FMkAS+dYlptriVXZ50EDppHgPqyT3CaO73AZBSRgX7CChzLddEp/mQCdYuMV
OebmeRoCEs+LZSiadTtrh9Re68AwRE6OBVLiUZ1q6XdHFTJxpoAwJ9rTbrlr
5Eawp4NqMhjhiulujbhICMwln+aoWEjdYpEVUllCvEBR7T30PwU7L+xZ2Wen
zuEonGEQnTa+siRy+kvOQK7ZmhvZWS5WmbAgFdWuLjcfXjURDbsa577QtSYR
4NBSVV3svRJ/UylwzLVNp6A99rnuNNWNSLW5pACPrK/1JcXRQW9ARVP4LcWn
+YC0u+ZCy5pzYWrKhsdikqChWp3lp2XTKvnBRJh8ed/V7gNEGqP3AkABWgoe
NCQAcA3dK2XcWCe7hs23vPstch2nuodF5HF+PCDixnUZw17dAR3JgkjgDQQ+
mC/I/8LTDA5RgDZciFUR698xr209clCeANjasLaaLHZYR4bIAAiJmbo05V5U
Ji9lF3SPDr3KXUV4qHjTlRTMoMkQ90yFkZQ9IQgdGUVPd0KrmgIQc8ogb/G8
MpUn01sjxoob3vOKKhFbbcu8mQlXkAjo6WNOG0KKhv0c5GO+Am6D0brB0Hkk
hUy8gUZzkFX0MFMiLPaoKomU1KgqqgrWqaHsM9SpgAcWwHKCOY3V9YCiDUso
t3VxNrquMvkQ3OL0kTwpYu2bORqj0EQupSD/YS5Kt0uHd4dDmHTlkIX2Doqh
j8Di1vqbWNYLYaesyPqp3ZKqMIYuHhKnaktnfIVNBKWyglG9Uhz4Go0rqxc4
4tY+3WFes+YopmI33sDUPHf7ZaGeItEqtGCO93oB3gtSGG5PuxYvAZs7vOt3
4LCGDiT1asuXNpDE5S2b6OgMTy7kQx7TtDR+S8zJF4QlbhVPiNBeag2n7aad
6uKOEQrBpdAtPHTUYoKVuXEpY7toZ6xBYbGZzn1ggjGNPzSBXKJtgbfTAWoc
HZWj+YKEFV4s0ebtslVN3G2Zkbu5VENm5uom5KsACrAEzTyojZYdypUz8xU1
pXNJq1qO2eqZjZ244nlxkBW540of5u54SHjM2y2H6/ibBXvWLVe/D5BLXBh6
mAU1UNR0rylLvt83qhDBLGZYfwoNa64ML/dZiYPVMzk6OETWighChWuYFMgx
Ei7/4/2km4/naD2lrQz2iO99iJgsi9zvYLTEbF8egS0MC98ldov3+X30VTX0
dglepdaeqhbpHzi9MxC9sIiCakCT4tmlMvd7vSs6u+NYPXtetU6yy6rBRnoM
3/c7UIHX53synDNWuKS7KCImOSbzMpoKYo8/o1L4GEKp+W39zuDOvOusP5ci
euLPUa0pYICNZqxGeeOG0w+mVIatoos6KLYlKB3hehNZRbwOIyANKSVwqaeB
4qF98qVAoAPN8lHeKpF0mDHhslZGCSbm6D5JBL6cA/s3crTVfpR+wkplYxGv
W8tpOxH1U+zCYTj2GAQvuuXYU68et8yItEK5KPCc35kkvviru6XI7TdP9AWa
rasYEQJKFauKtHx0+/k720g0ZDSIg1iUpUYimKNHZLm1JF82XTY2xE4u5Dwa
OeiyJQWoEWyoeEoYS8rPi0cDlXDxalAkATvhhBKcj3SMSzxhVPsuzsd10wg2
BMabwXM9G8NObuRkG470CT+jN3hX5jczM2Fp1AdrhVfhPTx5fO4wxbsZ4P2q
EszSO9nC7O44PrXSbIHFwqbe2eXjnyRGWbc2pxgx4aFe6YUht85PX+0kv+ap
nrJ6gkdJiPXiNZvsBn8ljllzpMfPVJl7dXR+DjboxU7yYfN9ox879/wZCjeJ
jY6+1aC2NNfVp2g0q6d6gqVYRXcegZbhq5KzORJE2p0UZDvOaQGh7uMEtOod
TlPZpptEuZW3NLt3J8aTviqaNtIz52hfjqK6gcz6qUYUC4pyFYzLN02JRtgs
C9I8MaLAKo9z1XgfsYh5d5MhTktmJamVFOPnq97U26cc1HFNqa5jY1I130mq
QdhWzlj8K7QqhCqFr8k6Td0tqTJF8e2T/Sj9jpat8zKObDwVH0TUyq7GHMnl
aQKS8JortZlUfwwkt165JmA2EiSADsjnpXGDYN1U/0f1e+IH0fF902HbS45G
BAGI8JLKkWCmnrFX6Jj/F+i4mKfx0HlCPtty5QO2chsBqSDNGiZ19WBvP0ZR
Zxxej4l3DWdnQ6kmHqByR30g5zNdPayClai46+rAIKPjZ33JBsgXv2NoO3cK
gPO+a74ZIjR9uoWxSU/ou9vWxxBvyGUAqirUF9ihTG4opcZdF8iXKSHR05mU
RUHFT7GGcNp87uMhJezdE6tnaAj8UJ8CCIRmB6qU1QLQzxVrRdKuarX2yf8j
2mUySUEgcunr+GZcUI1hw4/RJ4lZdzWlC8D8P2y9TlruuyKnWQW0A5ZZgwkK
+mUuNvm4TifiziuaqoOYVGveaSMmUl9xi8LDD6/kgtO1mLjcfLotJO4dGpyt
wCRWWykyTjICz04FN69ifC848YTcRa8FBt0wuI91QozbxfdAmm+6qcg5+kIb
GQUn3aSVTGhaGkWU+FirZziIBIJTOlpid4SufGQjfPmrSHxeIhGMWYspkl8b
a+0ilnxDPJadSP4n5Ujl4eW86smy4yiASG5Mcp9SsA1G6otTOoIKztxfbOeL
D+I6Q49lYafoPp/WlqPsRlCDAr8NR5ESLBhHK9croTDgVKSZ1kbD7tKp2zdX
dS0oaykMlm4W41LiTQAmsw1Mw3VbZAMKoEPLL9aFMy4RjMriVVFyZlkw58GA
GFZYnw7vCW1yvRJnBrStlk5wwK3ZYN1gUXaqpkwYJbUhgZ1hzcA18sJKgBtp
i28b2Vql0N108qcrJviNmrWEt0UB8cUJxdvxHZUNze3bycXLxy+N6VwEHt/G
kkoNCprn+q0pN8zzuvoqfPIjPivDC+jwX8lg9jUZ1++H6VZpDM5IYqEnB+9j
SRxFw8xfInOok/GPH5O+Rwc8D7vncCXxmhpzetexpnnWh8npyfnP+Cq+Muex
nNm61ewcdu7eSz582BCuTj5+NOYFVZGhswKbtoNCBDfUudmy/giNvq/wDZdC
pLsddzFfSM9T+cmu7xW9o1fa3szxCtw6VqzJ8fXgzoOPfbH0hO1o9m18rXBH
HEgVHLrHGCFW0s4Gi6FdWY5a/zJcHb59rTqY08abw6S8neK7l3Kj/aZ3J1rn
I842OkwejPL2Pzq3/v2HqshLvtERjfOgBAf6aeqc/QgjrSQy0Aby2S0u0jkR
MOEt7eSz4ehcUDthx3l9iDCAZefVOLn14/DHHcxNRJWE7vZD0GxOmUJ0lXTn
Lal3gkbii9mKzX9LKNeuDu/b7A4l8KRrnoiYo15Cytm/aayj0HXgbOxOcabD
5OLRY2z9pE4p3zIsJ7Zlckcb71c5hOX/LXmRorXDteyI1PEbfPEE7WGXMhq9
epFmeNwXJBSfiUX0xM12jQgiJGuT/xXXoZTwd0s3yIOgnyzrtnMpGs4reQFI
ktoieTRMnoFBDyrHfPTpp3mOt4VUkxYP0uj2kKm1bNIpwAazjV+eMWEgOsmJ
dCr5Qw3w5CWBhGr1HH7rOMd6Ifs613yleTBpoTyElvG/UbM3yOU4bG6OMpTS
hR1P55KQC4/XZDEfC4b9qvAwM9kR6FqW4xPlZ1EVag4r08WyIohOLp449mAQ
5kjegJRteKMkngb/jC/oTLQeTcaLXjV5Ui41iCPDwKT+L5b6D7zmiwAA

-->

</rfc>

