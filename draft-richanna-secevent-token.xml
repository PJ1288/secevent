<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.3 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>

<rfc ipr="trust200902" docName="draft-richanna-secevent-token-01" category="info">

  <front>
    <title abbrev="secevent-token">Security Event Token (SET)</title>

    <author initials="A." surname="Backman" fullname="Annabelle Backman">
      <organization>Amazon</organization>
      <address>
        <email>richanna@amazon.com</email>
      </address>
    </author>
    <author initials="P." surname="Hunt" fullname="Phil Hunt">
      <organization>Oracle</organization>
      <address>
        <email>phil.hunt@yahoo.com</email>
      </address>
    </author>
    <author initials="W." surname="Denniss" fullname="William Denniss">
      <organization>Google</organization>
      <address>
        <email>wdenniss@google.com</email>
      </address>
    </author>
    <author initials="M." surname="Ansari" fullname="Morteza Ansari">
      <organization>Cisco</organization>
      <address>
        <email>morteza.ansari@cisco.com</email>
      </address>
    </author>
    <author initials="M." surname="Jones" fullname="Michael B. Jones">
      <organization>Microsoft</organization>
      <address>
        <email>mbj@microsoft.com</email>
        <uri>http://self-issued.info/</uri>
      </address>
    </author>

    <date year="2017" month="November" day="14"/>

    <area>Security</area>
    <workgroup>secevent</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This specification defines the Security Event Token, which may be
distributed via a protocol such as HTTP.  The Security Event Token
(SET) specification profiles the JSON Web Token (JWT), which can be
optionally signed and/or encrypted.  A SET describes a statement of
fact from the perspective of an issuer that it intends to share with
one or more receivers.</t>



    </abstract>


  </front>

  <middle>


<section anchor="intro" title="Introduction">
<t>This specification defines an extensible Security Event Token (SET)
format which may be exchanged using protocols such as HTTP.  The
specification builds on the JSON Web Token (JWT) format <xref target="RFC7519"></xref> in
order to provide a self-contained token that can be optionally signed
using JSON Web Signature (JWS) <xref target="RFC7515"></xref> and/or encrypted using JSON
Web Encryption (JWE) <xref target="RFC7516"></xref>.</t>

<t>This specification profiles the use of JWT for the purpose of issuing
security event tokens (SETs).  This specification defines a base
format upon which profiling specifications define actual events and
their meanings.  Unless otherwise specified, this specification uses
non-normative example events intended to demonstrate how events may
be constructed.</t>

<t>This specification is scoped to security and identity related events.
While security event tokens may be used for other purposes, the
specification only considers security and privacy concerns relevant
to identity and personal information.</t>

<t>Security Events are not commands issued between parties.  A security
event is a statement of fact from the perspective of an issuer about
the state of a security subject (e.g., a web resource, token, IP
address, the issuer itself) that the issuer controls or is aware of,
that has changed in some way (explicitly or implicitly).  A security
subject MAY be permanent (e.g., a user account) or temporary (e.g.,
an HTTP session) in nature.  A state change could describe a direct
change of entity state, an implicit change of state or other higher-
level security statements such as:</t>

<t><list style="symbols">
  <t>The creation, modification, removal of a resource.</t>
  <t>The resetting or suspension of an account.</t>
  <t>The revocation of a security token prior to its expiry.</t>
  <t>The logout of a user session.  Or,</t>
  <t>A cumulative conclusion such as to indicate that a user has taken
over an email identifier that may have been used in the past by
another user.</t>
</list></t>

<t>While subject state changes are often triggered by a user-agent or
security-subsystem, the issuance and transmission of an event often
occurs asynchronously and in a back-channel to the action which
caused the change that generated the security event.  Subsequently,
an Event Receiver, having received a SET, validates and interprets
the received SET and takes its own independent actions, if any.  For
example, having been informed of a personal identifier being
associated with a different security subject (e.g., an email address
is being used by someone else), the Event Receiver may choose to
ensure that the new user is not granted access to resources
associated with the previous user.  Or, the Event Receiver may not
have any relationship with the subject, and no action is taken.</t>

<t>While Event Receivers will often take actions upon receiving SETs,
security events cannot be assumed to be commands or requests.  The
intent of this specification is to define a way of exchanging
statements of fact that Event Receivers may interpret for their own
purposes.  As such, SETs have no capability for error signaling other
to ensure the validation of a received SET.</t>

<section anchor="conv" title="Notational Conventions">
<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”,
“SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and
“OPTIONAL” in this document are to be interpreted as described in
<xref target="RFC2119"></xref>.  These keywords are capitalized when used to unambiguously
specify requirements of the protocol or application features and
behavior that affect the inter-operability and security of
implementations.  When these words are not capitalized, they are
meant in their natural-language sense.</t>

<t>For purposes of readability, examples are not URL encoded.
Implementers MUST percent encode URLs as described in Section 2.1 of
<xref target="RFC3986"></xref>.</t>

<t>Throughout this document, all figures MAY contain spaces and extra
line-wrapping for readability and space limitations.  Similarly, some
URIs contained within examples have been shortened for space and
readability reasons.</t>

</section>
<section anchor="defn" title="Definitions">
<t>The following definitions are used with SETs:</t>

<t><list style="hanging">
  <t hangText='Security Event Token (SET)'><vspace blankLines='0'/>
  A SET is a JWT <xref target="RFC7519"></xref> that contains an event payload describing
a security event.</t>
  <t hangText='Event Transmitter'><vspace blankLines='0'/>
  A service provider that delivers SETs to other providers known as
Event Receivers.</t>
  <t hangText='Event Receiver'><vspace blankLines='0'/>
  An Event Receiver is an entity that receives SETs through some
distribution method.  An Event Receiver is the same entity
referred as “recipient” or “receiver” in and related
specifications.  <xref target="RFC7519"></xref></t>
  <t hangText='Subject'><vspace blankLines='0'/>
  A SET describes an event or state change that has occurred about a
Subject.  A Subject may be a principal (e.g., Section 4.1.2
<xref target="RFC7519"></xref>), a web resource, an entity such as an IP address, or
the issuer itself that a SET might reference.</t>
  <t hangText='Profiling Specification'><vspace blankLines='0'/>
  A specification that uses the SET Token specification to define one or
more event types and the associated claims included.</t>
</list></t>

</section>
</section>
<section anchor="set" title="The Security Event Token (SET)">
<t>A SET is a data structure that encodes an “event payload” describing a
security event, wrapped in an “envelope” providing metadata and context
for the security event.  The SET envelope is a JWT Claims Set as defined in
<xref target="RFC7519"></xref>, consisting of a JSON object containing a set of claims.  The
event payload is a JSON object contained within the SET envelope, itself
containing claims that express information about the event, e.g. the type
of event, the subject of the event, and other information defined in a
Profiling Specification.</t>

<t>This specification defines a core set of claims for use in SET envelopes
and event payloads, however Profiling Specifications MAY define additional
claims of both types.  It is RECOMMENDED that Profiling Specifications
define claims to be used in the event payload rather than the envelope.  If
a Profiling Specification does define envelope claims, those claims SHOULD
be registered in the JWT Token Claims Registry <xref target="IANA.JWT.Claims"></xref> or have
Public Claim Names as defined in Section 4.2 of <xref target="RFC7519"></xref>.</t>

<section anchor="claims" title="SET Claims">
<t>This specification profiles the following claims defined in <xref target="RFC7519"></xref> for
use in the SET envelope:</t>

<t><list style="hanging">
  <t hangText='iss'><vspace blankLines='0'/>
  A case-sensitive string identifying the principal that issued the SET,
as defined by Section 4.1.1 of <xref target="RFC7519"></xref>.  This claim is REQUIRED.</t>
  <t hangText='aud'><vspace blankLines='0'/>
  A case-sensitive string or array of case-sensitive strings identifying
the audience for the SET, as defined by Section 4.1.3 of <xref target="RFC7519"></xref>.  This
claim is RECOMMENDED.</t>
  <t hangText='exp'><vspace blankLines='0'/>
  As defined by Section 4.1.4 of <xref target="RFC7519"></xref>, this claim is the time after
which the JWT MUST NOT be accepted for processing.  In the context of a SET
however, this notion does not apply since a SET reflects something that
has already been processed and is historical in nature.  Use of this claim
is NOT RECOMMENDED.</t>
  <t hangText='iat'><vspace blankLines='0'/>
  A value identifying the time at which the SET was issued, as defined by
Section 4.1.6 of <xref target="RFC7519"></xref>.  This claim is REQUIRED.</t>
  <t hangText='jti'><vspace blankLines='0'/>
  A unique identifier for an event, as defined by Section 4.1.7 of
<xref target="RFC7519"></xref>.  This claim is REQUIRED.</t>
</list></t>

<t>This specification defines the following new claims for use in the SET
envelope:</t>

<t><list style="hanging">
  <t hangText='event'><vspace blankLines='0'/>
  A JSON object known as the “event payload”, whose contents identify the
type of event contained within the SET and contain additional information 
defined as part of an event type definition in a Profiling Specification.</t>
</list></t>

<t>This specification defines the following claims for use in event payloads:</t>

<t><list style="hanging">
  <t hangText='event_type'><vspace blankLines='0'/>
  A string containing a URI that uniquely identifies an event type
defined by a Profiling Specification.  This claim is REQUIRED.</t>
  <t hangText='event_id'><vspace blankLines='0'/>
  A string that identifies a specific “real world” event or state change
to which this event is related. Recipients MAY use this claim to correlate
events across different SETs received at different times and/or by different
systems. The value of this claim MUST be unique with respect to the
transmitter to a specific “real world” event or state change, however
recipients MUST NOT interpret a difference in “event_id” values as a
guarantee that two events are not related to the same “real world” event or
state change.</t>
  <t hangText='event_subject'><vspace blankLines='0'/>
  A Subject Identifier that identifies the subject of the event.  (See:
<xref target="subject"></xref>) This claim is REQUIRED.</t>
  <t hangText='event_time'><vspace blankLines='0'/>
  A number identifying the date and time at which the event is believed to
  have occurred or will occur in the future.  Its value MUST take the form
  of a NumericDate value, as defined in Section 2 of <xref target="RFC7519"></xref>.  This claim
  is OPTIONAL, however if it is not present then the recipient MUST
  interpret that to mean that no event time is being asserted, either
  because there is no specific event time, the transmitter does not wish to
  share it, or the transmitter does not know its value.</t>
</list></t>

<t>Both the SET envelope and event payload MAY contain additional claims, such
as those defined in a Profiling Specification.  The format and meaning of
these claims is out of scope of this specification.  Implementations SHOULD
ignore any claims in the SET envelope or event payload that they do not
understand.</t>

<t>The following is a non-normative example showing a SET envelope expressing
a hypothetical event with two additional claims in the event payload:</t>

<figure title="Example SET With Event Claims In Payload" anchor="figset"><artwork><![CDATA[
{
  "jti": "3d0c3cf797584bd193bd0fb1bd4e7d30",
  "iss": "https://transmitter.example.com",
  "aud": [ "https://receiver.example.com" ],
  "iat": 1458496025,
  "event": {
    "event_type": "https://secevent.example.com/example_event",
    "event_subject": {
      "identifier_type": "urn:ietf:params:secevent:subject:email",
      "email": "user@example.com"
    },
    "event_time": 1458492425,
    "claim_1": "foo",
    "claim_2": "bar"
  }
}
]]></artwork></figure>

<t>The payload in this example contains the following:</t>

<t><list style="symbols">
  <t>An “event_type” claim whose value is the URI identifying the
hypothetical event type.</t>
  <t>An “event_subject” claim whose value identifies a subject via email
address.</t>
  <t>An “event_time” claim whose value is the time at which the event occured.</t>
  <t>Two claims “claim_1” and “claim_2” that are defined by the hypothetical 
event type’s Profiling Specification.</t>
</list></t>

</section>
<section anchor="subject" title="Subject Identifiers">
<t>The Subject Identifier provides a common syntax for expressing the subject
of a security event.  A Subject Identifier is a JSON object representing an
instance of a Subject Identifier Type.  A Subject Identifier Type defines a
way of identifying the subject of an event. Typically this is done by
defining a set of one or more claims about a subject that when taken
together collectively identify that subject.  Each Subject Identifier Type
MUST have a name which MUST be registered in the IANA “SET Subject
Identifier Types” registry established by <xref target="iana-sit"></xref>.</t>

<t>A Subject Identifier MUST contain an “identifier_type” claim, whose value is
a string containing the name of the Subject Identifier’s Subject Identifier
Type.  All other claims within the Subject Identifier MUST be defined by the
Subject Identifier Type.</t>

<t>The names of the Subject Identifier Types defined below are registered in
the IANA “SET Subject Identifier Types” registry established by <xref target="iana-sit"></xref>.</t>

<section anchor="implicit-subject-identifier-type" title="Implicit Subject Identifier Type">
<t>The “Implicit” Subject Identifier Type indicates that the recipient is to be
determined implicitly, either from other claims in the SET envelope or event
payload, or through some other context.  For example, there may be event
types for which the only logical subject is the transmitter itself, in which
case the subject is implicitly known from the “iss” claim in the SET
envelope.</t>

<t>The Implicit Subject Identifier Type has the name “implicit”.  This type
contains no additional claims.</t>

<t>The following is a non-normative example of a Subject Identifier
representing an instance of the Implicit Subject Identifier Type:</t>

<figure title="An Instance of the Implicit Subject Identifier Type" anchor="figimplicit"><artwork><![CDATA[
{
  "identifier_type": "implicit"
}
]]></artwork></figure>

</section>
<section anchor="email-subject-identifier-type" title="Email Subject Identifier Type">
<t>The “Email” Subject Identifier Type identifies a subject by email address.
It has the name “email”, and contains a single additional claim:</t>

<t><list style="hanging">
  <t hangText='email'><vspace blankLines='0'/>
  A string containing an email address.  Its value SHOULD conform to
<xref target="RFC5322"></xref>.  This claim is REQUIRED.</t>
</list></t>

<t>The following is a non-normative example of a Subject Identifier
representing an instance of the Email Subject Identifier Type:</t>

<figure title="An Instance of the Email Subject Identifier Type" anchor="figemail"><artwork><![CDATA[
{
  "identifier_type": "email",
  "email": "user@example.com"
}
]]></artwork></figure>

</section>
<section anchor="phone-number-subject-identifier-type" title="Phone Number Subject Identifier Type">
<t>The “Phone Number” Subject Identifier Type identifies a subject by phone
number. It has the name “phone_number”, and contains a single claim:</t>

<t><list style="hanging">
  <t hangText='phone_number'><vspace blankLines='0'/>
  A string containing a phone number.  It SHOULD be formatted according to
<xref target="E.164"></xref>.  This claim is REQUIRED.</t>
</list></t>

<t>The following is a non-normative example of a Subject Identifier
representing an instance of the Phone Number Subject Identifier Type:</t>

<figure title="An Instance of the Phone Number Subject Identifier Type" anchor="figphone"><artwork><![CDATA[
{
  "identifier_type": "phone_number",
  "phone_number": "+1 206 555 0123"
}
]]></artwork></figure>

</section>
<section anchor="issuer-and-subject-subject-identifier-type" title="Issuer and Subject Subject Identifier Type">
<t>The “Issuer and Subject” Subject Identifier Type identifies a subject by an
issuer and subject pair.  It has the name “iss-sub”, and contains two
claims:</t>

<t><list style="hanging">
  <t hangText='iss'><vspace blankLines='0'/>
  A case-sensitive string identifying the principal who is responsible for
assignment of the identifier in the “sub” claim, as defined by Section 4.1.1
of <xref target="RFC7519"></xref>.  This claim is REQUIRED.</t>
  <t hangText='sub'><vspace blankLines='0'/>
  A case-sensitive string containing an identifier that identifies a subject
within the context of the principal identified by the “iss” claim, as
defined by Section 4.1.2 of <xref target="RFC7519"></xref>.  This claim is REQUIRED.</t>
</list></t>

<t>The following is a non-normative example of a Subject Identifier
representing an instance of the Issuer and Subject Subject Identifier Type:</t>

<figure title="An Instance of the Issuer and Subject Subject Identifier Type" anchor="figisssub"><artwork><![CDATA[
{
  "identifier_type": "iss-sub",
  "iss": "http://id.example.com",
  "sub": "example.user.1234"
}
]]></artwork></figure>

</section>
</section>
<section anchor="set-type" title="Explicit Typing of SETs">
<t>This specification registers the “application/secevent+jwt” media
type.  SETs MAY include this media type in the “typ” header parameter of
the JWT containing the SET to explicitly declare that the JWT is a SET.
This MUST be included if the SET could be used in an application context
in which it could be confused with other kinds of JWTs.  Profiling
Specifications MAY declare that this is REQUIRED for SETs containing events
defined by the Profiling Specification.</t>

<t>Per the definition of “typ” in Section 4.1.9 of <xref target="RFC7515"></xref>, it is
RECOMMENDED that the “application/” prefix be omitted.  Therefore,
the “typ” value used SHOULD be “secevent+jwt”.</t>

</section>
<section anchor="construction" title="Security Event Token Construction">
<t>A SET is a JWT, and therefore it’s construction follows that described in
<xref target="RFC7519"></xref>.</t>

<t>While this specification uses JWT to convey a SET, implementers SHALL
NOT use SETs to convey authentication or authorization assertions.</t>

<t>The following is the example JWT Claims Set from <xref target="figset"></xref>, expressed as
an unsigned JWT.  The JOSE Header is:</t>

<figure><artwork><![CDATA[
{"typ":"secevent+jwt","alg":"none"}
]]></artwork></figure>

<t>Base64url encoding of the octets of the UTF-8 representation of the
JOSE Header yields:</t>

<figure><artwork><![CDATA[
eyJ0eXAiOiJzZWNldmVudCtqd3QiLCJhbGciOiJub25lIn0
]]></artwork></figure>

<t>The example JWT Claims Set is encoded as follows:</t>

<figure><artwork><![CDATA[
ew0KICAgImp0aSI6ICIzZDBjM2NmNzk3NTg0YmQxOTNiZDBmYjFiZDRlN2QzMCIsDQog
ICAiaXNzIjogImh0dHBzOi8vdHJhbnNtaXR0ZXIuZXhhbXBsZS5jb20iLA0KICAgImF1
ZCI6IFsgImh0dHBzOi8vcmVjZWl2ZXIuZXhhbXBsZS5jb20iIF0sDQogICAiaWF0Ijog
MTQ1ODQ5NjAyNSwNCiAgICJldmVudCI6IHsNCiAgICAgImV2ZW50X3R5cGUiOiAiaHR0
cHM6Ly9zZWNldmVudC5leGFtcGxlLmNvbS9leGFtcGxlX2V2ZW50IiwNCiAgICAgImV2
ZW50X3N1YmplY3QiOiB7DQogICAgICAgImlkZW50aWZpZXJfdHlwZSI6ICJlbWFpbCIs
DQogICAgICAgImVtYWlsIjogInVzZXJAZXhhbXBsZS5jb20iDQogICAgIH0sDQogICAg
ICJldmVudF90aW1lIjogMTQ1ODQ5MjQyNSwNCiAgICAgImNsYWltXzEiOiAiZm9vIiwN
CiAgICAgImNsYWltXzIiOiAiYmFyIg0KICAgfQ0KIH0=
]]></artwork></figure>

<t>The encoded JWS signature is the empty string.  Concatenating the
parts yields the following complete JWT:</t>

<figure title="Example Unsecured Security Event Token" anchor="figsetencoded"><artwork><![CDATA[
eyJ0eXAiOiJzZWNldmVudCtqd3QiLCJhbGciOiJub25lIn0.
ew0KICAgImp0aSI6ICIzZDBjM2NmNzk3NTg0YmQxOTNiZDBmYjFiZDRlN2QzMCIsDQog
ICAiaXNzIjogImh0dHBzOi8vdHJhbnNtaXR0ZXIuZXhhbXBsZS5jb20iLA0KICAgImF1
ZCI6IFsgImh0dHBzOi8vcmVjZWl2ZXIuZXhhbXBsZS5jb20iIF0sDQogICAiaWF0Ijog
MTQ1ODQ5NjAyNSwNCiAgICJldmVudCI6IHsNCiAgICAgImV2ZW50X3R5cGUiOiAiaHR0
cHM6Ly9zZWNldmVudC5leGFtcGxlLmNvbS9leGFtcGxlX2V2ZW50IiwNCiAgICAgImV2
ZW50X3N1YmplY3QiOiB7DQogICAgICAgImlkZW50aWZpZXJfdHlwZSI6ICJlbWFpbCIs
DQogICAgICAgImVtYWlsIjogInVzZXJAZXhhbXBsZS5jb20iDQogICAgIH0sDQogICAg
ICJldmVudF90aW1lIjogMTQ1ODQ5MjQyNSwNCiAgICAgImNsYWltXzEiOiAiZm9vIiwN
CiAgICAgImNsYWltXzIiOiAiYmFyIg0KICAgfQ0KIH0=.
]]></artwork></figure>

<t>For the purpose of a simpler example in Figure 5, an unsecured token
was shown.  When SETs are not signed or encrypted, the Event Receiver
MUST employ other mechanisms such as TLS and HTTP to provide
integrity, confidentiality, and issuer validation, as needed by the
application.</t>

<t>When validation (i.e. auditing), or additional transmission security
is required, JWS signing and/or JWE encryption MAY be used.  To
create and or validate a signed and/or encrypted SET, follow the
instructions in Section 7 of <xref target="RFC7519"></xref>.</t>

</section>
</section>
<section anchor="related-events" title="Related Events">
<t>In order to accommodate use cases that require communicating multiple
related security events to an Event Receiver, this section defines the
“Related Events” event type. A Related Events event is essentially a
container for two or more events that are related to one another, in
that they are all related to the same “real world” event or state
change. The Related Events event SHOULD NOT be used to combine
unrelated events into a single set, and MUST NOT be used as a general
purpose batch transmission mechanism. Profiling Specifications and/or
implementers who desire an event grouping mechanism with these or
other semantics are encouraged to profile this specification and
define additional event types for those use cases.
/* ed.: Trying to minimize ambiguity around semantics of event grouping. */</t>

<t>The event type for the Related Events event is the URN
“urn:ietf:secevents:related_events”.</t>

<t>The Related Events event has a single additional event payload claim:</t>

<t><list style="hanging">
  <t hangText='events'><vspace blankLines='0'/>
  An array of event payloads, as defined in this document.</t>
</list></t>

<t>For all purposes, the Related Events event’s envelope is considered the
envelope for all events described in the “events” payload claim. SETs
containing a Related Events event MUST comply with the requirements set by
the Profiling Specifications for every event described in the “events”
payload claim. If two or more events’ requirements contradict one another,
those events MUST NOT be combined within the same Related Events event.
/* ed.: Cutting down on opportunities for confusing, impossible SETs. */</t>

<t>All events described in the “events” claim MUST express their subjects in
such a way as to not conflict with the other events. They do not have to
identify their subjects in the same way; two events that support disjoint
sets of Subject Identifier Types but specify their subject using the “sub”
event payload claim defined in <xref target="claims"></xref> can coexist within a Related
Events event, as the subject for each event would reside within the
respective event’s event payload. However, if both events specified their
subject using the “sub” envelope claim, they would be in conflict with one
another, as it would not be possible to assign a value to the “sub” envelope
claim that satisfies the requirements of both events’ Profiling
Specifications.
/* ed.: This is just a specific case of above paragraph, but sub has been a
sticking point so calling it out seems like a good idea. */</t>

<t>The “sub” event payload claim MUST NOT be used with the Related Events
event. 
/* ed.: Trying to avoid complicated “find the subject” logic */</t>

<t>The following is a non-normative example of a SET containing a Related
Events event:</t>

<figure title="Example SET Containing A Related Events Event" anchor="figrelated"><artwork><![CDATA[
{
  "jti": "1c0038c2-02db-40de-ad50-122a64724166",
  "iss": "https://transmitter.example.com",
  "aud": [ "https://receiver.example.com" ],
  "iat": 1510666261,
  "event": {
    "event_type": "urn:ietf:secevent:related_events",
    "event_subject": {
      "identifier_type": "email",
      "email": "user@example.com"
    },
    "event_time": 1510662661,
    "events": [
      {
        "event_type": "http://specs.example.com/set_profile/event_1"
      },
      {
        "event_type": "http://specs.example.com/set_profile/event_2"
      }
    ]
  }
}
]]></artwork></figure>

</section>
<section anchor="profile-req" title="Requirements for SET Profiles">
<t>Profiling Specifications for SETs define the syntax and semantics of
SETs conforming to that SET profile and rules for validating those
SETs.  The syntax defined by Profiling Specifications includes what
SET envelope and event payload claims are used by SETs expressing and
event defined by the profile.</t>

<t>Defining the semantics of the SET contents for SETs utilizing the
profile is equally important.  Possibly most important is defining
the procedures used to validate the SET issuer and to obtain the keys
controlled by the issuer that were used for cryptographic operations
used in the JWT representing the SET.  For instance, some profiles
may define an algorithm for retrieving the SET issuer’s keys that
uses the “iss” claim value as its input.  Likewise, if the profile
allows (or requires) that the JWT be unsecured, the means by which
the integrity of the JWT is ensured MUST be specified.</t>

<t>Profiling Specifications MUST define how the event Subject is
identified in the SET, as well as how to differentiate between the
event Subject’s Issuer and the SET Issuer, if applicable.  It is NOT
RECOMMENDED for Profiling Specifications to use the “sub” claim 
defined in <xref target="RFC7519"></xref> in cases in which the Subject is not globally
unique and has a different Issuer from the SET itself.</t>

<t>Profiling Specifications MUST clearly specify the steps that a
recipient of a SET utilizing that profile MUST perform to validate
that the SET is both syntactically and semantically valid.</t>

<section anchor="extensions" title="Extending Events">
<t>As needs change and new use cases develop, it may be desirable to augment
existing event definitions with new claims. To enable this, Profiling
Specifications MAY define extensions to existing event types. An event
extension consists of a set of one or more event payload claim definitions
that provide the extra information expressed by the extension, and a set of
URIs that identify the event types to which the event extension may be
applied.
/* ed.: Is it necessary to identify which event extensions are being used on
an event? Is “duck typing” good enough here? */</t>

<t>Event extensions SHOULD be defined in documents that are produced through
the same standardization process as the documents that define the event
types being extended. For example, if an event type is defined in an RFC
produced by an IETF working group, event extensions that apply to that event
SHOULD be defined by that same working group. This helps to minimize the
possibility of redundant or conflicting event extensions, and ensure that
event extension creators have the proper context for the events they are
extending.
/* ed.: Guidance on avoiding name conflict with extension claims: put it
here, or in an implementation considerations section? */</t>

</section>
</section>
<section anchor="security" title="Security Considerations">

<section anchor="c-and-i" title="Confidentiality and Integrity">
<t>SETs may often contain sensitive information.  Therefore, methods for
distribution of events SHOULD require the use of a transport-layer
security mechanism when distributing events.  Parties MUST support
TLS 1.2 <xref target="RFC5246"></xref> and MAY support additional transport-layer
mechanisms meeting its security requirements.  When using TLS, the
client MUST perform a TLS/SSL server certificate check, per
<xref target="RFC6125"></xref>.  Implementation security considerations for TLS can be
found in “Recommendations for Secure Use of TLS and DTLS” <xref target="RFC7525"></xref>.</t>

<t>Security Events distributed through third-parties or that carry
personally identifiable information, SHOULD be encrypted using JWE
<xref target="RFC7516"></xref> or secured for confidentiality by other means.</t>

<t>Unless integrity of the JWT is ensured by other means, it MUST be
signed using JWS <xref target="RFC7515"></xref> so that individual events can be
authenticated and validated by the Event Receiver.</t>

</section>
<section anchor="delivery" title="Delivery">
<t>This specification does not define a delivery mechanism by itself.
In addition to confidentiality and integrity (discussed above),
implementers and Profiling Specifications MUST consider the
consequences of delivery mechanisms that are not secure and/or not
assured.  For example, while a SET may be end-to-end secured using
JWE encrypted SETs, without TLS there is no assurance that the
correct endpoint received the SET and that it could be successfully
processed.</t>

</section>
<section anchor="sequencing" title="Sequencing">
<t>As defined in this specification, there is no defined way to order
multiple SETs in a sequence.  Depending on the type and nature of SET
event, order may or may not matter.  For example, in provisioning,
event order is critical – an object could not be modified before it
was created.  In other SET types, such as a token revocation, the
order of SETs for revoked tokens does not matter.  If however, the
event was described as a log-in or logged-out status for a user
subject, then order becomes important.</t>

<t>Profiling Specifications and implementers SHOULD take caution when
using timestamps such as “iat” to define order.  Distributed systems
will have some amount of clock-skew and thus time by itself will not
guarantee order.</t>

<t>Specifications profiling SET SHOULD define a mechanism for detecting
order or sequence of events.</t>

</section>
<section anchor="timing" title="Timing Issues">
<t>When SETs are delivered asynchronously and/or out-of-band with
respect to the original action that incurred the security event, it
is important to consider that a SET might be delivered to an Event
Receiver in advance or well behind the process that caused the event.
For example, a user having been required to logout and then log back
in again, may cause a logout SET to be issued that may arrive at the
same time as the user-agent accesses a web site having just logged-
in.  If timing is not handled properly, the effect would be to
erroneously treat the new user session as logged out.  Profiling
Specifications SHOULD be careful to anticipate timing and subject
selection information.  For example, it might be more appropriate to
cancel a “session” rather than a “user”.  Alternatively, the
specification could use timestamps that allows new sessions to be
started immediately after a stated logout event time.</t>

</section>
<section anchor="not-id-tokens" title="Distinguishing SETs from ID Tokens">
<t>Because <xref target="RFC7519"></xref> states that “all claims that are not understood by
implementations MUST be ignored”, there is a consideration that a SET
token might be confused with ID Token <xref target="OpenID.Core"></xref> if a SET is
mistakenly or intentionally used in a context requiring an ID Token.
If a SET could otherwise be interpreted as a valid ID Token (because
it includes the required claims for an ID Token and valid issuer and
audience claim values for an ID Token) then that SET profile MUST
require that the “exp” claim not be present in the SET.  Because
“exp” is a required claim in ID Tokens, valid ID Token
implementations will reject such a SET if presented as if it were an
ID Token.</t>

<t>Excluding “exp” from SETs that could otherwise be confused with ID
Tokens is actually defense in depth.  In any OpenID Connect contexts
in which an attacker could attempt to substitute a SET for an ID
Token, the SET would actually already be rejected as an ID Token
because it would not contain the correct “nonce” claim value for the
ID Token to be accepted in contexts for which substitution is
possible.</t>

<t>Note that the use of explicit typing, as described in Section 2.2,
will not achieve disambiguation between ID Tokens and SETs, as the ID
Token validation rules do not use the “typ” header parameter value.</t>

</section>
<section anchor="not-access-tokens" title="Distinguishing SETs from Access Tokens">
<t>OAuth 2.0 <xref target="RFC6749"></xref> defines access tokens as being opaque.
Nonetheless, some implementations implement access tokens as JWTs.
Because the structure of these JWTs is implementation-specific,
ensuring that a SET cannot be confused with such an access token is
therefore likewise, in general, implementation specific.
Nonetheless, it is recommended that SET profiles employ the following
strategies to prevent possible substitutions of SETs for access
tokens in contexts in which that might be possible:</t>

<t><list style="symbols">
  <t>Prohibit use of the “exp” claim, as is done to prevent ID Token
confusion.</t>
  <t>Where possible, use a separate “aud” claim value to distinguish
between the Event Receiver and the protected resource that is the
audience of an access token.</t>
  <t>Modify access token validation systems to check for the presence
of the “events” claim as a means to detect security event tokens.
This is particularly useful if the same endpoint may receive both
types of tokens.</t>
  <t>Employ explicit typing, as described in Section 2.2, and modify
access token validation systems to use the “typ” header parameter
value.</t>
</list></t>

</section>
<section anchor="not-other-jwts" title="Distinguishing SETs from other kinds of JWTs">
<t>JWTs are now being used in application areas beyond the identity
applications in which they first appeared.  For instance, the Session
Initiation Protocol (SIP) Via Header Field <xref target="RFC8055"></xref> and Personal
Assertion Token (PASSporT) <xref target="I-D.ietf-stir-passport"></xref> specifications
both define JWT profiles that use mostly or completely different sets
of claims than are used by ID Tokens.  If it would otherwise be
possible for an attacker to substitute a SET for one of these (or
other) kinds of JWTs, then the SET profile must be defined in such a
way that any substituted SET will result in its rejection when
validated as the intended kind of JWT.</t>

<t>The most direct way to prevent confusion is to employ explicit
typing, as described in Section 2.2, and modify applicable token
validation systems to use the “typ” header parameter value.  This
approach can be employed for new systems but may not be applicable to
existing systems.</t>

<t>Another way to ensure that a SET is not confused with another kind of
JWT is to have the JWT validation logic reject JWTs containing an
“events” claim unless the JWT is intended to be a SET.  This approach
can be employed for new systems but may not be applicable to existing
systems.</t>

<t>For many use cases, the simplest way to prevent substitution is
requiring that the SET not include claims that are required for the
kind of JWT that might be the target of an attack.  For example, for
<xref target="RFC8055"></xref>, the “sip_callid” claim could be omitted and for
<xref target="I-D.ietf-stir-passport"></xref>, the “orig” claim could be omitted.</t>

<t>In many contexts, simple measures such as these will accomplish the
task, should confusion otherwise even be possible.  Note that this
topic is being explored in a more general fashion in JSON Web Token
Best Current Practices <xref target="I-D.sheffer-oauth-jwt-bcp"></xref>.  The proposed
best practices in that draft may also be applicable for particular
SET profiles and use cases.</t>

</section>
</section>
<section anchor="privacy" title="Privacy Considerations">
<t>If a SET needs to be retained for audit purposes, JWS MAY be used to
provide verification of its authenticity.</t>

<t>Event Transmitters SHOULD attempt to specialize feeds so that the
content is targeted to the specific business and protocol needs of an
Event Receiver.</t>

<t>When sharing personally identifiable information or information that
is otherwise considered confidential to affected users, Event
Transmitters and Receivers MUST have the appropriate legal agreements
and user consent or terms of service in place.</t>

<t>The propagation of subject identifiers can be perceived as personally
identifiable information.  Where possible, Event Transmitters and
Receivers SHOULD devise approaches that prevent propagation – for
example, the passing of a hash value that requires the Event Receiver
to know the subject.</t>

</section>
<section anchor="iana" title="IANA Considerations">

<section anchor="iana-sit" title="SET Subject Identifier Types Registry">
<t>This section establishes the IANA “SET Subject Identifier Types” registry
// TODO</t>

</section>
<section anchor="iana-claims" title="JSON Web Token Claims Registration">
<t>This specification registers the “event” claim in the IANA “JSON Web Token
Claims” registry <xref target="IANA.JWT.Claims"></xref> established by <xref target="RFC7519"></xref>.</t>

<section anchor="registry-contents" title="Registry Contents">
<t><list style="symbols">
  <t>Claim Name: “event”</t>
  <t>Claim Description: Security Event Payload</t>
  <t>Change Controller: IESG</t>
  <t>Specification Document(s): Section 2.1 of [[ this specification ]]</t>
</list></t>

</section>
</section>
<section anchor="iana-media-type" title="Media Type Registration">

<section anchor="registry-contents-1" title="Registry Contents">
<t>This section registers the “application/secevent+jwt” media type
<xref target="RFC2046"></xref> in the “Media Types” registry <xref target="IANA.MediaTypes"></xref> in the
manner described in <xref target="RFC6838"></xref>, which can be used to indicate that the
content is a SET.</t>

<t><list style="symbols">
  <t>Type name: application</t>
  <t>Subtype name: secevent+jwt</t>
  <t>Required parameters: n/a</t>
  <t>Optional parameters: n/a</t>
  <t>Encoding considerations: 8bit; A SET is a JWT; JWT values are
encoded as a series of base64url-encoded values (some of which may
be the empty string) separated by period (‘.’) characters.</t>
  <t>Security considerations: See the Security Considerations section
of [[ this specification ]]</t>
  <t>Interoperability considerations: n/a</t>
  <t>Published specification: Section 2.2 of [[ this specification ]]</t>
  <t>Applications that use this media type: TBD</t>
  <t>Fragment identifier considerations: n/a</t>
  <t>Additional information:</t>
  <t>Magic number(s): n/a</t>
  <t>File extension(s): n/a</t>
  <t>Macintosh file type code(s): n/a</t>
  <t>Person &amp; email address to contact for further information:
Michael B. Jones, mbj@microsoft.com</t>
  <t>Intended usage: COMMON</t>
  <t>Restrictions on usage: none</t>
  <t>Author: Michael B. Jones, mbj@microsoft.com</t>
  <t>Change controller: IESG</t>
  <t>Provisional registration?  No</t>
</list></t>

</section>
</section>
</section>


  </middle>

  <back>

    <references title='Normative References'>

<reference anchor="IANA.JWT.Claims" target="http://www.iana.org/assignments/jwt">
  <front>
    <title>JSON Web Token Claims</title>
    <author >
      <organization>IANA</organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="IANA.MediaTypes" target="http://www.iana.org/assignments/media-types">
  <front>
    <title>Media Types</title>
    <author >
      <organization>IANA</organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>




<reference  anchor="RFC2119" target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC3986" target='https://www.rfc-editor.org/info/rfc3986'>
<front>
<title>Uniform Resource Identifier (URI): Generic Syntax</title>
<author initials='T.' surname='Berners-Lee' fullname='T. Berners-Lee'><organization /></author>
<author initials='R.' surname='Fielding' fullname='R. Fielding'><organization /></author>
<author initials='L.' surname='Masinter' fullname='L. Masinter'><organization /></author>
<date year='2005' month='January' />
<abstract><t>A Uniform Resource Identifier (URI) is a compact sequence of characters that identifies an abstract or physical resource.  This specification defines the generic URI syntax and a process for resolving URI references that might be in relative form, along with guidelines and security considerations for the use of URIs on the Internet.  The URI syntax defines a grammar that is a superset of all valid URIs, allowing an implementation to parse the common components of a URI reference without knowing the scheme-specific requirements of every possible identifier.  This specification does not define a generative grammar for URIs; that task is performed by the individual specifications of each URI scheme.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='STD' value='66'/>
<seriesInfo name='RFC' value='3986'/>
<seriesInfo name='DOI' value='10.17487/RFC3986'/>
</reference>



<reference  anchor="RFC5246" target='https://www.rfc-editor.org/info/rfc5246'>
<front>
<title>The Transport Layer Security (TLS) Protocol Version 1.2</title>
<author initials='T.' surname='Dierks' fullname='T. Dierks'><organization /></author>
<author initials='E.' surname='Rescorla' fullname='E. Rescorla'><organization /></author>
<date year='2008' month='August' />
<abstract><t>This document specifies Version 1.2 of the Transport Layer Security (TLS) protocol.  The TLS protocol provides communications security over the Internet.  The protocol allows client/server applications to communicate in a way that is designed to prevent eavesdropping, tampering, or message forgery.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5246'/>
<seriesInfo name='DOI' value='10.17487/RFC5246'/>
</reference>



<reference  anchor="RFC5322" target='https://www.rfc-editor.org/info/rfc5322'>
<front>
<title>Internet Message Format</title>
<author initials='P.' surname='Resnick' fullname='P. Resnick' role='editor'><organization /></author>
<date year='2008' month='October' />
<abstract><t>This document specifies the Internet Message Format (IMF), a syntax for text messages that are sent between computer users, within the framework of &quot;electronic mail&quot; messages.  This specification is a revision of Request For Comments (RFC) 2822, which itself superseded Request For Comments (RFC) 822, &quot;Standard for the Format of ARPA Internet Text Messages&quot;, updating it to reflect current practice and incorporating incremental changes that were specified in other RFCs.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5322'/>
<seriesInfo name='DOI' value='10.17487/RFC5322'/>
</reference>



<reference  anchor="RFC6125" target='https://www.rfc-editor.org/info/rfc6125'>
<front>
<title>Representation and Verification of Domain-Based Application Service Identity within Internet Public Key Infrastructure Using X.509 (PKIX) Certificates in the Context of Transport Layer Security (TLS)</title>
<author initials='P.' surname='Saint-Andre' fullname='P. Saint-Andre'><organization /></author>
<author initials='J.' surname='Hodges' fullname='J. Hodges'><organization /></author>
<date year='2011' month='March' />
<abstract><t>Many application technologies enable secure communication between two entities by means of Internet Public Key Infrastructure Using X.509 (PKIX) certificates in the context of Transport Layer Security (TLS). This document specifies procedures for representing and verifying the identity of application services in such interactions.   [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6125'/>
<seriesInfo name='DOI' value='10.17487/RFC6125'/>
</reference>



<reference  anchor="RFC6749" target='https://www.rfc-editor.org/info/rfc6749'>
<front>
<title>The OAuth 2.0 Authorization Framework</title>
<author initials='D.' surname='Hardt' fullname='D. Hardt' role='editor'><organization /></author>
<date year='2012' month='October' />
<abstract><t>The OAuth 2.0 authorization framework enables a third-party application to obtain limited access to an HTTP service, either on behalf of a resource owner by orchestrating an approval interaction between the resource owner and the HTTP service, or by allowing the third-party application to obtain access on its own behalf.  This specification replaces and obsoletes the OAuth 1.0 protocol described in RFC 5849.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6749'/>
<seriesInfo name='DOI' value='10.17487/RFC6749'/>
</reference>



<reference  anchor="RFC7519" target='https://www.rfc-editor.org/info/rfc7519'>
<front>
<title>JSON Web Token (JWT)</title>
<author initials='M.' surname='Jones' fullname='M. Jones'><organization /></author>
<author initials='J.' surname='Bradley' fullname='J. Bradley'><organization /></author>
<author initials='N.' surname='Sakimura' fullname='N. Sakimura'><organization /></author>
<date year='2015' month='May' />
<abstract><t>JSON Web Token (JWT) is a compact, URL-safe means of representing claims to be transferred between two parties.  The claims in a JWT are encoded as a JSON object that is used as the payload of a JSON Web Signature (JWS) structure or as the plaintext of a JSON Web Encryption (JWE) structure, enabling the claims to be digitally signed or integrity protected with a Message Authentication Code (MAC) and/or encrypted.</t></abstract>
</front>
<seriesInfo name='RFC' value='7519'/>
<seriesInfo name='DOI' value='10.17487/RFC7519'/>
</reference>



<reference  anchor="RFC7525" target='https://www.rfc-editor.org/info/rfc7525'>
<front>
<title>Recommendations for Secure Use of Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS)</title>
<author initials='Y.' surname='Sheffer' fullname='Y. Sheffer'><organization /></author>
<author initials='R.' surname='Holz' fullname='R. Holz'><organization /></author>
<author initials='P.' surname='Saint-Andre' fullname='P. Saint-Andre'><organization /></author>
<date year='2015' month='May' />
<abstract><t>Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS) are widely used to protect data exchanged over application protocols such as HTTP, SMTP, IMAP, POP, SIP, and XMPP.  Over the last few years, several serious attacks on TLS have emerged, including attacks on its most commonly used cipher suites and their modes of operation.  This document provides recommendations for improving the security of deployed services that use TLS and DTLS. The recommendations are applicable to the majority of use cases.</t></abstract>
</front>
<seriesInfo name='BCP' value='195'/>
<seriesInfo name='RFC' value='7525'/>
<seriesInfo name='DOI' value='10.17487/RFC7525'/>
</reference>


<reference anchor="E.164" target="http://www.itu.int/rec/T-REC-E.164-201011-I/en">
  <front>
    <title>The international public telecommunication numbering plan</title>
    <author >
      <organization>International Telecommunication Union</organization>
    </author>
    <date year="2010"/>
  </front>
</reference>


    </references>

    <references title='Informative References'>





<reference anchor="I-D.ietf-stir-passport">
<front>
<title>Personal Assertion Token (PASSporT)</title>

<author initials='C' surname='Wendt' fullname='Chris Wendt'>
    <organization />
</author>

<author initials='J' surname='Peterson' fullname='Jon Peterson'>
    <organization />
</author>

<date month='February' day='9' year='2017' />

<abstract><t>This document defines a method for creating and validating a token that cryptographically verifies an originating identity, or more generally a URI or telephone number representing the originator of personal communications.  The PASSporT token is cryptographically signed to protect the integrity of the identity the originator and to verify the assertion of the identity information at the destination. The cryptographic signature is defined with the intention that it can confidently verify the originating persona even when the signature is sent to the destination party over an insecure channel.  PASSporT is particularly useful for many personal communications applications over IP networks and other multi-hop interconnection scenarios where the originating and destination parties may not have a direct trusted relationship.</t></abstract>

</front>

<seriesInfo name='Internet-Draft' value='draft-ietf-stir-passport-11' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-ietf-stir-passport-11.txt' />
</reference>



<reference anchor="I-D.sheffer-oauth-jwt-bcp">
<front>
<title>JSON Web Token Best Current Practices</title>

<author initials='Y' surname='Sheffer' fullname='Yaron Sheffer'>
    <organization />
</author>

<author initials='D' surname='Hardt' fullname='Dick Hardt'>
    <organization />
</author>

<author initials='M' surname='Jones' fullname='Michael Jones'>
    <organization />
</author>

<date month='July' day='3' year='2017' />

<abstract><t>JSON Web Tokens, also known as JWTs [RFC7519], are URL-safe JSON- based security tokens that contain a set of claims that can be signed and/or encrypted.  JWTs are being widely used and deployed as a simple security token format in numerous protocols and applications, both in the area of digital identity, and in other application areas. The goal of this Best Current Practices document is to provide actionable guidance leading to secure implementation and deployment of JWTs.</t></abstract>

</front>

<seriesInfo name='Internet-Draft' value='draft-sheffer-oauth-jwt-bcp-01' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-sheffer-oauth-jwt-bcp-01.txt' />
</reference>


<reference anchor="OpenID.Core" target="http://openid.net/specs/openid-connect-core-1_0.html">
  <front>
    <title>OpenID Connect Core 1.0</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>




<reference  anchor="RFC2046" target='https://www.rfc-editor.org/info/rfc2046'>
<front>
<title>Multipurpose Internet Mail Extensions (MIME) Part Two: Media Types</title>
<author initials='N.' surname='Freed' fullname='N. Freed'><organization /></author>
<author initials='N.' surname='Borenstein' fullname='N. Borenstein'><organization /></author>
<date year='1996' month='November' />
<abstract><t>This second document defines the general structure of the MIME media typing system and defines an initial set of media types.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='2046'/>
<seriesInfo name='DOI' value='10.17487/RFC2046'/>
</reference>



<reference  anchor="RFC6838" target='https://www.rfc-editor.org/info/rfc6838'>
<front>
<title>Media Type Specifications and Registration Procedures</title>
<author initials='N.' surname='Freed' fullname='N. Freed'><organization /></author>
<author initials='J.' surname='Klensin' fullname='J. Klensin'><organization /></author>
<author initials='T.' surname='Hansen' fullname='T. Hansen'><organization /></author>
<date year='2013' month='January' />
<abstract><t>This document defines procedures for the specification and registration of media types for use in HTTP, MIME, and other Internet protocols.  This memo documents an Internet Best Current Practice.</t></abstract>
</front>
<seriesInfo name='BCP' value='13'/>
<seriesInfo name='RFC' value='6838'/>
<seriesInfo name='DOI' value='10.17487/RFC6838'/>
</reference>



<reference  anchor="RFC7515" target='https://www.rfc-editor.org/info/rfc7515'>
<front>
<title>JSON Web Signature (JWS)</title>
<author initials='M.' surname='Jones' fullname='M. Jones'><organization /></author>
<author initials='J.' surname='Bradley' fullname='J. Bradley'><organization /></author>
<author initials='N.' surname='Sakimura' fullname='N. Sakimura'><organization /></author>
<date year='2015' month='May' />
<abstract><t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures.  Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification.  Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t></abstract>
</front>
<seriesInfo name='RFC' value='7515'/>
<seriesInfo name='DOI' value='10.17487/RFC7515'/>
</reference>



<reference  anchor="RFC7516" target='https://www.rfc-editor.org/info/rfc7516'>
<front>
<title>JSON Web Encryption (JWE)</title>
<author initials='M.' surname='Jones' fullname='M. Jones'><organization /></author>
<author initials='J.' surname='Hildebrand' fullname='J. Hildebrand'><organization /></author>
<date year='2015' month='May' />
<abstract><t>JSON Web Encryption (JWE) represents encrypted content using JSON-based data structures.  Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and IANA registries defined by that specification.  Related digital signature and Message Authentication Code (MAC) capabilities are described in the separate JSON Web Signature (JWS) specification.</t></abstract>
</front>
<seriesInfo name='RFC' value='7516'/>
<seriesInfo name='DOI' value='10.17487/RFC7516'/>
</reference>



<reference  anchor="RFC8055" target='https://www.rfc-editor.org/info/rfc8055'>
<front>
<title>Session Initiation Protocol (SIP) Via Header Field Parameter to Indicate Received Realm</title>
<author initials='C.' surname='Holmberg' fullname='C. Holmberg'><organization /></author>
<author initials='Y.' surname='Jiang' fullname='Y. Jiang'><organization /></author>
<date year='2017' month='January' />
<abstract><t>This specification defines a new Session Initiation Protocol (SIP) Via header field parameter, 'received-realm', which allows a SIP entity acting as an entry point to a transit network to indicate from which adjacent upstream network a SIP request is received by using a network realm value associated with the adjacent network.</t></abstract>
</front>
<seriesInfo name='RFC' value='8055'/>
<seriesInfo name='DOI' value='10.17487/RFC8055'/>
</reference>




    </references>


<section anchor="ack" title="Acknowledgments">
<t>The editors would like to thank the participants on the IETF secevent
mailing list and related working groups for their support of this
specification.</t>

</section>


  </back>

<!-- ##markdown-source:
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

-->

</rfc>

