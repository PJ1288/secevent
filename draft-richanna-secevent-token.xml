<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.3 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>

<rfc ipr="trust200902" docName="draft-richanna-secevent-token-00" category="info">

  <front>
    <title abbrev="secevent-token">Security Event Token (SET)</title>

    <author initials="A." surname="Backman" fullname="Annabelle Backman">
      <organization>Amazon</organization>
      <address>
        <email>richanna@amazon.com</email>
      </address>
    </author>
    <author initials="P." surname="Hunt" fullname="Phil Hunt">
      <organization>Oracle</organization>
      <address>
        <email>phil.hunt@yahoo.com</email>
      </address>
    </author>

    <date year="2017" month="November" day="14"/>

    <area>Security</area>
    <workgroup>secevent</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This specification defines the Security Event Token, which may be
distributed via a protocol such as HTTP.  The Security Event Token
(SET) specification profiles the JSON Web Token (JWT), which can be
optionally signed and/or encrypted.  A SET describes a statement of
fact from the perspective of an issuer that it intends to share with
one or more receivers.</t>



    </abstract>


  </front>

  <middle>


<section anchor="intro" title="Introduction">
<t>This specification defines an extensible Security Event Token (SET)
format which may be exchanged using protocols such as HTTP.  The
specification builds on the JSON Web Token (JWT) format <xref target="RFC7519"></xref> in
order to provide a self-contained token that can be optionally signed
using JSON Web Signature (JWS) <xref target="RFC7515"></xref> and/or encrypted using JSON
Web Encryption (JWE) <xref target="RFC7516"></xref>.</t>

<t>This specification profiles the use of JWT for the purpose of issuing
security event tokens (SETs).  This specification defines a base
format upon which profiling specifications define actual events and
their meanings.  Unless otherwise specified, this specification uses
non-normative example events intended to demonstrate how events may
be constructed.</t>

<t>This specification is scoped to security and identity related events.
While security event tokens may be used for other purposes, the
specification only considers security and privacy concerns relevant
to identity and personal information.</t>

<t>Security Events are not commands issued between parties.  A security
event is a statement of fact from the perspective of an issuer about
the state of a security subject (e.g., a web resource, token, IP
address, the issuer itself) that the issuer controls or is aware of,
that has changed in some way (explicitly or implicitly).  A security
subject MAY be permanent (e.g., a user account) or temporary (e.g.,
an HTTP session) in nature.  A state change could describe a direct
change of entity state, an implicit change of state or other higher-
level security statements such as:</t>

<t>o  The creation, modification, removal of a resource.</t>

<t>o  The resetting or suspension of an account.</t>

<t>o  The revocation of a security token prior to its expiry.</t>

<t>o  The logout of a user session.  Or,</t>

<t>o  A cumulative conclusion such as to indicate that a user has taken
over an email identifier that may have been used in the past by
another user.</t>

<t>While subject state changes are often triggered by a user-agent or
security-subsystem, the issuance and transmission of an event often
occurs asynchronously and in a back-channel to the action which
caused the change that generated the security event.  Subsequently,
an Event Receiver, having received a SET, validates and interprets
the received SET and takes its own independent actions, if any.  For
example, having been informed of a personal identifier being
associated with a different security subject (e.g., an email address
is being used by someone else), the Event Receiver may choose to
ensure that the new user is not granted access to resources
associated with the previous user.  Or, the Event Receiver may not
have any relationship with the subject, and no action is taken.</t>

<t>While Event Receivers will often take actions upon receiving SETs,
security events cannot be assumed to be commands or requests.  The
intent of this specification is to define a way of exchanging
statements of fact that Event Receivers may interpret for their own
purposes.  As such, SETs have no capability for error signaling other
to ensure the validation of a received SET.</t>

<section anchor="conv" title="Notational Conventions">
<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”,
“SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and
“OPTIONAL” in this document are to be interpreted as described in
<xref target="RFC2119"></xref>.  These keywords are capitalized when used to unambiguously
specify requirements of the protocol or application features and
behavior that affect the inter-operability and security of
implementations.  When these words are not capitalized, they are
meant in their natural-language sense.</t>

<t>For purposes of readability, examples are not URL encoded.
Implementers MUST percent encode URLs as described in Section 2.1 of
<xref target="RFC3986"></xref>.</t>

<t>Throughout this document, all figures MAY contain spaces and extra
line-wrapping for readability and space limitations.  Similarly, some
URIs contained within examples have been shortened for space and
readability reasons.</t>

</section>
<section anchor="defn" title="Definitions">
<t>The following definitions are used with SETs:</t>

<t><list style="hanging">
  <t hangText='Security Event Token (SET)'><vspace blankLines='0'/>
  A SET is a JWT <xref target="RFC7519"></xref> that is distributed to one or more
registered Event Receivers.</t>
  <t hangText='Event Transmitter'><vspace blankLines='0'/>
  A service provider that delivers SETs to other providers known as
Event Receivers.</t>
  <t hangText='Event Receiver'><vspace blankLines='0'/>
  An Event Receiver is an entity that receives SETs through some
distribution method.  An Event Receiver is the same entity
referred as “recipient” or “receiver” in and related
specifications.  <xref target="RFC7519"></xref></t>
  <t hangText='Subject'><vspace blankLines='0'/>
  A SET describes an event or state change that has occurred about a
Subject.  A Subject may be a principal (e.g., Section 4.1.2
<xref target="RFC7519"></xref>), a web resource, an entity such as an IP address, or
the issuer itself that a SET might reference.</t>
</list></t>

<t>Profiling Specification  A specification that uses the SET Token
specification to define one or more event types and the associated
claims included.</t>

</section>
</section>
<section anchor="set" title="The Security Event Token (SET)">

<t>A SET is a data structure (in the form of a JWT <xref target="RFC7519"></xref>)
representing one or more related security events about a Subject.</t>

<t>The schema and structure of a SET follows the JWT <xref target="RFC7519"></xref>
specification.  A SET has the following structure:</t>

<t><list style="symbols">
  <t>An outer JSON object that acts as the SET “envelope”.  The
envelope contains a set of name/value pairs called the JWT Claims
Set, typically common to every SET or common to a number of
different Events within a single Profiling Specification or a
related series of specifications.  Claims in the envelope (the
outer JSON structure) SHOULD be registered in the JWT Token Claims
Registry <xref target="IANA.JWT.Claims"></xref> or be Public Claims or Private Claims
as also defined in <xref target="RFC7519"></xref>.</t>
  <t>Envelope claims that are profiled and defined in this
specification are used to validate a SET and declare the contents
of the event data included in the SET.  The claim “events”
identifies the event types expressed that are related to the
Security Subject and MAY also include event-specific data.</t>
  <t>Each JSON member of the “events” object is a name and value pair.
The JSON attribute name is a URI String value that expresses an
event type, and the corresponding value is a JSON object known as
the event “payload”.  The payload JSON object contains claims
typically unique to the event’s URI type value and are not
registered as JWT claims.  These claims are defined by their
associated Profiling Specification.  An event with no payload
claims SHALL be represented as the empty JSON object (“{}”).  In
many cases, one event URI expresses the primary event URI, while
other events might be considered extensions that MAY be used to do
things such as:</t>
  <t>A categorization event type to provide classification
information (e.g., threat type or level).</t>
  <t>An enhancement of an existing specifications the arise over
time.</t>
  <t>An extension needed to link a potential series of events.</t>
  <t>Localized specific purpose event URI used between a particular
Event Transmitter and Receiver.</t>
</list></t>

<t>The following is a non-normative example showing the JWT Claims Set
for a hypothetical SCIM password reset SET.  This example shows an
additional events value (“https://example.com/scim/event/
passwordResetExt”) used to convey additional information – in this
case, the current count of reset attempts:</t>

<figure title="Example SCIM Password Reset Event" anchor="figscimevent"><artwork><![CDATA[
{
  "jti": "3d0c3cf797584bd193bd0fb1bd4e7d30",
  "iat": 1458496025,
  "iss": "https://scim.example.com",
  "aud": [
    "https://jhub.example.com/Feeds/98d52461fa5bbc879593b7754",
    "https://jhub.example.com/Feeds/5d7604516b1d08641d7676ee7"
  ],
  "sub": "https://scim.example.com/Users/44f6142df96bd6ab61e7521d9",
  "events": {
    "urn:ietf:params:scim:event:passwordReset":
      { "id":"44f6142df96bd6ab61e7521d9"},
    "https://example.com/scim/event/passwordResetExt":
      { "resetAttempts":5}
  }
}
]]></artwork></figure>

<t>The event in the figure above expresses hypothetical password reset
event for SCIM <xref target="RFC7644"></xref>.  The JWT consists of:</t>

<t><list style="symbols">
  <t>An “events” claim specifying the hypothetical SCIM URN
(“urn:ietf:params:scim:event:passwordReset”) for a password reset,
and a local schema, “https://example.com/scim/event/
passwordResetExt”, that is used to provide additional event
information such as the current count of resets.</t>
  <t>An “iss” claim, denoting the Event Transmitter.</t>
  <t>The “sub” claim specifies the SCIM resource URI that was affected.</t>
  <t>The “aud” claim specifies the intended audiences for the event.
The syntax of the “aud” claim is defined in Section 4.1.3
<xref target="RFC7519"></xref>.</t>
</list></t>

<t>In this example, the SCIM event indicates that a password has been
updated and the current password reset count is 5.  Notice that the
value for “resetAttempts” is actually part of its own JSON object
associated with its own event URI attribute.</t>

<t>Here is another example JWT Claims Set for a security event token,
this one for a Logout Token:</t>

<figure title="Example OpenID Back-Channel Logout Event" anchor="figlogoutevent"><artwork><![CDATA[
{
   "iss": "https://server.example.com",
   "sub": "248289761001",
   "aud": "s6BhdRkqt3",
   "iat": 1471566154,
   "jti": "bWJq",
   "sid": "08a5019c-17e1-4977-8f42-65a12843ea02",
   "events": {
     "http://schemas.openid.net/event/backchannel-logout": {}
   }
}
]]></artwork></figure>

<t>Note that the above SET has an empty JSON object and uses the JWT
registered claims “sub” and “sid” to identify the subject that was
logged-out.</t>

<t>In the following example JWT Claims Set, a fictional medical service
collects consent for medical actions and notifies other parties.  The
individual for whom consent is identified was originally
authenticated via OpenID Connect.  In this case, the issuer of the
security event is an application rather than the OpenID provider:</t>

<figure title="Example Consent Event" anchor="figconsentevent"><artwork><![CDATA[
{
  "jti": "fb4e75b5411e4e19b6c0fe87950f7749",
  "iat": 1458496025,
  "iss": "https://my.examplemed.com",
  "aud": [
    "https://rp.example.com"
  ],
  "events": {
    "https://openid.net/heart/specs/consent.html":{
      "iss":"https://connect.example.com",
      "sub": "248289761001",
      "consentUri":[
        "https://terms.examplemed.com/labdisclosure.html#Agree"
      ]
    }
  }
}
]]></artwork></figure>

<t>In the above example, the attribute “iss” contained within the
payload for the event “https://openid.net/heart/specs/consent.html”
refers to the issuer of the Security Subject (“sub”) rather than the
event issuer “https://my.examplemed.com”.  They are distinct from the
top level value of “iss”, which always refers to the issuer of the
event - a medical consent service that is a relying party to the
OpenID Provider.</t>

<section anchor="claims" title="Core SET Claims">

<t>The following are claims that are based on <xref target="RFC7519"></xref> claim
definitions and are profiled for use in an event token:</t>

<t><list style="hanging">
  <t hangText='jti'><vspace blankLines='0'/>
  As defined by Section 4.1.7 <xref target="RFC7519"></xref> contains a unique identifier
for an event.  The identifier SHOULD be unique within a particular
event feed and MAY be used by clients to track whether a
particular event has already been received.  This claim is
REQUIRED.</t>
  <t hangText='iss'><vspace blankLines='0'/>
  A single valued String containing the URI of the service provider
publishing the SET (the issuer).  This claim is REQUIRED.  Note
that when a SET is expressing an event about a Security Subject
for which the SET issuer is not the issuer of the Security
Subject, the conflict SHALL be resolved by including the Security
Subject “iss” value within the event “payload” (see “events”
claim).</t>
  <t hangText='aud'><vspace blankLines='0'/>
  The syntax of the claim is as defined in Section 4.1.3 <xref target="RFC7519"></xref>.
This claim contains one or more audience identifiers for the SET.
This claim is RECOMMENDED.</t>
  <t hangText='iat'><vspace blankLines='0'/>
  As defined by Section 4.1.6 <xref target="RFC7519"></xref>, a value containing a
NumericDate, which represents when the event was issued.  Unless
otherwise specified, the value SHOULD be interpreted as equivalent
to the actual time of the event.  This claim is REQUIRED.</t>
  <t hangText='toe'><vspace blankLines='0'/>
  A number whose value is a Numeric Data ( see Section 2 <xref target="RFC7519"></xref>).
The value is the date and time in which the event is
believed to have occurred in the past or will occur in the future.
This claim is RECOMMENDED.  Note that some profiles may choose to
omit “toe” and convey event time information with the “iat”claim
or another claim.</t>
  <t hangText='sub'><vspace blankLines='0'/>
  As defined by Section 4.1.2 <xref target="RFC7519"></xref>, a String or URI value
representing the principal or the subject of the SET.  This is
usually the entity whose “state” was changed.  For example, an IP
Address was added to a black list.  A URI representing a user
resource that was modified.  A token identifier for a revoked
token.  If used, the Profiling Specification SHOULD define the
content and format semantics for the value.  This claim is
OPTIONAL, as the principal for any given profile may already be
identified without the inclusion of a subject claim.  Note that
some SET profiles MAY choose to convey event subject information
in the event payload (either using the “sub” member name or
another name), particularly if the subject information is relative
to issuer information that is also conveyed in the event payload,
which may be the case for some identity SET profiles.</t>
  <t hangText='exp'><vspace blankLines='0'/>
  As defined by <xref target="RFC7519"></xref>, this claim is time on which the JWT
MUST NOT be accepted for processing.  In the context of a SET
however, this notion does not apply since a SET reflects something
that has already been processed and is historical in nature.
While some specifications MAY have a need for this claim, its use
in general cases is NOT RECOMMENDED.</t>
</list></t>

<t>The following are new claims defined by this specification:</t>

<t><list style="hanging">
  <t hangText='events'>
  The semantics of this claim is to define a set of event statements
that each MAY add additional claims to fully describe a single
logical event that has occurred (e.g. a state change to a
subject).  Multiple event statements of the same type SHALL NOT be
accepted.  The “events” claim SHOULD NOT be used to express
multiple logical events.

The value of “events” is a JSON object whose members are a set of
JSON name/value pairs whose names are URIs representing the event
statements being expressed.  Event URI values SHOULD be stable
values (e.g. a permanent URL for an event specification).  For
each name present, the corresponding value SHALL be a JSON object.
The JSON object MAY be an empty object (“{}”), or it MAY be a JSON
object containing data as described by the Profiling
Specification.</t>
  <t hangText='txn'>
  An OPTIONAL String value that represents a unique transaction
identifier.  In cases where multiple SETs are issued based on
different event URIs, the transaction identifier MAY be used to
correlate SETs to the same originating event or stateful change.</t>
</list></t>

</section>
<section anchor="set-type" title="Explicit Typing of SETs">
<t>This specification registers the “application/secevent+jwt” media
type, which can be used to indicate that the content is a SET.  SETs
MAY include this media type in the “typ” header parameter of the JWT
representing the SET to explicitly declare that the JWT is a SET.
This MUST be included if the SET could be used in an application
context in which it could be confused with other kinds of JWTs.</t>

<t>Per the definition of “typ” in Section 4.1.9 of <xref target="RFC7515"></xref>, it is
RECOMMENDED that the “application/” prefix be omitted.  Therefore,
the “typ” value used SHOULD be “secevent+jwt”.</t>

</section>
<section anchor="construction" title="Security Event Token Construction">
<t>A SET is a JWT <xref target="RFC7519"></xref> that is constructed by building a JSON
structure that constitutes an event object which is then used as the
body of a JWT.</t>

<t>While this specification uses JWT to convey a SET, implementers SHALL
NOT use SETs to convey authentication or authorization assertions.</t>

<t>The following is an example JWT Claims Set for a security event token
(which has been formatted for readability):</t>

<figure title="Example Event Claims" anchor="figclaims"><artwork><![CDATA[
{
  "jti": "4d3559ec67504aaba65d40b0363faad8",
  "iat": 1458496404,
  "iss": "https://scim.example.com",
  "aud": [
   "https://scim.example.com/Feeds/98d52461fa5bbc879593b7754",
   "https://scim.example.com/Feeds/5d7604516b1d08641d7676ee7"
  ],

  "events": {
    "urn:ietf:params:scim:event:create": {
      "ref":
        "https://scim.example.com/Users/44f6142df96bd6ab61e7521d9",
      "attributes":["id", "name", "userName", "password", "emails"]
    }
  }
}
]]></artwork></figure>

<t>When transmitted, the above JSON body must be converted into a JWT as
per <xref target="RFC7519"></xref>.</t>

<t>The following is an example of a SCIM Event expressed as an unsecured
JWT.  The JOSE Header is:</t>

<figure><artwork><![CDATA[
{"typ":"secevent+jwt","alg":"none"}
]]></artwork></figure>

<t>Base64url encoding of the octets of the UTF-8 representation of the
JOSE Header yields:</t>

<figure><artwork><![CDATA[
eyJ0eXAiOiJzZWNldmVudCtqd3QiLCJhbGciOiJub25lIn0
]]></artwork></figure>

<t>The example JWT Claims Set is encoded as follows:</t>

<figure><artwork><![CDATA[
eyJqdGkiOiI0ZDM1NTllYzY3NTA0YWFiYTY1ZDQwYjAzNjNmYWFkOCIsImlhdCI6MTQ1
ODQ5NjQwNCwiaXNzIjoiaHR0cHM6Ly9zY2ltLmV4YW1wbGUuY29tIiwiYXVkIjpbImh0
dHBzOi8vc2NpbS5leGFtcGxlLmNvbS9GZWVkcy85OGQ1MjQ2MWZhNWJiYzg3OTU5M2I3
NzU0IiwiaHR0cHM6Ly9zY2ltLmV4YW1wbGUuY29tL0ZlZWRzLzVkNzYwNDUxNmIxZDA4
NjQxZDc2NzZlZTciXSwiZXZlbnRzIjp7InVybjppZXRmOnBhcmFtczpzY2ltOmV2ZW50
OmNyZWF0ZSI6eyJyZWYiOiJodHRwczovL3NjaW0uZXhhbXBsZS5jb20vVXNlcnMvNDRm
NjE0MmRmOTZiZDZhYjYxZTc1MjFkOSIsImF0dHJpYnV0ZXMiOlsiaWQiLCJuYW1lIiwi
dXNlck5hbWUiLCJwYXNzd29yZCIsImVtYWlscyJdfX19
]]></artwork></figure>

<t>The encoded JWS signature is the empty string.  Concatenating the
parts yields:</t>

<figure title="Example Unsecured Security Event Token" anchor="figset"><artwork><![CDATA[
eyJ0eXAiOiJzZWNldmVudCtqd3QiLCJhbGciOiJub25lIn0.
eyJqdGkiOiI0ZDM1NTllYzY3NTA0YWFiYTY1ZDQwYjAzNjNmYWFkOCIsImlhdCI6MTQ1
ODQ5NjQwNCwiaXNzIjoiaHR0cHM6Ly9zY2ltLmV4YW1wbGUuY29tIiwiYXVkIjpbImh0
dHBzOi8vc2NpbS5leGFtcGxlLmNvbS9GZWVkcy85OGQ1MjQ2MWZhNWJiYzg3OTU5M2I3
NzU0IiwiaHR0cHM6Ly9zY2ltLmV4YW1wbGUuY29tL0ZlZWRzLzVkNzYwNDUxNmIxZDA4
NjQxZDc2NzZlZTciXSwiZXZlbnRzIjp7InVybjppZXRmOnBhcmFtczpzY2ltOmV2ZW50
OmNyZWF0ZSI6eyJyZWYiOiJodHRwczovL3NjaW0uZXhhbXBsZS5jb20vVXNlcnMvNDRm
NjE0MmRmOTZiZDZhYjYxZTc1MjFkOSIsImF0dHJpYnV0ZXMiOlsiaWQiLCJuYW1lIiwi
dXNlck5hbWUiLCJwYXNzd29yZCIsImVtYWlscyJdfX19.
]]></artwork></figure>

<t>For the purpose of a simpler example in Figure 5, an unsecured token
was shown.  When SETs are not signed or encrypted, the Event Receiver
MUST employ other mechanisms such as TLS and HTTP to provide
integrity, confidentiality, and issuer validation, as needed by the
application.</t>

<t>When validation (i.e. auditing), or additional transmission security
is required, JWS signing and/or JWE encryption MAY be used.  To
create and or validate a signed and/or encrypted SET, follow the
instructions in Section 7 of <xref target="RFC7519"></xref>.</t>

</section>
</section>
<section anchor="profile-req" title="Requirements for SET Profiles">
<t>Profiling Specifications for SETs define the syntax and semantics of
SETs conforming to that SET profile and rules for validating those
SETs.  The syntax defined by profiling specifications includes what
claims and event payload values are used by SETs utilizing the
profile.</t>

<t>Defining the semantics of the SET contents for SETs utilizing the
profile is equally important.  Possibly most important is defining
the procedures used to validate the SET issuer and to obtain the keys
controlled by the issuer that were used for cryptographic operations
used in the JWT representing the SET.  For instance, some profiles
may define an algorithm for retrieving the SET issuer’s keys that
uses the “iss” claim value as its input.  Likewise, if the profile
allows (or requires) that the JWT be unsecured, the means by which
the integrity of the JWT is ensured MUST be specified.</t>

<t>Profiling Specifications MUST define how the event Subject is
identified in the SET, as well as how to differentiate between the
event Subject’s Issuer and the SET Issuer, if applicable.  It is NOT
RECOMMENDED for Profiling Specifications to use the “sub” claim in
cases in which the Subject is not globally unique and has a different
Issuer from the SET itself.</t>

<t>Profiling Specifications MUST clearly specify the steps that a
recipient of a SET utilizing that profile MUST perform to validate
that the SET is both syntactically and semantically valid.</t>

</section>
<section anchor="security" title="Security Considerations">

<section anchor="c-and-i" title="Confidentiality and Integrity">
<t>SETs may often contain sensitive information.  Therefore, methods for
distribution of events SHOULD require the use of a transport-layer
security mechanism when distributing events.  Parties MUST support
TLS 1.2 <xref target="RFC5246"></xref> and MAY support additional transport-layer
mechanisms meeting its security requirements.  When using TLS, the
client MUST perform a TLS/SSL server certificate check, per
<xref target="RFC6125"></xref>.  Implementation security considerations for TLS can be
found in “Recommendations for Secure Use of TLS and DTLS” <xref target="RFC7525"></xref>.</t>

<t>Security Events distributed through third-parties or that carry
personally identifiable information, SHOULD be encrypted using JWE
<xref target="RFC7516"></xref> or secured for confidentiality by other means.</t>

<t>Unless integrity of the JWT is ensured by other means, it MUST be
signed using JWS <xref target="RFC7515"></xref> so that individual events can be
authenticated and validated by the Event Receiver.</t>

</section>
<section anchor="delivery" title="Delivery">
<t>This specification does not define a delivery mechanism by itself.
In addition to confidentiality and integrity (discussed above),
implementers and Profiling Specifications MUST consider the
consequences of delivery mechanisms that are not secure and/or not
assured.  For example, while a SET may be end-to-end secured using
JWE encrypted SETs, without TLS there is no assurance that the
correct endpoint received the SET and that it could be successfully
processed.</t>

</section>
<section anchor="sequencing" title="Sequencing">
<t>As defined in this specification, there is no defined way to order
multiple SETs in a sequence.  Depending on the type and nature of SET
event, order may or may not matter.  For example, in provisioning,
event order is critical – an object could not be modified before it
was created.  In other SET types, such as a token revocation, the
order of SETs for revoked tokens does not matter.  If however, the
event was described as a log-in or logged-out status for a user
subject, then order becomes important.</t>

<t>Profiling Specifications and implementers SHOULD take caution when
using timestamps such as “iat” to define order.  Distributed systems
will have some amount of clock-skew and thus time by itself will not
guarantee order.</t>

<t>Specifications profiling SET SHOULD define a mechanism for detecting
order or sequence of events.  For example, the “txn” claim could
contain an ordered value (e.g., a counter) that the issuer defines.</t>

</section>
<section anchor="timing" title="Timing Issues">
<t>When SETs are delivered asynchronously and/or out-of-band with
respect to the original action that incurred the security event, it
is important to consider that a SET might be delivered to an Event
Receiver in advance or well behind the process that caused the event.
For example, a user having been required to logout and then log back
in again, may cause a logout SET to be issued that may arrive at the
same time as the user-agent accesses a web site having just logged-
in.  If timing is not handled properly, the effect would be to
erroneously treat the new user session as logged out.  Profiling
Specifications SHOULD be careful to anticipate timing and subject
selection information.  For example, it might be more appropriate to
cancel a “session” rather than a “user”.  Alternatively, the
specification could use timestamps that allows new sessions to be
started immediately after a stated logout event time.</t>

</section>
<section anchor="not-id-tokens" title="Distinguishing SETs from ID Tokens">
<t>Because <xref target="RFC7519"></xref> states that “all claims that are not understood by
implementations MUST be ignored”, there is a consideration that a SET
token might be confused with ID Token <xref target="OpenID.Core"></xref> if a SET is
mistakenly or intentionally used in a context requiring an ID Token.
If a SET could otherwise be interpreted as a valid ID Token (because
it includes the required claims for an ID Token and valid issuer and
audience claim values for an ID Token) then that SET profile MUST
require that the “exp” claim not be present in the SET.  Because
“exp” is a required claim in ID Tokens, valid ID Token
implementations will reject such a SET if presented as if it were an
ID Token.</t>

<t>Excluding “exp” from SETs that could otherwise be confused with ID
Tokens is actually defense in depth.  In any OpenID Connect contexts
in which an attacker could attempt to substitute a SET for an ID
Token, the SET would actually already be rejected as an ID Token
because it would not contain the correct “nonce” claim value for the
ID Token to be accepted in contexts for which substitution is
possible.</t>

<t>Note that the use of explicit typing, as described in Section 2.2,
will not achieve disambiguation between ID Tokens and SETs, as the ID
Token validation rules do not use the “typ” header parameter value.</t>

</section>
<section anchor="not-access-tokens" title="Distinguishing SETs from Access Tokens">
<t>OAuth 2.0 <xref target="RFC6749"></xref> defines access tokens as being opaque.
Nonetheless, some implementations implement access tokens as JWTs.
Because the structure of these JWTs is implementation-specific,
ensuring that a SET cannot be confused with such an access token is
therefore likewise, in general, implementation specific.
Nonetheless, it is recommended that SET profiles employ the following
strategies to prevent possible substitutions of SETs for access
tokens in contexts in which that might be possible:</t>

<t><list style="symbols">
  <t>Prohibit use of the “exp” claim, as is done to prevent ID Token
confusion.</t>
  <t>Where possible, use a separate “aud” claim value to distinguish
between the Event Receiver and the protected resource that is the
audience of an access token.</t>
  <t>Modify access token validation systems to check for the presence
of the “events” claim as a means to detect security event tokens.
This is particularly useful if the same endpoint may receive both
types of tokens.</t>
  <t>Employ explicit typing, as described in Section 2.2, and modify
access token validation systems to use the “typ” header parameter
value.</t>
</list></t>

</section>
<section anchor="not-other-jwts" title="Distinguishing SETs from other kinds of JWTs">
<t>JWTs are now being used in application areas beyond the identity
applications in which they first appeared.  For instance, the Session
Initiation Protocol (SIP) Via Header Field <xref target="RFC8055"></xref> and Personal
Assertion Token (PASSporT) <xref target="I-D.ietf-stir-passport"></xref> specifications
both define JWT profiles that use mostly or completely different sets
of claims than are used by ID Tokens.  If it would otherwise be
possible for an attacker to substitute a SET for one of these (or
other) kinds of JWTs, then the SET profile must be defined in such a
way that any substituted SET will result in its rejection when
validated as the intended kind of JWT.</t>

<t>The most direct way to prevent confusion is to employ explicit
typing, as described in Section 2.2, and modify applicable token
validation systems to use the “typ” header parameter value.  This
approach can be employed for new systems but may not be applicable to
existing systems.</t>

<t>Another way to ensure that a SET is not confused with another kind of
JWT is to have the JWT validation logic reject JWTs containing an
“events” claim unless the JWT is intended to be a SET.  This approach
can be employed for new systems but may not be applicable to existing
systems.</t>

<t>For many use cases, the simplest way to prevent substitution is
requiring that the SET not include claims that are required for the
kind of JWT that might be the target of an attack.  For example, for
<xref target="RFC8055"></xref>, the “sip_callid” claim could be omitted and for
<xref target="I-D.ietf-stir-passport"></xref>, the “orig” claim could be omitted.</t>

<t>In many contexts, simple measures such as these will accomplish the
task, should confusion otherwise even be possible.  Note that this
topic is being explored in a more general fashion in JSON Web Token
Best Current Practices <xref target="I-D.sheffer-oauth-jwt-bcp"></xref>.  The proposed
best practices in that draft may also be applicable for particular
SET profiles and use cases.</t>

</section>
</section>
<section anchor="privacy" title="Privacy Considerations">
<t>If a SET needs to be retained for audit purposes, JWS MAY be used to
provide verification of its authenticity.</t>

<t>Event Transmitters SHOULD attempt to specialize feeds so that the
content is targeted to the specific business and protocol needs of an
Event Receiver.</t>

<t>When sharing personally identifiable information or information that
is otherwise considered confidential to affected users, Event
Transmitters and Receivers MUST have the appropriate legal agreements
and user consent or terms of service in place.</t>

<t>The propagation of subject identifiers can be perceived as personally
identifiable information.  Where possible, Event Transmitters and
Receivers SHOULD devise approaches that prevent propagation – for
example, the passing of a hash value that requires the Event Receiver
to know the subject.</t>

</section>
<section anchor="iana" title="IANA Considerations">

<section anchor="iana-claims" title="JSON Web Token Claims Registration">
<t>This specification registers the “events”, “toe”, and “txn” claims in
the IANA “JSON Web Token Claims” registry <xref target="IANA.JWT.Claims"></xref>
established by <xref target="RFC7519"></xref>.</t>

<section anchor="registry-contents" title="Registry Contents">
<t><list style="symbols">
  <t>Claim Name: “events”</t>
  <t>Claim Description: Security Event URI</t>
  <t>Change Controller: IESG</t>
  <t>Specification Document(s): Section 2.1 of [[ this specification ]]</t>
  <t>Claim Name: “toe”</t>
  <t>Claim Description: Time Of Event</t>
  <t>Change Controller: IESG</t>
  <t>Specification Document(s): Section 2.1 of [[ this specification ]]</t>
  <t>Claim Name: “txn”</t>
  <t>Claim Description: Transaction Identifier</t>
  <t>Change Controller: IESG</t>
  <t>Specification Document(s): Section 2.1 of [[ this specification ]]</t>
</list></t>

</section>
</section>
<section anchor="iana-media-type" title="Media Type Registration">

<section anchor="registry-contents-1" title="Registry Contents">
<t>This section registers the “application/secevent+jwt” media type
<xref target="RFC2046"></xref> in the “Media Types” registry <xref target="IANA.MediaTypes"></xref> in the
manner described in <xref target="RFC6838"></xref>, which can be used to indicate that the
content is a SET.</t>

<t><list style="symbols">
  <t>Type name: application</t>
  <t>Subtype name: secevent+jwt</t>
  <t>Required parameters: n/a</t>
  <t>Optional parameters: n/a</t>
  <t>Encoding considerations: 8bit; A SET is a JWT; JWT values are
encoded as a series of base64url-encoded values (some of which may
be the empty string) separated by period (‘.’) characters.</t>
  <t>Security considerations: See the Security Considerations section
of [[ this specification ]]</t>
  <t>Interoperability considerations: n/a</t>
  <t>Published specification: Section 2.2 of [[ this specification ]]</t>
  <t>Applications that use this media type: TBD</t>
  <t>Fragment identifier considerations: n/a</t>
  <t>Additional information:</t>
  <t>Magic number(s): n/a</t>
  <t>File extension(s): n/a</t>
  <t>Macintosh file type code(s): n/a</t>
  <t>Person &amp; email address to contact for further information:
Michael B. Jones, mbj@microsoft.com</t>
  <t>Intended usage: COMMON</t>
  <t>Restrictions on usage: none</t>
  <t>Author: Michael B. Jones, mbj@microsoft.com</t>
  <t>Change controller: IESG</t>
  <t>Provisional registration?  No</t>
</list></t>

</section>
</section>
</section>


  </middle>

  <back>

    <references title='Normative References'>

<reference anchor="IANA.JWT.Claims" target="http://www.iana.org/assignments/jwt">
  <front>
    <title>JSON Web Token Claims</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="IANA.MediaTypes" target="http://www.iana.org/assignments/media-types">
  <front>
    <title>Media Types</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>




<reference  anchor="RFC2119" target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC3986" target='https://www.rfc-editor.org/info/rfc3986'>
<front>
<title>Uniform Resource Identifier (URI): Generic Syntax</title>
<author initials='T.' surname='Berners-Lee' fullname='T. Berners-Lee'><organization /></author>
<author initials='R.' surname='Fielding' fullname='R. Fielding'><organization /></author>
<author initials='L.' surname='Masinter' fullname='L. Masinter'><organization /></author>
<date year='2005' month='January' />
<abstract><t>A Uniform Resource Identifier (URI) is a compact sequence of characters that identifies an abstract or physical resource.  This specification defines the generic URI syntax and a process for resolving URI references that might be in relative form, along with guidelines and security considerations for the use of URIs on the Internet.  The URI syntax defines a grammar that is a superset of all valid URIs, allowing an implementation to parse the common components of a URI reference without knowing the scheme-specific requirements of every possible identifier.  This specification does not define a generative grammar for URIs; that task is performed by the individual specifications of each URI scheme.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='STD' value='66'/>
<seriesInfo name='RFC' value='3986'/>
<seriesInfo name='DOI' value='10.17487/RFC3986'/>
</reference>



<reference  anchor="RFC5246" target='https://www.rfc-editor.org/info/rfc5246'>
<front>
<title>The Transport Layer Security (TLS) Protocol Version 1.2</title>
<author initials='T.' surname='Dierks' fullname='T. Dierks'><organization /></author>
<author initials='E.' surname='Rescorla' fullname='E. Rescorla'><organization /></author>
<date year='2008' month='August' />
<abstract><t>This document specifies Version 1.2 of the Transport Layer Security (TLS) protocol.  The TLS protocol provides communications security over the Internet.  The protocol allows client/server applications to communicate in a way that is designed to prevent eavesdropping, tampering, or message forgery.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5246'/>
<seriesInfo name='DOI' value='10.17487/RFC5246'/>
</reference>



<reference  anchor="RFC6125" target='https://www.rfc-editor.org/info/rfc6125'>
<front>
<title>Representation and Verification of Domain-Based Application Service Identity within Internet Public Key Infrastructure Using X.509 (PKIX) Certificates in the Context of Transport Layer Security (TLS)</title>
<author initials='P.' surname='Saint-Andre' fullname='P. Saint-Andre'><organization /></author>
<author initials='J.' surname='Hodges' fullname='J. Hodges'><organization /></author>
<date year='2011' month='March' />
<abstract><t>Many application technologies enable secure communication between two entities by means of Internet Public Key Infrastructure Using X.509 (PKIX) certificates in the context of Transport Layer Security (TLS). This document specifies procedures for representing and verifying the identity of application services in such interactions.   [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6125'/>
<seriesInfo name='DOI' value='10.17487/RFC6125'/>
</reference>



<reference  anchor="RFC6749" target='https://www.rfc-editor.org/info/rfc6749'>
<front>
<title>The OAuth 2.0 Authorization Framework</title>
<author initials='D.' surname='Hardt' fullname='D. Hardt' role='editor'><organization /></author>
<date year='2012' month='October' />
<abstract><t>The OAuth 2.0 authorization framework enables a third-party application to obtain limited access to an HTTP service, either on behalf of a resource owner by orchestrating an approval interaction between the resource owner and the HTTP service, or by allowing the third-party application to obtain access on its own behalf.  This specification replaces and obsoletes the OAuth 1.0 protocol described in RFC 5849.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6749'/>
<seriesInfo name='DOI' value='10.17487/RFC6749'/>
</reference>



<reference  anchor="RFC7519" target='https://www.rfc-editor.org/info/rfc7519'>
<front>
<title>JSON Web Token (JWT)</title>
<author initials='M.' surname='Jones' fullname='M. Jones'><organization /></author>
<author initials='J.' surname='Bradley' fullname='J. Bradley'><organization /></author>
<author initials='N.' surname='Sakimura' fullname='N. Sakimura'><organization /></author>
<date year='2015' month='May' />
<abstract><t>JSON Web Token (JWT) is a compact, URL-safe means of representing claims to be transferred between two parties.  The claims in a JWT are encoded as a JSON object that is used as the payload of a JSON Web Signature (JWS) structure or as the plaintext of a JSON Web Encryption (JWE) structure, enabling the claims to be digitally signed or integrity protected with a Message Authentication Code (MAC) and/or encrypted.</t></abstract>
</front>
<seriesInfo name='RFC' value='7519'/>
<seriesInfo name='DOI' value='10.17487/RFC7519'/>
</reference>



<reference  anchor="RFC7525" target='https://www.rfc-editor.org/info/rfc7525'>
<front>
<title>Recommendations for Secure Use of Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS)</title>
<author initials='Y.' surname='Sheffer' fullname='Y. Sheffer'><organization /></author>
<author initials='R.' surname='Holz' fullname='R. Holz'><organization /></author>
<author initials='P.' surname='Saint-Andre' fullname='P. Saint-Andre'><organization /></author>
<date year='2015' month='May' />
<abstract><t>Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS) are widely used to protect data exchanged over application protocols such as HTTP, SMTP, IMAP, POP, SIP, and XMPP.  Over the last few years, several serious attacks on TLS have emerged, including attacks on its most commonly used cipher suites and their modes of operation.  This document provides recommendations for improving the security of deployed services that use TLS and DTLS. The recommendations are applicable to the majority of use cases.</t></abstract>
</front>
<seriesInfo name='BCP' value='195'/>
<seriesInfo name='RFC' value='7525'/>
<seriesInfo name='DOI' value='10.17487/RFC7525'/>
</reference>



<reference  anchor="RFC7617" target='https://www.rfc-editor.org/info/rfc7617'>
<front>
<title>The 'Basic' HTTP Authentication Scheme</title>
<author initials='J.' surname='Reschke' fullname='J. Reschke'><organization /></author>
<date year='2015' month='September' />
<abstract><t>This document defines the &quot;Basic&quot; Hypertext Transfer Protocol (HTTP) authentication scheme, which transmits credentials as user-id/ password pairs, encoded using Base64.</t></abstract>
</front>
<seriesInfo name='RFC' value='7617'/>
<seriesInfo name='DOI' value='10.17487/RFC7617'/>
</reference>




    </references>

    <references title='Informative References'>





<reference anchor="I-D.ietf-stir-passport">
<front>
<title>Personal Assertion Token (PASSporT)</title>

<author initials='C' surname='Wendt' fullname='Chris Wendt'>
    <organization />
</author>

<author initials='J' surname='Peterson' fullname='Jon Peterson'>
    <organization />
</author>

<date month='February' day='9' year='2017' />

<abstract><t>This document defines a method for creating and validating a token that cryptographically verifies an originating identity, or more generally a URI or telephone number representing the originator of personal communications.  The PASSporT token is cryptographically signed to protect the integrity of the identity the originator and to verify the assertion of the identity information at the destination. The cryptographic signature is defined with the intention that it can confidently verify the originating persona even when the signature is sent to the destination party over an insecure channel.  PASSporT is particularly useful for many personal communications applications over IP networks and other multi-hop interconnection scenarios where the originating and destination parties may not have a direct trusted relationship.</t></abstract>

</front>

<seriesInfo name='Internet-Draft' value='draft-ietf-stir-passport-11' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-ietf-stir-passport-11.txt' />
</reference>



<reference anchor="I-D.sheffer-oauth-jwt-bcp">
<front>
<title>JSON Web Token Best Current Practices</title>

<author initials='Y' surname='Sheffer' fullname='Yaron Sheffer'>
    <organization />
</author>

<author initials='D' surname='Hardt' fullname='Dick Hardt'>
    <organization />
</author>

<author initials='M' surname='Jones' fullname='Michael Jones'>
    <organization />
</author>

<date month='July' day='3' year='2017' />

<abstract><t>JSON Web Tokens, also known as JWTs [RFC7519], are URL-safe JSON- based security tokens that contain a set of claims that can be signed and/or encrypted.  JWTs are being widely used and deployed as a simple security token format in numerous protocols and applications, both in the area of digital identity, and in other application areas. The goal of this Best Current Practices document is to provide actionable guidance leading to secure implementation and deployment of JWTs.</t></abstract>

</front>

<seriesInfo name='Internet-Draft' value='draft-sheffer-oauth-jwt-bcp-01' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-sheffer-oauth-jwt-bcp-01.txt' />
</reference>


<reference anchor="OpenID.Core" target="http://openid.net/specs/openid-connect-core-1_0.html">
  <front>
    <title>OpenID Connect Core 1.0</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>




<reference  anchor="RFC2046" target='https://www.rfc-editor.org/info/rfc2046'>
<front>
<title>Multipurpose Internet Mail Extensions (MIME) Part Two: Media Types</title>
<author initials='N.' surname='Freed' fullname='N. Freed'><organization /></author>
<author initials='N.' surname='Borenstein' fullname='N. Borenstein'><organization /></author>
<date year='1996' month='November' />
<abstract><t>This second document defines the general structure of the MIME media typing system and defines an initial set of media types.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='2046'/>
<seriesInfo name='DOI' value='10.17487/RFC2046'/>
</reference>



<reference  anchor="RFC6838" target='https://www.rfc-editor.org/info/rfc6838'>
<front>
<title>Media Type Specifications and Registration Procedures</title>
<author initials='N.' surname='Freed' fullname='N. Freed'><organization /></author>
<author initials='J.' surname='Klensin' fullname='J. Klensin'><organization /></author>
<author initials='T.' surname='Hansen' fullname='T. Hansen'><organization /></author>
<date year='2013' month='January' />
<abstract><t>This document defines procedures for the specification and registration of media types for use in HTTP, MIME, and other Internet protocols.  This memo documents an Internet Best Current Practice.</t></abstract>
</front>
<seriesInfo name='BCP' value='13'/>
<seriesInfo name='RFC' value='6838'/>
<seriesInfo name='DOI' value='10.17487/RFC6838'/>
</reference>



<reference  anchor="RFC7009" target='https://www.rfc-editor.org/info/rfc7009'>
<front>
<title>OAuth 2.0 Token Revocation</title>
<author initials='T.' surname='Lodderstedt' fullname='T. Lodderstedt' role='editor'><organization /></author>
<author initials='S.' surname='Dronia' fullname='S. Dronia'><organization /></author>
<author initials='M.' surname='Scurtescu' fullname='M. Scurtescu'><organization /></author>
<date year='2013' month='August' />
<abstract><t>This document proposes an additional endpoint for OAuth authorization servers, which allows clients to notify the authorization server that a previously obtained refresh or access token is no longer needed. This allows the authorization server to clean up security credentials.  A revocation request will invalidate the actual token and, if applicable, other tokens based on the same authorization grant.</t></abstract>
</front>
<seriesInfo name='RFC' value='7009'/>
<seriesInfo name='DOI' value='10.17487/RFC7009'/>
</reference>



<reference  anchor="RFC7515" target='https://www.rfc-editor.org/info/rfc7515'>
<front>
<title>JSON Web Signature (JWS)</title>
<author initials='M.' surname='Jones' fullname='M. Jones'><organization /></author>
<author initials='J.' surname='Bradley' fullname='J. Bradley'><organization /></author>
<author initials='N.' surname='Sakimura' fullname='N. Sakimura'><organization /></author>
<date year='2015' month='May' />
<abstract><t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures.  Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification.  Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t></abstract>
</front>
<seriesInfo name='RFC' value='7515'/>
<seriesInfo name='DOI' value='10.17487/RFC7515'/>
</reference>



<reference  anchor="RFC7516" target='https://www.rfc-editor.org/info/rfc7516'>
<front>
<title>JSON Web Encryption (JWE)</title>
<author initials='M.' surname='Jones' fullname='M. Jones'><organization /></author>
<author initials='J.' surname='Hildebrand' fullname='J. Hildebrand'><organization /></author>
<date year='2015' month='May' />
<abstract><t>JSON Web Encryption (JWE) represents encrypted content using JSON-based data structures.  Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and IANA registries defined by that specification.  Related digital signature and Message Authentication Code (MAC) capabilities are described in the separate JSON Web Signature (JWS) specification.</t></abstract>
</front>
<seriesInfo name='RFC' value='7516'/>
<seriesInfo name='DOI' value='10.17487/RFC7516'/>
</reference>



<reference  anchor="RFC7517" target='https://www.rfc-editor.org/info/rfc7517'>
<front>
<title>JSON Web Key (JWK)</title>
<author initials='M.' surname='Jones' fullname='M. Jones'><organization /></author>
<date year='2015' month='May' />
<abstract><t>A JSON Web Key (JWK) is a JavaScript Object Notation (JSON) data structure that represents a cryptographic key.  This specification also defines a JWK Set JSON data structure that represents a set of JWKs.  Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and IANA registries established by that specification.</t></abstract>
</front>
<seriesInfo name='RFC' value='7517'/>
<seriesInfo name='DOI' value='10.17487/RFC7517'/>
</reference>



<reference  anchor="RFC7644" target='https://www.rfc-editor.org/info/rfc7644'>
<front>
<title>System for Cross-domain Identity Management: Protocol</title>
<author initials='P.' surname='Hunt' fullname='P. Hunt' role='editor'><organization /></author>
<author initials='K.' surname='Grizzle' fullname='K. Grizzle'><organization /></author>
<author initials='M.' surname='Ansari' fullname='M. Ansari'><organization /></author>
<author initials='E.' surname='Wahlstroem' fullname='E. Wahlstroem'><organization /></author>
<author initials='C.' surname='Mortimore' fullname='C. Mortimore'><organization /></author>
<date year='2015' month='September' />
<abstract><t>The System for Cross-domain Identity Management (SCIM) specification is an HTTP-based protocol that makes managing identities in multi-domain scenarios easier to support via a standardized service. Examples include, but are not limited to, enterprise-to-cloud service providers and inter-cloud scenarios.  The specification suite seeks to build upon experience with existing schemas and deployments, placing specific emphasis on simplicity of development and integration, while applying existing authentication, authorization, and privacy models.  SCIM's intent is to reduce the cost and complexity of user management operations by providing a common user schema, an extension model, and a service protocol defined by this document.</t></abstract>
</front>
<seriesInfo name='RFC' value='7644'/>
<seriesInfo name='DOI' value='10.17487/RFC7644'/>
</reference>



<reference  anchor="RFC8055" target='https://www.rfc-editor.org/info/rfc8055'>
<front>
<title>Session Initiation Protocol (SIP) Via Header Field Parameter to Indicate Received Realm</title>
<author initials='C.' surname='Holmberg' fullname='C. Holmberg'><organization /></author>
<author initials='Y.' surname='Jiang' fullname='Y. Jiang'><organization /></author>
<date year='2017' month='January' />
<abstract><t>This specification defines a new Session Initiation Protocol (SIP) Via header field parameter, 'received-realm', which allows a SIP entity acting as an entry point to a transit network to indicate from which adjacent upstream network a SIP request is received by using a network realm value associated with the adjacent network.</t></abstract>
</front>
<seriesInfo name='RFC' value='8055'/>
<seriesInfo name='DOI' value='10.17487/RFC8055'/>
</reference>


<reference anchor="saml-core-2.0" >
  <front>
    <title>Assertions and Protocols for the OASIS Security Assertion Markup Language (SAML) V2.0</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>


    </references>


<section anchor="ack" title="Acknowledgments">
<t>The editors would like to thank the participants in the IETF secevent
mailing list and related working groups for their support of this
specification.</t>

</section>


  </back>

<!-- ##markdown-source:
H4sIAOmNCloAA+19aW/bSLbo9/oVhAK8sftKsuR4iX0xeOOOk24H8dKxEycO
ggFFliTGFKlmUXaUoOe337PVQkpKumfw8L7coIGWudRy6uwbe72eqrM618fR
tU4WVVYvoxcPuqijm/JeF9HW9YubbRWPRpV+OI6MTjTe7NV4U6VlUsQzeDWt
4nHdq7JkGhdF3Gs+1hsMVBrX8NjuYHjYGw57wz2VwIVJWS2Po6wYlyqbV8dR
XS1MvTsYHA12lYorHfs1qceyup9U5WLuF6Hu9RIup8fRWVHrqtB17xTXoZSp
4yL9Z5yXBUy61EbNs+PoY10m3ciUVV3psYFfyxn++ARTLeppWR2rqKci+JcV
5jg66Uc/x8n9LC7oGm/zBDY30nmuG/fKahIX2de4zsoCnpnFX0u+oWdxlh9H
Fiz/iOlWPylnjamu+tGvC9iOn+dqmuX+WnP8yypOch2OP4en+1N4+h/LeFqW
PD78U0VZzeCtBw1bi85OLk76r25v+s/zOJuZY3oE/8npv7q+vIhu9UjOnZ/y
D8XVRNfH0bSu58c7O4+Pj/0sLuI+rG0nNiabFDM4EbPz+bG2c53rNItvlnO9
OhfdiujeX55hhu/2ann3zcvnu8Ph0TH/fHr07EB+7u/u2Z8Hw919+/Nwzz57
uD/0P90DhwfDw2OFKBmCrnfaz3Q97pk6q3pzWM0csMjeMVM9HuuqVyIa9QAA
vVEyx5uXc12cnfafl5VmCMju+Xr0vCwKndQR3o+G/YFaA4USHs3SPqD2jpnr
xMiFXsLvwv8r3Rv+c9Cf1rNcCTwGfufPnj6zGwOy8jvf9z8P/M9DB4S9Pfn5
bLBPz5p4lvNsu/1BYzcnxugKUdNEQHTRVVUCnZW5iQCEUT3V0eXJ9dm1Zy7u
+eg8ru4X8+h1XEwW8UQDqzk5f70dvYMZlOr1elE8MjVge61uppmJEADZOEuI
DqJUj7NCG5phHePqRo9ToLtoFi+jkVZpBkNlo0Wt0+gBcC+O5rLQyCzgsdhE
v97cACVGNxsGVMQJW6uAQcZZLstoUdAWENu2XUYSF7iMco6vxXm+jBCjYTEA
sx0AlC6SajmH1cEKTiKYCTZoElgxjB1HwM9qjegflWM1BohE46qc0aRzXeGS
EFXhJgwXZcYsNII+rqMM/gPeWKSwwjIyU2Cq0WNWTxVwRuAr0QxxrwJ+Cq9X
ps9gn2VpChxGAVetynSR0E6/Pcnwzz/U34N/3zsYWIn+AlObbJSvh6jIFia1
xnHBm8gyJwCfhcmKiTsss+a0VHP+0SLLYbvwa9OZRDLjR+ECnwBGCuQIAq3E
qR6yVCPUdT5GSqvjDE+KZBmDlU8zWjlNxat1k17D1bheAIxh4uttO+P+p5Vj
j/ybCt98wTdwQ/DqC/fqwSc4pDVQbyDiwhAuwF4dEc4X1bzky4gfMJcy9khI
mPL2DJ2J2SbIbj7aaBQbbQ9uMYdbfHq8CtxI40Ujb0aAuYs45wmJXShYWwZo
qEHAFRMD074tYBdwfHCjesxgxTKSTruwkZUlwVYNyLmi52Qd4E48mwPKySyM
/3R+sIwZrAZ4Sq2jafloHwGkU3CcCd0DfAcqXAtkvJAAB6axHPiQ6wHCFDX+
Uek8xuPkkfvqFmSzjtaDWnAdtpDSOdGe7UkZ3G4bt8sCUA2XCfNVprmEeZU9
xAndTkAZMrgU/RCDDgGLdeujJ+FdRNvIiTlQSpRqkigcD6BtUQKylzPQdICk
iLGksOT6UQMlzGNg49oQw7IrUbzBrM20oj/JtOJRuagRKfhtuum3aRajzygx
t3R/0u/CnUeglEqbclElustg7UZnVypOU7jMILRDZzXS8zYTcHAdCbxCzgIn
gOt+xH2X466iB6fAaiwrygrQHmfAQOHctvSXeZ4lIAKX9OLM/rXdhIdd8vnJ
Bzxr2DjAEmHi9gDHD/tOkhIUuG0cC4AG6kVcLeUZBeBBbgeDghpUFtu4EGYr
PBdBihcJu1nkqZMdMHyaAXuvldwGeAoi0FtdAr2sPfLPCPAtSk6zCfyvpwCf
dB4chz1gx5WPlSpZgiagvSNedUHEpA6Bu3Bas/IBUI8O1h5d370GV3RdIwOB
yc0CkKQwhPiEJAKl8PGH0pJGA1OYVwNJlMTT4eyBLcyzaunfzcsJ4Bq/R2cg
4AWYXlZdeuwkShazRc5sBekqX9BqrAzCkYsU96YZrWQkRJo6Rp2hfMDDLVhT
FyoEXibSGRnANIaxR0hPxAcyFlugY9bRaAlHzyeAw8LShZsIToUHz+RajmsU
UVU2megKSXUpS+qBfoWEWDmu34NRzNLAAXoqiYFzEIcADlmYWWYC2DNh0wSq
TGAMmNEsi2RalUW5MLnwwYKEQ3LfI5MHsAVghMPHrEWQmADbj/aK1wXnCByw
RF0R9yQG0OCZcCrXsGD9+wL+yJdEFKxKvBHtpYugRMwRdQZUK9SjuhGgW4bm
p5EVgqk4r3RtiM24h1Hloq3DuRlCmPKxwOPVcxQfMBFvAZhKhgBZwopeAjxF
2rjZ6SiZscKohF2e3/rzH2kUwWBJlElGW0atjMgVbQmcbiPXs9gkTE4B06LR
GIHgyJFJoX6nc6O3+XSboCLES8BUBPFalwpoDFUUxxgL/ch4DCOjAJgANuAS
gfxQNMOJWsI1Kzsg5AWyzAAnGGuJnDYtAoZXRAEAUJadCOJpNvejyfa7dDpF
aTEpExJzVNEc3cAAeW4JAh60x8fqCh87Ag3VnW5LFzKo4OHOkYMCXcxY4pOK
ILIQ+EqFyGhqI1oo6RnET9aoKZlh9YO1IJIgyIpZyyVlzPNSKy3pPNq7QqA5
FLbaHWhQgKzKag4oFZgld2l7zGMAdEk8j0egn8E+8U1dVchlUUclnY1YDWoL
DiG0JR7HYUN6AdBflHXMOjCas7hWgvG3J8AtH/5Aa2LNP4Xs914vI3TemKhz
/vb6ptPl/0cXl/T7zYvf3p69eXGKv69/PXn92v3gJxT8cfn2tdzHX/7N55fn
5y8uTvlluBq1LoEs7hA6qc7l1c3Z5cXJ6w4zXjimtASeT+SOEKBDd/BGGjBO
uCIvUR/FAfGJscDQxnhfOABAPKsBhF+RPqaWycOwiyKejbLJglinaHlLQimQ
1w4PmJrEToWziucoqvk4xppUAFajRxrZTylyJQYekoiSg2vvgc5a2ZNHMnLo
DuYkin+akWkP9nE7JTsHN+N3Qpqg3w1R9BLvKFTeaxFcgImkmcR5L7dmvQF0
QhEP3NIpt7g50BBSWVTXKu1+rrdvXqN1VKaojJ/ZNSIJEJrAhhI8JX4Enzbt
s0GbkyC12x/iRj+Kg4gtqKpcTKaoADROHdACuMYYDgYhi0qb2H9Az3EiIgTM
2ipWQDK691jBkSDtjIkhuA0xlPGVKM9mmYftNfyVxxVIMGLT6u2bMxN5GxO5
XlZ4aHjtwEzLChiMmAo8NJ58OCn8NjiNUqfIaTJLjMB3igYxEgWOyzwvH3Hx
afA0wp+QlBgwsg9Q6r4dRw805d87g84f6jvG/LF1X5AJgBaot7LZIwHADnwx
QAqBKwJ2M4GbpLu0OB9sSmZj3aSGp2A2VLWrhyzR1m4XEkh1zgyTGCDOwsaV
PGSi+wLle2zUpnnsFZykrWvQ7gqrStOEwhjthIxffMZuv4iMM11PS/LyrBuU
BF4MNgYPDfAAbaBivtOBKbJ5Bnc6CK+OddsQ70J8E9uzaTMi0rkjACOPpSlB
ruVlcjpe1TQpnB1Eah8tBq20KLaDsctKtBQxatG/lhWwXpAMorhYctzrD/u7
yq1pe9WQ86C1mjZcObuKnFkHeteKZWc1cNzVDAwWPBJSpci+uHKeieuGYEYE
alygUdCrwJ5FGIy9f62nnDAPHWli3aNrmnXJKekPoiCphFzqcFpgR6TiY/ie
ZwwoF6yhpsdt9Z9SAcGBqEbDG50Y5HUScwK1UZbfDYrcBvyao8lVsMnV8Amy
H6OtGMnR2+OWPZhkCjopMz03Oc2HK2NGIz7ScP4mUJ3nk8ynBoNygwIv+olI
B1YBJ0+OtpIRj48/qUkO2LPraFBKchB/HdHS7N+W55KjQpPahqGXHdB3Fmh+
ZRUqgXkuxgguWyIi1xqkBJxxlpDjDzVCRgiAENjsOGtZBZfjqFjMRrBYEEFe
uxcfi/B7WANsE5TYTWiKsl/5M6kyFqErlP7cohit2m12C11JAcgcPLcjUZ5G
eOSO98r7uOtGNOgNPQK7/NiKJn3CFcIYV4sRKCh2GXDtCr1SwEtkACTl3Fji
oYkcNvTpbF+4A+Ix+FgrbT2c5DEP30f53aJOJ8MA/Nb6E1zkl2Fs0W8RDfAk
lGhbTMJERpZOLTRQ4xXnBi4NcIvOsKOcWWeCIZgL6C9IX2zsyj7sKbJh7GWp
ZaC4QlQ8CE6yBh6zZ3dJ6xNwxcAg6UxnWrCMFmEXZ6mDuANiOI3vsbxP9EsD
xLVIZX6O3gD1JLqGy4CQ/A5tw+4KuZzy2+06ppeUICcMGFqpf5MVgoBgnQT2
QOvM42VexqlQayR/Nl5zhMsIojwpLors94W2Hgca8W+GtoCrk2XgEkXHDLUN
QEzEdh7T6fKCg/i8xbjRkvXc0PLdQLUs5HlnpE2BCSY7srKALRoiPmHEvBba
wGwOaBFufavz7Y8OOhjPCjVDizmJyVFMxj5Ng5v1p8PmQzZDX6K7TxGpHNgB
KUTWA04CU3zgqCDp1EZvUCmkUxcXpiWstFTIuyah8y+KfiKvGcf2JWQdEEQY
XwEIGONgxWHgwCFttQbQpHQsbwM/IRfkdt9OhYrCFN1W1s9MUSc41DUxCJLG
FYYU0CunJB490+FgdstRobXEDOBc71GdKZFPZHEesF/r5Of3X5eJWHqOTm3U
xR8O+2jEgx6zDz1ZADvi9ayouISvVkMUaevlIlP12ugH2Av0SFN6gbZRY9wG
Xpsu54gCNRJPdP387BydjgYNPvbCOn6XmcagRPSgiWVi9wsGMXVtdTBwbY53
duQVTEbYMUk226HndpSd5A3O8eJL3dl2GIU+A7Qp/dghPvR6jtsj2rNLiRTS
ApnCgs+flw6sDKkHUfJf//qX+gbA7Xyus85x1HmaDpKnyfjw6HD/2d4oHR49
HaWD8Wg4Svf0Yfp00Oniw0DX8PBwD545Ohjs7vNFY3AEu0PcVT/YJr8ZL1J4
6CMdp3v083QxCh/deQnoZXaOnqWYpjAcx/ujUfLs8GgfVnN4uL9HQ/34/f30
8GCwtz88GA3TwbODvSH8fXig9WEHXv9EyzGL0ffWvPMWsNns7O2ND4Z7u+n4
6GCUHsSjg6E+3N8dpke8J5Elx9E3XtaiKo4xH+IY0DeemWMc9ZgeOm4cb8cm
fnwD4AFYOpvn+aO14w3os4I9wQx09Cdy8p3j/T/g1h/qD8aA4+gJWPU4knAj
TF74e+eFIDbh/5XFfxqdaRGsXaI5iWuJOk3+AdSFieAsu21QVJOYREoi5dFU
HyXLQtxGLHuQ9Rpy/Dg114lxVjnET2TpepWE3765QIBs/fkjomg4caJwvXQa
JCqjHNmaaPjdHx4QvrdySF1n+ltSd0H2Fh9RLSHgIi0bad30HayQPhlQXRDX
IOAtnFa4Kr+DgCcCaUDXqnEET2uTshaBm3hEFZb8a2TB2WGQ7NcO48LP8ESG
xqhPjOHABm6ZbKgl6DVfnP4WDJiZUN8Nzein+HKoQJ+JF9NFJdxOLAJzuMrq
1f7Y0ehCR5NazFNSapwuJ2BvSQc+BZhqH1D4AmCd+AiCYmEwZi9FSJUksSgJ
APQ1FH6UkCDBlkDVWYkr2Ge8JHXqKmz7V1BY2CcjWo2QdVPwCaavC8ZjtDcz
pEjxQ685OkjWTyBFVoWArlAwt8WAY7y7e892nx0dHgwHg6HcYQnRMQc/T9M3
97/XT+W6lTmHw/2Dg+H+Hl8VsTW6ffW7HTmj9wfP4v3B8CjpDQ/1sLd3dHjY
ezbe2+0d7MfD3Wd7T3U82JU3WvybV0/SAIna9IMsM6ZijOBJAK/HcVJ8GRlq
m6Py3bU8VdLcMFOy91yigQJWx1oBcYLAEzNU6wKgQFdbBUasdN4ZON5Qhxed
mkkaHyRQRS79YbwMA0qOnBXsYaLTHizMUlCoY63HJXRagYYnvAtzEhNWDdEX
qRJ4W6MrAnm6Zfz2IRuI4niWGI7innQpFRxRSjPgkpgxg+8/TsuZGxCQ1Zmd
KTEl0LcnGSUjUT4r3ktim+7WTDkkC4IZhVelxJnG/KedHMT+zjD8UMW0YgAi
A0xmsA7WNZrXeAQa1v5of2841Ht6eDQ6SAZjjVrPYHx4uHf05zWv2dISHMD0
B6pXNW8Qp1OM2jqNfT6ghamG45C8S4E75Vl2joWOZGHuXcnKXOUG32UIeFOG
f1sBpD66lFg3MOA3WKXNPe/k8SjNTJKXGKyjhT05mVRad+T9T/T/NVqQTLaW
aJ8LfjkKFXqwuk4gVry/QCRvO4qBeGQt+IbM+2vQZie4sXZ9A0+jFffJFgF6
u42fLjGJXv4OJjHtLdnmJ0MySFxSdTlnE1TsHVgFbd6mecb5Y7w00XdWLAvp
Af+wDMHStI1kWGUJo605KXvIF5bWYySUdiWUBjyLMoiRbQp/+vaEWeFKALZt
P1KIsuVnw9S+FNMnfeCGHlGNKJF4UZxTDs8X0w4pFBFK1tXoEbADDD+Y0KUS
KjWH4czeSyveHZ9DAYhNsrpwGSK4uSDHwrs25V3nbW2Y3aKaa9F5QjcHrCzJ
M7JvEfgViDIM4xJmxSoKxpFRSG7lGJNbctjOxsutJW01OsyulhA3HCBgCMey
2AtMuJVax5vAwCqzqPsI8rdDX7gidMCaqX0YkWLL4+B2exl+EaTEYVkBi8Up
uSckriAmDmGMPVwXCGgRoJwKk4Ndgg3UcD7JZipWkR2ma72zY5A4degnM2X+
wEfDzlG31ZUxhC8xpXqe1PY1RltGe4cpvE7AQR8TCBQ4llXl3EEv3qyZh2p5
A+gOpcNwizUOAvT1dgKlWqwenMtpQASK6+/S1IFfDmouDJIAsRCZLxYzXWXJ
KeUF8vk5r6RhjPDQQ42D80Fdzi4MsSFr1/pePUG2Uiow7QEeYQPQZ4yh5oMe
uih0zm9GYQXsWRMdScQFNCajQ/ezbDE6Rf/+VoTn7pIEgrAYQzt4EyfnIAIa
RbiirAhQ3MoWeG2kgV88sJFLwXsXNA0z+5BAKD0JbzqvwoJSOr970kylTKOU
i+ryvpspXXAUYOlGHQAIq8LiW7Myn3bgzWyXbEXqF7P7iIJOYlDRJQAwyNbv
4tluE8+Eg8FAyLUInDBuI+goPmoJFQvGWxXdsgfviSQgLwwbkBzjokAxH3WH
Atcdwk7J2uU0Pa+5UCQZxjjhWDLb86n4euNolCOPBxbKUW1cdmO5nE5JmxDP
gPMKcKKrVHBwAmogjNisxITVe50SlmPyGijiYxI1TCabwn9COBJyRiUgspEr
Ol3JxDdgzaHa71kHgXyN7LF5T13rXPFHwDJ1GU1AbLm6AkIvL9hghND6AOzh
TBrNPNmljbqDZPwJsBdLihB/UTo4HKZ8G4vDTZS1AwVYi4sIWZJVNbd0VnPO
rMUvtgglQEbBrRKP0CI3XtnuBsIcUCsbNxAxJJbMSKbig2ZuZaVb8IxT4TCI
xxvxLKCxXDQBGqUvJGBAB+M8H4SRS94PgQXECGJ5hRgD8qsbXIT5aMi10HqO
Ipt0R0kbSaKpGAWnhokSFvrWXJRo6Zfahfbh/Wn5qCn7lqZDexYLRUrNoh4t
RiyOocRiWj+oxmwa49YogGR1jhXdSVYgehmMDjPUYOYmFBmwKfAKE9YoLRph
1Yr5IEZxfilFdIQuLFy65FYC8mNU4vzjnKNqOF8rd3Al/EJxRP1oVehGiLCd
Agp6MGsYVqNwtGozRv1RBZmikpsgROCSRC3MNIZ/KVqcpqEz1Sr1JUgV5JRB
QQDrmDBAXk4IlCITVrJ8KABn6zhcMlBJuoLQBeqT54u8zly9TdRMZHX5TBS/
c/mbzEIsuonm3vJ1+6zOMOooqii8PbPzNvbB0TgvvNFAs+OuRKBZaDBf4Civ
BTiMQQ+u5ITwK3iZX6D8vRWBZn3ZATA4RdvlA/RtrM8JRhOoR/DeiM5I7tij
8OUjmB4ZWj9NZNuW5PSIEYRYnizRKtarAXqnYzeAZHWhEG5iIjkHXSM83aV6
GP8Q17RFrfA9pR2iFtZI2uTguheDqMs3Iuqg4n0pOCPPirA1+QmB2ursRipp
YNdbKL0qZm5M8qDjwpE6xKJMvrjSrvBJLGN43yfyOIe0VBsF84Tivxk8J/Fd
cSaIy1B0tCKePMKmZkoeELMQIqYpSgUS1lGTljXmoShrjAqkNyVg99YVt1lH
qpH4g/f17diC+//6/Fh3yG0RK074CItbHY02a2KCLBumQNbmcKkKoWJTXIgH
0tjMLERYduCPTjQFqcD+UQBQ7Q1H9gC3qA/FDLMKW6HlM35kQejMdYthaJAg
HOkg7ccpn1JVZbfIPo4AQMrKRWcVZLV/B41Yn1HLKsd9RkUEVKOJLOtKs77m
fSzEuWjvLcvyCO+4QtIulfgaFYgpv8vGIXaQA4yzL1S4SmEwYbxwFUzQrvLQ
ZlKiNXue1GlgwUq9oE0UszWUXDOcBH9uxMYAL3+YOxzUaCK3oGJf1suJzfjs
Q67TxaezelE38lst86eDInSXvHzWhdWoTJcuW9LVl2woPqV1BskLXHOUhQnr
xFgVCjL0kFlyty94X71N9KNuFDZ5Jnbl9WuzP4q/HutSW7x1G/ET68HqfUFC
+fYaL/5e+nR//0gnB4f7g704HsUH++neYDR4evB0HMfpszVe/L3B3r+VP7E5
a+FPpU/86PUfZU/8xcwHqnjUPsiGoc9xx7e++M9yMGgE53GHFX3EjIpu1EHZ
jv9Hs/RCfttQLf6mWjHT2RwMEE2xGQZgkmZ0wigAl4S4ALqYqxwUIM2AaGa2
MDaJDEyCmlglWdWIm7FRoL40otXfQ2c2MTByzWvxmZQcGlwUhNtgSyORio5y
ef0i+pVFReaSf4inHTfZV7cT5xO4WJSF7jA81M8g3g/2FlXORSUiUnGfJbAb
r8++vXnZe+Z1DFcchawjXMEy03lqV6GXrwb6/Ul2mb36end7kaezd4v0ef17
+vS37PXzV9PRLwneW4x29/OzYsArosST9eSNXlmujkF4SIa1n+v39Jd7GO9s
cHd6Pry4yfMPXz88vbg5GXy4fZl9uPkwvDv97fHD55OvF58vZnDt/vL5mTmb
5dP0+dnB+c1vQ3V5+tv+xeffHi+eP2bx+4uvZ5/LLP71zSD59fzg9fLo64fd
vH49e7f34Xb4OPrl7eLD7lF9lj1mH96/uz/7PB+dzaYDlf7689fL7NlDsnsx
H13v5/qXl3Xyy5f89eziYXR99Mvd7bv7ZPls//KX34bnn3/bPb+9m17cvso+
fJ08vbx5u3++e/ZUXXx9O8CRfzT768Fdfnf75uvrr+/uL75+eLw4ffvlYnb2
5e70ZE/BVuAHrOMrPHSTZO+vH7O793f5qHgDW5sfnhXvlqPP8/nd+zezy+Ln
aTKDlX6d00SXs3e7d7f7A3U5u1je3b4c3F2fHQCQ4fcHPLQy/fXNY/K1fHj9
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

-->

</rfc>

