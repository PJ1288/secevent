<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.3 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>

<rfc ipr="trust200902" docName="draft-richanna-secevent-token-01" category="info">

  <front>
    <title abbrev="secevent-token">Security Event Token (SET)</title>

    <author initials="A." surname="Backman" fullname="Annabelle Backman">
      <organization>Amazon</organization>
      <address>
        <email>richanna@amazon.com</email>
      </address>
    </author>
    <author initials="W." surname="Denniss" fullname="William Denniss">
      <organization>Google</organization>
      <address>
        <email>wdenniss@google.com</email>
      </address>
    </author>
    <author initials="M." surname="Ansari" fullname="Morteza Ansari">
      <organization>Cisco</organization>
      <address>
        <email>morteza.ansari@cisco.com</email>
      </address>
    </author>
    <author initials="M." surname="Jones" fullname="Michael B. Jones">
      <organization>Microsoft</organization>
      <address>
        <email>mbj@microsoft.com</email>
        <uri>http://self-issued.info/</uri>
      </address>
    </author>

    <date year="2017" month="November" day="14"/>

    <area>Security</area>
    <workgroup>secevent</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This specification defines the Security Event Token, which may be
distributed via a protocol such as HTTP.  The Security Event Token
(SET) specification profiles the JSON Web Token (JWT), which can be
optionally signed and/or encrypted.  A SET describes a statement of
fact from the perspective of an issuer that it intends to share with
one or more receivers.</t>



    </abstract>


  </front>

  <middle>


<section anchor="intro" title="Introduction">
<t>This specification defines an extensible Security Event Token (SET)
format which may be exchanged using protocols such as HTTP.  The
specification builds on the JSON Web Token (JWT) format <xref target="RFC7519"></xref> in
order to provide a self-contained token that can be optionally signed
using JSON Web Signature (JWS) <xref target="RFC7515"></xref> and/or encrypted using JSON
Web Encryption (JWE) <xref target="RFC7516"></xref>.</t>

<t>This specification profiles the use of JWT for the purpose of issuing
security event tokens (SETs).  This specification defines a base
format upon which profiling specifications define actual events and
their meanings.  Unless otherwise specified, this specification uses
non-normative example events intended to demonstrate how events may
be constructed.</t>

<t>This specification is scoped to security and identity related events.
While security event tokens may be used for other purposes, the
specification only considers security and privacy concerns relevant
to identity and personal information.</t>

<t>Security Events are not commands issued between parties.  A security
event is a statement of fact from the perspective of an issuer about
the state of a security subject (e.g., a web resource, token, IP
address, the issuer itself) that the issuer controls or is aware of,
that has changed in some way (explicitly or implicitly).  A security
subject MAY be permanent (e.g., a user account) or temporary (e.g.,
an HTTP session) in nature.  A state change could describe a direct
change of entity state, an implicit change of state or other higher-
level security statements such as:</t>

<t><list style="symbols">
  <t>The creation, modification, removal of a resource.</t>
  <t>The resetting or suspension of an account.</t>
  <t>The revocation of a security token prior to its expiry.</t>
  <t>The logout of a user session.  Or,</t>
  <t>A cumulative conclusion such as to indicate that a user has taken
over an email identifier that may have been used in the past by
another user.</t>
</list></t>

<t>While subject state changes are often triggered by a user-agent or
security-subsystem, the issuance and transmission of an event often
occurs asynchronously and in a back-channel to the action which
caused the change that generated the security event.  Subsequently,
an Event Receiver, having received a SET, validates and interprets
the received SET and takes its own independent actions, if any.  For
example, having been informed of a personal identifier being
associated with a different security subject (e.g., an email address
is being used by someone else), the Event Receiver may choose to
ensure that the new user is not granted access to resources
associated with the previous user.  Or, the Event Receiver may not
have any relationship with the subject, and no action is taken.</t>

<t>While Event Receivers will often take actions upon receiving SETs,
security events cannot be assumed to be commands or requests.  The
intent of this specification is to define a way of exchanging
statements of fact that Event Receivers may interpret for their own
purposes.  As such, SETs have no capability for error signaling other
to ensure the validation of a received SET.</t>

<section anchor="conv" title="Notational Conventions">
<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”,
“SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and
“OPTIONAL” in this document are to be interpreted as described in
<xref target="RFC2119"></xref>.  These keywords are capitalized when used to unambiguously
specify requirements of the protocol or application features and
behavior that affect the inter-operability and security of
implementations.  When these words are not capitalized, they are
meant in their natural-language sense.</t>

<t>For purposes of readability, examples are not URL encoded.
Implementers MUST percent encode URLs as described in Section 2.1 of
<xref target="RFC3986"></xref>.</t>

<t>Throughout this document, all figures MAY contain spaces and extra
line-wrapping for readability and space limitations.  Similarly, some
URIs contained within examples have been shortened for space and
readability reasons.</t>

</section>
<section anchor="defn" title="Definitions">
<t>The following definitions are used with SETs:</t>

<t><list style="hanging">
  <t hangText='Security Event Token (SET)'><vspace blankLines='0'/>
  A SET is a JWT <xref target="RFC7519"></xref> that contains an event payload describing
a security event.</t>
  <t hangText='Event Transmitter'><vspace blankLines='0'/>
  A service provider that delivers SETs to other providers known as
Event Receivers.</t>
  <t hangText='Event Receiver'><vspace blankLines='0'/>
  An Event Receiver is an entity that receives SETs through some
distribution method.  An Event Receiver is the same entity
referred as “recipient” or “receiver” in and related
specifications.  <xref target="RFC7519"></xref></t>
  <t hangText='Subject'><vspace blankLines='0'/>
  A SET describes an event or state change that has occurred about a
Subject.  A Subject may be a principal (e.g., Section 4.1.2
<xref target="RFC7519"></xref>), a web resource, an entity such as an IP address, or
the issuer itself that a SET might reference.</t>
  <t hangText='Profiling Specification'><vspace blankLines='0'/>
  A specification that uses the SET Token specification to define one or
more event types and the associated claims included.</t>
</list></t>

</section>
</section>
<section anchor="set" title="The Security Event Token (SET)">
<t>A SET is a data structure that encodes an “event payload” describing a
security event, wrapped in an “envelope” providing metadata and context
for the security event.  The SET envelope is a JWT Claims Set as defined in
<xref target="RFC7519"></xref>, consisting of a JSON object containing a set of claims.  The
event payload is a JSON object contained within the SET envelope, itself
containing claims that express information about the event, e.g. the type
of event, the subject of the event, and other information defined in a
Profiling Specification.</t>

<t>This specification defines a core set of claims for use in SET envelopes
and event payloads, however Profiling Specifications MAY define additional
claims of both types.  It is RECOMMENDED that Profiling Specifications
define claims to be used in the event payload rather than the envelope.  If
a Profiling Specification does define envelope claims, those claims SHOULD
be registered in the JWT Token Claims Registry <xref target="IANA.JWT.Claims"></xref> or have
Public Claim Names as defined in Section 4.2 of <xref target="RFC7519"></xref>.</t>

<section anchor="claims" title="SET Claims">
<t>This specification profiles the following claims defined in <xref target="RFC7519"></xref> for
use in the SET envelope:</t>

<t><list style="hanging">
  <t hangText='iss'><vspace blankLines='0'/>
  A case-sensitive string identifying the principal that issued the SET,
as defined by Section 4.1.1 of <xref target="RFC7519"></xref>.  This claim is REQUIRED.</t>
  <t hangText='aud'><vspace blankLines='0'/>
  A case-sensitive string or array of case-sensitive strings identifying
the audience for the SET, as defined by Section 4.1.3 of <xref target="RFC7519"></xref>.  This
claim is RECOMMENDED.</t>
  <t hangText='exp'><vspace blankLines='0'/>
  As defined by Section 4.1.4 of <xref target="RFC7519"></xref>, this claim is the time after
which the JWT MUST NOT be accepted for processing.  In the context of a SET
however, this notion does not apply since a SET reflects something that
has already been processed and is historical in nature.  Use of this claim
is NOT RECOMMENDED.</t>
  <t hangText='iat'><vspace blankLines='0'/>
  A value identifying the time at which the SET was issued, as defined by
Section 4.1.6 of <xref target="RFC7519"></xref>.  This claim is REQUIRED.</t>
  <t hangText='jti'><vspace blankLines='0'/>
  A unique identifier for an event, as defined by Section 4.1.7 of
<xref target="RFC7519"></xref>.  This claim is REQUIRED.</t>
</list></t>

<t>This specification defines the following new claims for use in the SET
envelope:</t>

<t><list style="hanging">
  <t hangText='event'><vspace blankLines='0'/>
  A JSON object known as the “event payload”, whose contents identify the
type of event contained within the SET and contain additional information 
defined as part of an event type definition in a Profiling Specification.</t>
</list></t>

<t>This specification defines the following claims for use in event payloads:</t>

<t><list style="hanging">
  <t hangText='event_type'><vspace blankLines='0'/>
  A string containing a URI that uniquely identifies an event type
defined by a Profiling Specification.  This claim is REQUIRED.</t>
  <t hangText='event_id'><vspace blankLines='0'/>
  A string that identifies a specific “real world” event or state change
to which this event is related. Recipients MAY use this claim to correlate
events across different SETs received at different times and/or by different
systems. The value of this claim MUST be unique with respect to the
transmitter to a specific “real world” event or state change, however
recipients MUST NOT interpret a difference in “event_id” values as a
guarantee that two events are not related to the same “real world” event or
state change. This claim is OPTIONAL.</t>
  <t hangText='event_subject'><vspace blankLines='0'/>
  A Subject Identifier that identifies the subject of the event.  (See:
<xref target="subject"></xref>) This claim is REQUIRED.</t>
  <t hangText='event_time'><vspace blankLines='0'/>
  A number identifying the date and time at which the event is believed to
  have occurred or will occur in the future.  Its value MUST take the form
  of a NumericDate value, as defined in Section 2 of <xref target="RFC7519"></xref>.  This claim
  is OPTIONAL, however if it is not present then the recipient MUST
  interpret that to mean that no event time is being asserted, either
  because there is no specific event time, the transmitter does not wish to
  share it, or the transmitter does not know its value.</t>
</list></t>

<t>Both the SET envelope and event payload MAY contain additional claims, such
as those defined in a Profiling Specification.  The format and meaning of
these claims is out of scope of this specification.  Implementations SHOULD
ignore any claims in the SET envelope or event payload that they do not
understand.</t>

<t>The following is a non-normative example showing a SET envelope expressing
a hypothetical event with two additional claims in the event payload:</t>

<figure title="Example SET With Event Claims In Payload" anchor="figset"><artwork><![CDATA[
{
  "jti": "3d0c3cf797584bd193bd0fb1bd4e7d30",
  "iss": "https://transmitter.example.com",
  "aud": [ "https://receiver.example.com" ],
  "iat": 1458496025,
  "event": {
    "event_type": "https://secevent.example.com/example_event",
    "event_subject": {
      "identifier_type": "urn:ietf:params:secevent:subject:email",
      "email": "user@example.com"
    },
    "event_time": 1458492425,
    "claim_1": "foo",
    "claim_2": "bar"
  }
}
]]></artwork></figure>

<t>The payload in this example contains the following:</t>

<t><list style="symbols">
  <t>An “event_type” claim whose value is the URI identifying the
hypothetical event type.</t>
  <t>An “event_subject” claim whose value identifies a subject via email
address.</t>
  <t>An “event_time” claim whose value is the time at which the event occured.</t>
  <t>Two claims “claim_1” and “claim_2” that are defined by the hypothetical 
event type’s Profiling Specification.</t>
</list></t>

</section>
<section anchor="subject" title="Subject Identifiers">
<t>The Subject Identifier provides a common syntax for expressing the subject
of a security event.  A Subject Identifier is a JSON object representing an
instance of a Subject Identifier Type.  A Subject Identifier Type defines a
way of identifying the subject of an event. Typically this is done by
defining a set of one or more claims about a subject that when taken
together collectively identify that subject.  Each Subject Identifier Type
MUST have a name which MUST be registered in the IANA “SET Subject
Identifier Types” registry established by <xref target="iana-sit"></xref>.</t>

<t>A Subject Identifier MUST contain an “identifier_type” claim, whose value is
a string containing the name of the Subject Identifier’s Subject Identifier
Type.  All other claims within the Subject Identifier MUST be defined by the
Subject Identifier Type.</t>

<t>The names of the Subject Identifier Types defined below are registered in
the IANA “SET Subject Identifier Types” registry established by <xref target="iana-sit"></xref>.</t>

<section anchor="implicit-subject-identifier-type" title="Implicit Subject Identifier Type">
<t>The “Implicit” Subject Identifier Type indicates that the recipient is to be
determined implicitly, either from other claims in the SET envelope or event
payload, or through some other context.  For example, there may be event
types for which the only logical subject is the transmitter itself, in which
case the subject is implicitly known from the “iss” claim in the SET
envelope.</t>

<t>The Implicit Subject Identifier Type has the name “implicit”.  This type
contains no additional claims.</t>

<t>The following is a non-normative example of a Subject Identifier
representing an instance of the Implicit Subject Identifier Type:</t>

<figure title="An Instance of the Implicit Subject Identifier Type" anchor="figimplicit"><artwork><![CDATA[
{
  "identifier_type": "implicit"
}
]]></artwork></figure>

</section>
<section anchor="email-subject-identifier-type" title="Email Subject Identifier Type">
<t>The “Email” Subject Identifier Type identifies a subject by email address.
It has the name “email”, and contains a single additional claim:</t>

<t><list style="hanging">
  <t hangText='email'><vspace blankLines='0'/>
  A string containing an email address.  Its value SHOULD conform to
<xref target="RFC5322"></xref>.  This claim is REQUIRED.</t>
</list></t>

<t>The following is a non-normative example of a Subject Identifier
representing an instance of the Email Subject Identifier Type:</t>

<figure title="An Instance of the Email Subject Identifier Type" anchor="figemail"><artwork><![CDATA[
{
  "identifier_type": "email",
  "email": "user@example.com"
}
]]></artwork></figure>

</section>
<section anchor="phone-number-subject-identifier-type" title="Phone Number Subject Identifier Type">
<t>The “Phone Number” Subject Identifier Type identifies a subject by phone
number. It has the name “phone_number”, and contains a single claim:</t>

<t><list style="hanging">
  <t hangText='phone_number'><vspace blankLines='0'/>
  A string containing a phone number.  It SHOULD be formatted according to
<xref target="E.164"></xref>.  This claim is REQUIRED.</t>
</list></t>

<t>The following is a non-normative example of a Subject Identifier
representing an instance of the Phone Number Subject Identifier Type:</t>

<figure title="An Instance of the Phone Number Subject Identifier Type" anchor="figphone"><artwork><![CDATA[
{
  "identifier_type": "phone_number",
  "phone_number": "+1 206 555 0123"
}
]]></artwork></figure>

</section>
<section anchor="issuer-and-subject-subject-identifier-type" title="Issuer and Subject Subject Identifier Type">
<t>The “Issuer and Subject” Subject Identifier Type identifies a subject by an
issuer and subject pair.  It has the name “iss-sub”, and contains two
claims:</t>

<t><list style="hanging">
  <t hangText='iss'><vspace blankLines='0'/>
  A case-sensitive string identifying the principal who is responsible for
assignment of the identifier in the “sub” claim, as defined by Section 4.1.1
of <xref target="RFC7519"></xref>.  This claim is REQUIRED.</t>
  <t hangText='sub'><vspace blankLines='0'/>
  A case-sensitive string containing an identifier that identifies a subject
within the context of the principal identified by the “iss” claim, as
defined by Section 4.1.2 of <xref target="RFC7519"></xref>.  This claim is REQUIRED.</t>
</list></t>

<t>The following is a non-normative example of a Subject Identifier
representing an instance of the Issuer and Subject Subject Identifier Type:</t>

<figure title="An Instance of the Issuer and Subject Subject Identifier Type" anchor="figisssub"><artwork><![CDATA[
{
  "identifier_type": "iss-sub",
  "iss": "http://id.example.com",
  "sub": "example.user.1234"
}
]]></artwork></figure>

</section>
</section>
<section anchor="set-type" title="Explicit Typing of SETs">
<t>This specification registers the “application/secevent+jwt” media
type.  SETs MAY include this media type in the “typ” header parameter of
the JWT containing the SET to explicitly declare that the JWT is a SET.
This MUST be included if the SET could be used in an application context
in which it could be confused with other kinds of JWTs.  Profiling
Specifications MAY declare that this is REQUIRED for SETs containing events
defined by the Profiling Specification.</t>

<t>Per the definition of “typ” in Section 4.1.9 of <xref target="RFC7515"></xref>, it is
RECOMMENDED that the “application/” prefix be omitted.  Therefore,
the “typ” value used SHOULD be “secevent+jwt”.</t>

</section>
<section anchor="construction" title="Security Event Token Construction">
<t>A SET is a JWT, and therefore it’s construction follows that described in
<xref target="RFC7519"></xref>.</t>

<t>While this specification uses JWT to convey a SET, implementers SHALL
NOT use SETs to convey authentication or authorization assertions.</t>

<t>The following is the example JWT Claims Set from <xref target="figset"></xref>, expressed as
an unsigned JWT.  The JOSE Header is:</t>

<figure><artwork><![CDATA[
{"typ":"secevent+jwt","alg":"none"}
]]></artwork></figure>

<t>Base64url encoding of the octets of the UTF-8 representation of the
JOSE Header yields:</t>

<figure><artwork><![CDATA[
eyJ0eXAiOiJzZWNldmVudCtqd3QiLCJhbGciOiJub25lIn0
]]></artwork></figure>

<t>The example JWT Claims Set is encoded as follows:</t>

<figure><artwork><![CDATA[
ew0KICAgImp0aSI6ICIzZDBjM2NmNzk3NTg0YmQxOTNiZDBmYjFiZDRlN2QzMCIsDQog
ICAiaXNzIjogImh0dHBzOi8vdHJhbnNtaXR0ZXIuZXhhbXBsZS5jb20iLA0KICAgImF1
ZCI6IFsgImh0dHBzOi8vcmVjZWl2ZXIuZXhhbXBsZS5jb20iIF0sDQogICAiaWF0Ijog
MTQ1ODQ5NjAyNSwNCiAgICJldmVudCI6IHsNCiAgICAgImV2ZW50X3R5cGUiOiAiaHR0
cHM6Ly9zZWNldmVudC5leGFtcGxlLmNvbS9leGFtcGxlX2V2ZW50IiwNCiAgICAgImV2
ZW50X3N1YmplY3QiOiB7DQogICAgICAgImlkZW50aWZpZXJfdHlwZSI6ICJlbWFpbCIs
DQogICAgICAgImVtYWlsIjogInVzZXJAZXhhbXBsZS5jb20iDQogICAgIH0sDQogICAg
ICJldmVudF90aW1lIjogMTQ1ODQ5MjQyNSwNCiAgICAgImNsYWltXzEiOiAiZm9vIiwN
CiAgICAgImNsYWltXzIiOiAiYmFyIg0KICAgfQ0KIH0=
]]></artwork></figure>

<t>The encoded JWS signature is the empty string.  Concatenating the
parts yields the following complete JWT:</t>

<figure title="Example Unsecured Security Event Token" anchor="figsetencoded"><artwork><![CDATA[
eyJ0eXAiOiJzZWNldmVudCtqd3QiLCJhbGciOiJub25lIn0.
ew0KICAgImp0aSI6ICIzZDBjM2NmNzk3NTg0YmQxOTNiZDBmYjFiZDRlN2QzMCIsDQog
ICAiaXNzIjogImh0dHBzOi8vdHJhbnNtaXR0ZXIuZXhhbXBsZS5jb20iLA0KICAgImF1
ZCI6IFsgImh0dHBzOi8vcmVjZWl2ZXIuZXhhbXBsZS5jb20iIF0sDQogICAiaWF0Ijog
MTQ1ODQ5NjAyNSwNCiAgICJldmVudCI6IHsNCiAgICAgImV2ZW50X3R5cGUiOiAiaHR0
cHM6Ly9zZWNldmVudC5leGFtcGxlLmNvbS9leGFtcGxlX2V2ZW50IiwNCiAgICAgImV2
ZW50X3N1YmplY3QiOiB7DQogICAgICAgImlkZW50aWZpZXJfdHlwZSI6ICJlbWFpbCIs
DQogICAgICAgImVtYWlsIjogInVzZXJAZXhhbXBsZS5jb20iDQogICAgIH0sDQogICAg
ICJldmVudF90aW1lIjogMTQ1ODQ5MjQyNSwNCiAgICAgImNsYWltXzEiOiAiZm9vIiwN
CiAgICAgImNsYWltXzIiOiAiYmFyIg0KICAgfQ0KIH0=.
]]></artwork></figure>

<t>For the purpose of a simpler example in Figure 5, an unsecured token
was shown.  When SETs are not signed or encrypted, the Event Receiver
MUST employ other mechanisms such as TLS and HTTP to provide
integrity, confidentiality, and issuer validation, as needed by the
application.</t>

<t>When validation (i.e. auditing), or additional transmission security
is required, JWS signing and/or JWE encryption MAY be used.  To
create and or validate a signed and/or encrypted SET, follow the
instructions in Section 7 of <xref target="RFC7519"></xref>.</t>

</section>
</section>
<section anchor="related-events" title="Related Events">
<t>In order to accommodate use cases that require communicating multiple
related security events to an Event Receiver, this section defines the
“Related Events” event type. A Related Events event is essentially a
container for two or more events that are related to one another, in
that they are all related to the same “real world” event or state
change. The Related Events event SHOULD NOT be used to combine
unrelated events into a single set, and MUST NOT be used as a general
purpose batch transmission mechanism. Profiling Specifications and/or
implementers who desire an event grouping mechanism with these or
other semantics are encouraged to profile this specification and
define additional event types for those use cases.</t>

<t>The event type for the Related Events event is the URN
“urn:ietf:secevents:related_events”.</t>

<t>The Related Events event has a single additional event payload claim:</t>

<t><list style="hanging">
  <t hangText='events'><vspace blankLines='0'/>
  An array of event payloads, as defined in this document.</t>
</list></t>

<section anchor="related-events-proc" title="Processing Related Events">
<t>Event payloads within the “events” claim can inherit the “event_id”,
“event_subject”, and “event_time” claims from the Related Event’s event
payload. Transmitters MAY omit some, all, or none of these claims from an
event payload within the “events” claim. When a claim is omitted, recipients
MUST use the value of the corresponding claim in the Related Event event’s
payload.</t>

<t>The following is a non-normative example of a SET containing a Related
Events event:</t>

<figure title="Example SET Containing A Related Events Event" anchor="figrelated"><artwork><![CDATA[
{
  "jti": "1c0038c2-02db-40de-ad50-122a64724166",
  "iss": "https://transmitter.example.com",
  "aud": [ "https://receiver.example.com" ],
  "iat": 1510666261,
  "event": {
    "event_type": "urn:ietf:secevent:related_events",
    "event_subject": {
      "identifier_type": "email",
      "email": "user@example.com"
    },
    "event_time": 1510662661,
    "events": [
      {
        "event_type": "http://specs.example.com/set_profile/event_1"
      },
      {
        "event_type": "http://specs.example.com/set_profile/event_2",
        "event_time": 151059061
      }
    ]
  }
}
]]></artwork></figure>

<t>The following table demonstrates how event payloads within a Related Events
event inherit values for omitted claims (For brevity, event types have are
abbreviated in this table):</t>

<figure title="Example of Event Payloads Inheriting Values for Omitted Claims" anchor="figomitted"><artwork><![CDATA[
+--------------------+------------+-------------------------------+
| Event Type         | Event Time | Event Subject                 |
+--------------------+------------+-------------------------------+
| ...:related_events | 151062661  | {                             |
+--------------------+            |   "identifier_type": "email", |
| .../event_1        |            |   "email": "user@example.com" |
+--------------------+------------+ }                             |
| .../event_2        | 151059061  |                               |
+--------------------+------------+-------------------------------+
]]></artwork></figure>

<t>Since the first related event payload omits the “event_time” claim, it
inherits the event time from the Related Events event payload. Similarly,
since both the first and the second related event paylods omit the
“event_subject” claim, both inherit the event subject from the Related
Events payload.</t>

</section>
</section>
<section anchor="profile-req" title="Requirements for SET Profiles">
<t>Profiling Specifications for SETs define the syntax and semantics of
SETs conforming to that SET profile and rules for validating those
SETs.  The syntax defined by Profiling Specifications includes what
SET envelope and event payload claims are used by SETs expressing and
event defined by the profile.</t>

<t>Defining the semantics of the SET contents for SETs utilizing the
profile is equally important.  Possibly most important is defining
the procedures used to validate the SET issuer and to obtain the keys
controlled by the issuer that were used for cryptographic operations
used in the JWT representing the SET.  For instance, some profiles
may define an algorithm for retrieving the SET issuer’s keys that
uses the “iss” claim value as its input.  Likewise, if the profile
allows (or requires) that the JWT be unsecured, the means by which
the integrity of the JWT is ensured MUST be specified.</t>

<t>Profiling Specifications MUST define how the event Subject is
identified in the SET, as well as how to differentiate between the
event Subject’s Issuer and the SET Issuer, if applicable.  It is NOT
RECOMMENDED for Profiling Specifications to use the “sub” claim 
defined in <xref target="RFC7519"></xref> in cases in which the Subject is not globally
unique and has a different Issuer from the SET itself.</t>

<t>Profiling Specifications MUST clearly specify the steps that a
recipient of a SET utilizing that profile MUST perform to validate
that the SET is both syntactically and semantically valid.</t>

<section anchor="extensions" title="Extending Events">
<t>As needs change and new use cases develop, it may be desirable to augment
existing event definitions with new claims. In order to avoid collisions,
Profiling Specifications that extend existing events with additional event
payload claims SHOULD use Collision-Resistant Names as defined in Section 2
of <xref target="RFC7519"></xref> for the names of the new claims.</t>

</section>
</section>
<section anchor="security" title="Security Considerations">

<section anchor="c-and-i" title="Confidentiality and Integrity">
<t>SETs may often contain sensitive information.  Therefore, methods for
distribution of events SHOULD require the use of a transport-layer
security mechanism when distributing events.  Parties MUST support
TLS 1.2 <xref target="RFC5246"></xref> and MAY support additional transport-layer
mechanisms meeting its security requirements.  When using TLS, the
client MUST perform a TLS/SSL server certificate check, per
<xref target="RFC6125"></xref>.  Implementation security considerations for TLS can be
found in “Recommendations for Secure Use of TLS and DTLS” <xref target="RFC7525"></xref>.</t>

<t>Security Events distributed through third-parties or that carry
personally identifiable information, SHOULD be encrypted using JWE
<xref target="RFC7516"></xref> or secured for confidentiality by other means.</t>

<t>Unless integrity of the JWT is ensured by other means, it MUST be
signed using JWS <xref target="RFC7515"></xref> so that individual events can be
authenticated and validated by the Event Receiver.</t>

</section>
<section anchor="delivery" title="Delivery">
<t>This specification does not define a delivery mechanism by itself.
In addition to confidentiality and integrity (discussed above),
implementers and Profiling Specifications MUST consider the
consequences of delivery mechanisms that are not secure and/or not
assured.  For example, while a SET may be end-to-end secured using
JWE encrypted SETs, without TLS there is no assurance that the
correct endpoint received the SET and that it could be successfully
processed.</t>

</section>
<section anchor="sequencing" title="Sequencing">
<t>As defined in this specification, there is no defined way to order
multiple SETs in a sequence.  Depending on the type and nature of SET
event, order may or may not matter.  For example, in provisioning,
event order is critical – an object could not be modified before it
was created.  In other SET types, such as a token revocation, the
order of SETs for revoked tokens does not matter.  If however, the
event was described as a log-in or logged-out status for a user
subject, then order becomes important.</t>

<t>Profiling Specifications and implementers SHOULD take caution when
using timestamps such as “iat” to define order.  Distributed systems
will have some amount of clock-skew and thus time by itself will not
guarantee order.</t>

<t>Specifications profiling SET SHOULD define a mechanism for detecting
order or sequence of events.</t>

</section>
<section anchor="timing" title="Timing Issues">
<t>When SETs are delivered asynchronously and/or out-of-band with
respect to the original action that incurred the security event, it
is important to consider that a SET might be delivered to an Event
Receiver in advance or well behind the process that caused the event.
For example, a user having been required to logout and then log back
in again, may cause a logout SET to be issued that may arrive at the
same time as the user-agent accesses a web site having just logged-
in.  If timing is not handled properly, the effect would be to
erroneously treat the new user session as logged out.  Profiling
Specifications SHOULD be careful to anticipate timing and subject
selection information.  For example, it might be more appropriate to
cancel a “session” rather than a “user”.  Alternatively, the
specification could use timestamps that allows new sessions to be
started immediately after a stated logout event time.</t>

</section>
<section anchor="not-id-tokens" title="Distinguishing SETs from ID Tokens">
<t>Because <xref target="RFC7519"></xref> states that “all claims that are not understood by
implementations MUST be ignored”, there is a consideration that a SET
token might be confused with ID Token <xref target="OpenID.Core"></xref> if a SET is
mistakenly or intentionally used in a context requiring an ID Token.
If a SET could otherwise be interpreted as a valid ID Token (because
it includes the required claims for an ID Token and valid issuer and
audience claim values for an ID Token) then that SET profile MUST
require that the “exp” claim not be present in the SET.  Because
“exp” is a required claim in ID Tokens, valid ID Token
implementations will reject such a SET if presented as if it were an
ID Token.</t>

<t>Excluding “exp” from SETs that could otherwise be confused with ID
Tokens is actually defense in depth.  In any OpenID Connect contexts
in which an attacker could attempt to substitute a SET for an ID
Token, the SET would actually already be rejected as an ID Token
because it would not contain the correct “nonce” claim value for the
ID Token to be accepted in contexts for which substitution is
possible.</t>

<t>Note that the use of explicit typing, as described in Section 2.2,
will not achieve disambiguation between ID Tokens and SETs, as the ID
Token validation rules do not use the “typ” header parameter value.</t>

</section>
<section anchor="not-access-tokens" title="Distinguishing SETs from Access Tokens">
<t>OAuth 2.0 <xref target="RFC6749"></xref> defines access tokens as being opaque.
Nonetheless, some implementations implement access tokens as JWTs.
Because the structure of these JWTs is implementation-specific,
ensuring that a SET cannot be confused with such an access token is
therefore likewise, in general, implementation specific.
Nonetheless, it is recommended that SET profiles employ the following
strategies to prevent possible substitutions of SETs for access
tokens in contexts in which that might be possible:</t>

<t><list style="symbols">
  <t>Prohibit use of the “exp” claim, as is done to prevent ID Token
confusion.</t>
  <t>Where possible, use a separate “aud” claim value to distinguish
between the Event Receiver and the protected resource that is the
audience of an access token.</t>
  <t>Modify access token validation systems to check for the presence
of the “events” claim as a means to detect security event tokens.
This is particularly useful if the same endpoint may receive both
types of tokens.</t>
  <t>Employ explicit typing, as described in Section 2.2, and modify
access token validation systems to use the “typ” header parameter
value.</t>
</list></t>

</section>
<section anchor="not-other-jwts" title="Distinguishing SETs from other kinds of JWTs">
<t>JWTs are now being used in application areas beyond the identity
applications in which they first appeared.  For instance, the Session
Initiation Protocol (SIP) Via Header Field <xref target="RFC8055"></xref> and Personal
Assertion Token (PASSporT) <xref target="I-D.ietf-stir-passport"></xref> specifications
both define JWT profiles that use mostly or completely different sets
of claims than are used by ID Tokens.  If it would otherwise be
possible for an attacker to substitute a SET for one of these (or
other) kinds of JWTs, then the SET profile must be defined in such a
way that any substituted SET will result in its rejection when
validated as the intended kind of JWT.</t>

<t>The most direct way to prevent confusion is to employ explicit
typing, as described in Section 2.2, and modify applicable token
validation systems to use the “typ” header parameter value.  This
approach can be employed for new systems but may not be applicable to
existing systems.</t>

<t>Another way to ensure that a SET is not confused with another kind of
JWT is to have the JWT validation logic reject JWTs containing an
“events” claim unless the JWT is intended to be a SET.  This approach
can be employed for new systems but may not be applicable to existing
systems.</t>

<t>For many use cases, the simplest way to prevent substitution is
requiring that the SET not include claims that are required for the
kind of JWT that might be the target of an attack.  For example, for
<xref target="RFC8055"></xref>, the “sip_callid” claim could be omitted and for
<xref target="I-D.ietf-stir-passport"></xref>, the “orig” claim could be omitted.</t>

<t>In many contexts, simple measures such as these will accomplish the
task, should confusion otherwise even be possible.  Note that this
topic is being explored in a more general fashion in JSON Web Token
Best Current Practices <xref target="I-D.sheffer-oauth-jwt-bcp"></xref>.  The proposed
best practices in that draft may also be applicable for particular
SET profiles and use cases.</t>

</section>
</section>
<section anchor="privacy" title="Privacy Considerations">
<t>If a SET needs to be retained for audit purposes, JWS MAY be used to
provide verification of its authenticity.</t>

<t>Event Transmitters SHOULD attempt to specialize feeds so that the
content is targeted to the specific business and protocol needs of an
Event Receiver.</t>

<t>When sharing personally identifiable information or information that
is otherwise considered confidential to affected users, Event
Transmitters and Receivers MUST have the appropriate legal agreements
and user consent or terms of service in place.</t>

<t>The propagation of subject identifiers can be perceived as personally
identifiable information.  Where possible, Event Transmitters and
Receivers SHOULD devise approaches that prevent propagation – for
example, the passing of a hash value that requires the Event Receiver
to know the subject.</t>

</section>
<section anchor="iana" title="IANA Considerations">

<section anchor="iana-sit" title="SET Subject Identifier Types Registry">
<t>This section establishes the IANA “SET Subject Identifier Types” registry
// TODO</t>

</section>
<section anchor="iana-claims" title="JSON Web Token Claims Registration">
<t>This specification registers the “event” claim in the IANA “JSON Web Token
Claims” registry <xref target="IANA.JWT.Claims"></xref> established by <xref target="RFC7519"></xref>.</t>

<section anchor="registry-contents" title="Registry Contents">
<t><list style="symbols">
  <t>Claim Name: “event”</t>
  <t>Claim Description: Security Event Payload</t>
  <t>Change Controller: IESG</t>
  <t>Specification Document(s): Section 2.1 of [[ this specification ]]</t>
</list></t>

</section>
</section>
<section anchor="iana-media-type" title="Media Type Registration">

<section anchor="registry-contents-1" title="Registry Contents">
<t>This section registers the “application/secevent+jwt” media type
<xref target="RFC2046"></xref> in the “Media Types” registry <xref target="IANA.MediaTypes"></xref> in the
manner described in <xref target="RFC6838"></xref>, which can be used to indicate that the
content is a SET.</t>

<t><list style="symbols">
  <t>Type name: application</t>
  <t>Subtype name: secevent+jwt</t>
  <t>Required parameters: n/a</t>
  <t>Optional parameters: n/a</t>
  <t>Encoding considerations: 8bit; A SET is a JWT; JWT values are
encoded as a series of base64url-encoded values (some of which may
be the empty string) separated by period (‘.’) characters.</t>
  <t>Security considerations: See the Security Considerations section
of [[ this specification ]]</t>
  <t>Interoperability considerations: n/a</t>
  <t>Published specification: Section 2.2 of [[ this specification ]]</t>
  <t>Applications that use this media type: TBD</t>
  <t>Fragment identifier considerations: n/a</t>
  <t>Additional information:</t>
  <t>Magic number(s): n/a</t>
  <t>File extension(s): n/a</t>
  <t>Macintosh file type code(s): n/a</t>
  <t>Person &amp; email address to contact for further information:
Michael B. Jones, mbj@microsoft.com</t>
  <t>Intended usage: COMMON</t>
  <t>Restrictions on usage: none</t>
  <t>Author: Michael B. Jones, mbj@microsoft.com</t>
  <t>Change controller: IESG</t>
  <t>Provisional registration?  No</t>
</list></t>

</section>
</section>
</section>


  </middle>

  <back>

    <references title='Normative References'>

<reference anchor="IANA.JWT.Claims" target="http://www.iana.org/assignments/jwt">
  <front>
    <title>JSON Web Token Claims</title>
    <author >
      <organization>IANA</organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="IANA.MediaTypes" target="http://www.iana.org/assignments/media-types">
  <front>
    <title>Media Types</title>
    <author >
      <organization>IANA</organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>




<reference  anchor="RFC2119" target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC3986" target='https://www.rfc-editor.org/info/rfc3986'>
<front>
<title>Uniform Resource Identifier (URI): Generic Syntax</title>
<author initials='T.' surname='Berners-Lee' fullname='T. Berners-Lee'><organization /></author>
<author initials='R.' surname='Fielding' fullname='R. Fielding'><organization /></author>
<author initials='L.' surname='Masinter' fullname='L. Masinter'><organization /></author>
<date year='2005' month='January' />
<abstract><t>A Uniform Resource Identifier (URI) is a compact sequence of characters that identifies an abstract or physical resource.  This specification defines the generic URI syntax and a process for resolving URI references that might be in relative form, along with guidelines and security considerations for the use of URIs on the Internet.  The URI syntax defines a grammar that is a superset of all valid URIs, allowing an implementation to parse the common components of a URI reference without knowing the scheme-specific requirements of every possible identifier.  This specification does not define a generative grammar for URIs; that task is performed by the individual specifications of each URI scheme.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='STD' value='66'/>
<seriesInfo name='RFC' value='3986'/>
<seriesInfo name='DOI' value='10.17487/RFC3986'/>
</reference>



<reference  anchor="RFC5246" target='https://www.rfc-editor.org/info/rfc5246'>
<front>
<title>The Transport Layer Security (TLS) Protocol Version 1.2</title>
<author initials='T.' surname='Dierks' fullname='T. Dierks'><organization /></author>
<author initials='E.' surname='Rescorla' fullname='E. Rescorla'><organization /></author>
<date year='2008' month='August' />
<abstract><t>This document specifies Version 1.2 of the Transport Layer Security (TLS) protocol.  The TLS protocol provides communications security over the Internet.  The protocol allows client/server applications to communicate in a way that is designed to prevent eavesdropping, tampering, or message forgery.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5246'/>
<seriesInfo name='DOI' value='10.17487/RFC5246'/>
</reference>



<reference  anchor="RFC5322" target='https://www.rfc-editor.org/info/rfc5322'>
<front>
<title>Internet Message Format</title>
<author initials='P.' surname='Resnick' fullname='P. Resnick' role='editor'><organization /></author>
<date year='2008' month='October' />
<abstract><t>This document specifies the Internet Message Format (IMF), a syntax for text messages that are sent between computer users, within the framework of &quot;electronic mail&quot; messages.  This specification is a revision of Request For Comments (RFC) 2822, which itself superseded Request For Comments (RFC) 822, &quot;Standard for the Format of ARPA Internet Text Messages&quot;, updating it to reflect current practice and incorporating incremental changes that were specified in other RFCs.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5322'/>
<seriesInfo name='DOI' value='10.17487/RFC5322'/>
</reference>



<reference  anchor="RFC6125" target='https://www.rfc-editor.org/info/rfc6125'>
<front>
<title>Representation and Verification of Domain-Based Application Service Identity within Internet Public Key Infrastructure Using X.509 (PKIX) Certificates in the Context of Transport Layer Security (TLS)</title>
<author initials='P.' surname='Saint-Andre' fullname='P. Saint-Andre'><organization /></author>
<author initials='J.' surname='Hodges' fullname='J. Hodges'><organization /></author>
<date year='2011' month='March' />
<abstract><t>Many application technologies enable secure communication between two entities by means of Internet Public Key Infrastructure Using X.509 (PKIX) certificates in the context of Transport Layer Security (TLS). This document specifies procedures for representing and verifying the identity of application services in such interactions.   [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6125'/>
<seriesInfo name='DOI' value='10.17487/RFC6125'/>
</reference>



<reference  anchor="RFC6749" target='https://www.rfc-editor.org/info/rfc6749'>
<front>
<title>The OAuth 2.0 Authorization Framework</title>
<author initials='D.' surname='Hardt' fullname='D. Hardt' role='editor'><organization /></author>
<date year='2012' month='October' />
<abstract><t>The OAuth 2.0 authorization framework enables a third-party application to obtain limited access to an HTTP service, either on behalf of a resource owner by orchestrating an approval interaction between the resource owner and the HTTP service, or by allowing the third-party application to obtain access on its own behalf.  This specification replaces and obsoletes the OAuth 1.0 protocol described in RFC 5849.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6749'/>
<seriesInfo name='DOI' value='10.17487/RFC6749'/>
</reference>



<reference  anchor="RFC7519" target='https://www.rfc-editor.org/info/rfc7519'>
<front>
<title>JSON Web Token (JWT)</title>
<author initials='M.' surname='Jones' fullname='M. Jones'><organization /></author>
<author initials='J.' surname='Bradley' fullname='J. Bradley'><organization /></author>
<author initials='N.' surname='Sakimura' fullname='N. Sakimura'><organization /></author>
<date year='2015' month='May' />
<abstract><t>JSON Web Token (JWT) is a compact, URL-safe means of representing claims to be transferred between two parties.  The claims in a JWT are encoded as a JSON object that is used as the payload of a JSON Web Signature (JWS) structure or as the plaintext of a JSON Web Encryption (JWE) structure, enabling the claims to be digitally signed or integrity protected with a Message Authentication Code (MAC) and/or encrypted.</t></abstract>
</front>
<seriesInfo name='RFC' value='7519'/>
<seriesInfo name='DOI' value='10.17487/RFC7519'/>
</reference>



<reference  anchor="RFC7525" target='https://www.rfc-editor.org/info/rfc7525'>
<front>
<title>Recommendations for Secure Use of Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS)</title>
<author initials='Y.' surname='Sheffer' fullname='Y. Sheffer'><organization /></author>
<author initials='R.' surname='Holz' fullname='R. Holz'><organization /></author>
<author initials='P.' surname='Saint-Andre' fullname='P. Saint-Andre'><organization /></author>
<date year='2015' month='May' />
<abstract><t>Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS) are widely used to protect data exchanged over application protocols such as HTTP, SMTP, IMAP, POP, SIP, and XMPP.  Over the last few years, several serious attacks on TLS have emerged, including attacks on its most commonly used cipher suites and their modes of operation.  This document provides recommendations for improving the security of deployed services that use TLS and DTLS. The recommendations are applicable to the majority of use cases.</t></abstract>
</front>
<seriesInfo name='BCP' value='195'/>
<seriesInfo name='RFC' value='7525'/>
<seriesInfo name='DOI' value='10.17487/RFC7525'/>
</reference>


<reference anchor="E.164" target="http://www.itu.int/rec/T-REC-E.164-201011-I/en">
  <front>
    <title>The international public telecommunication numbering plan</title>
    <author >
      <organization>International Telecommunication Union</organization>
    </author>
    <date year="2010"/>
  </front>
</reference>


    </references>

    <references title='Informative References'>





<reference anchor="I-D.ietf-stir-passport">
<front>
<title>Personal Assertion Token (PASSporT)</title>

<author initials='C' surname='Wendt' fullname='Chris Wendt'>
    <organization />
</author>

<author initials='J' surname='Peterson' fullname='Jon Peterson'>
    <organization />
</author>

<date month='February' day='9' year='2017' />

<abstract><t>This document defines a method for creating and validating a token that cryptographically verifies an originating identity, or more generally a URI or telephone number representing the originator of personal communications.  The PASSporT token is cryptographically signed to protect the integrity of the identity the originator and to verify the assertion of the identity information at the destination. The cryptographic signature is defined with the intention that it can confidently verify the originating persona even when the signature is sent to the destination party over an insecure channel.  PASSporT is particularly useful for many personal communications applications over IP networks and other multi-hop interconnection scenarios where the originating and destination parties may not have a direct trusted relationship.</t></abstract>

</front>

<seriesInfo name='Internet-Draft' value='draft-ietf-stir-passport-11' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-ietf-stir-passport-11.txt' />
</reference>



<reference anchor="I-D.sheffer-oauth-jwt-bcp">
<front>
<title>JSON Web Token Best Current Practices</title>

<author initials='Y' surname='Sheffer' fullname='Yaron Sheffer'>
    <organization />
</author>

<author initials='D' surname='Hardt' fullname='Dick Hardt'>
    <organization />
</author>

<author initials='M' surname='Jones' fullname='Michael Jones'>
    <organization />
</author>

<date month='July' day='3' year='2017' />

<abstract><t>JSON Web Tokens, also known as JWTs [RFC7519], are URL-safe JSON- based security tokens that contain a set of claims that can be signed and/or encrypted.  JWTs are being widely used and deployed as a simple security token format in numerous protocols and applications, both in the area of digital identity, and in other application areas. The goal of this Best Current Practices document is to provide actionable guidance leading to secure implementation and deployment of JWTs.</t></abstract>

</front>

<seriesInfo name='Internet-Draft' value='draft-sheffer-oauth-jwt-bcp-01' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-sheffer-oauth-jwt-bcp-01.txt' />
</reference>


<reference anchor="OpenID.Core" target="http://openid.net/specs/openid-connect-core-1_0.html">
  <front>
    <title>OpenID Connect Core 1.0</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>




<reference  anchor="RFC2046" target='https://www.rfc-editor.org/info/rfc2046'>
<front>
<title>Multipurpose Internet Mail Extensions (MIME) Part Two: Media Types</title>
<author initials='N.' surname='Freed' fullname='N. Freed'><organization /></author>
<author initials='N.' surname='Borenstein' fullname='N. Borenstein'><organization /></author>
<date year='1996' month='November' />
<abstract><t>This second document defines the general structure of the MIME media typing system and defines an initial set of media types.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='2046'/>
<seriesInfo name='DOI' value='10.17487/RFC2046'/>
</reference>



<reference  anchor="RFC6838" target='https://www.rfc-editor.org/info/rfc6838'>
<front>
<title>Media Type Specifications and Registration Procedures</title>
<author initials='N.' surname='Freed' fullname='N. Freed'><organization /></author>
<author initials='J.' surname='Klensin' fullname='J. Klensin'><organization /></author>
<author initials='T.' surname='Hansen' fullname='T. Hansen'><organization /></author>
<date year='2013' month='January' />
<abstract><t>This document defines procedures for the specification and registration of media types for use in HTTP, MIME, and other Internet protocols.  This memo documents an Internet Best Current Practice.</t></abstract>
</front>
<seriesInfo name='BCP' value='13'/>
<seriesInfo name='RFC' value='6838'/>
<seriesInfo name='DOI' value='10.17487/RFC6838'/>
</reference>



<reference  anchor="RFC7515" target='https://www.rfc-editor.org/info/rfc7515'>
<front>
<title>JSON Web Signature (JWS)</title>
<author initials='M.' surname='Jones' fullname='M. Jones'><organization /></author>
<author initials='J.' surname='Bradley' fullname='J. Bradley'><organization /></author>
<author initials='N.' surname='Sakimura' fullname='N. Sakimura'><organization /></author>
<date year='2015' month='May' />
<abstract><t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures.  Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification.  Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t></abstract>
</front>
<seriesInfo name='RFC' value='7515'/>
<seriesInfo name='DOI' value='10.17487/RFC7515'/>
</reference>



<reference  anchor="RFC7516" target='https://www.rfc-editor.org/info/rfc7516'>
<front>
<title>JSON Web Encryption (JWE)</title>
<author initials='M.' surname='Jones' fullname='M. Jones'><organization /></author>
<author initials='J.' surname='Hildebrand' fullname='J. Hildebrand'><organization /></author>
<date year='2015' month='May' />
<abstract><t>JSON Web Encryption (JWE) represents encrypted content using JSON-based data structures.  Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and IANA registries defined by that specification.  Related digital signature and Message Authentication Code (MAC) capabilities are described in the separate JSON Web Signature (JWS) specification.</t></abstract>
</front>
<seriesInfo name='RFC' value='7516'/>
<seriesInfo name='DOI' value='10.17487/RFC7516'/>
</reference>



<reference  anchor="RFC8055" target='https://www.rfc-editor.org/info/rfc8055'>
<front>
<title>Session Initiation Protocol (SIP) Via Header Field Parameter to Indicate Received Realm</title>
<author initials='C.' surname='Holmberg' fullname='C. Holmberg'><organization /></author>
<author initials='Y.' surname='Jiang' fullname='Y. Jiang'><organization /></author>
<date year='2017' month='January' />
<abstract><t>This specification defines a new Session Initiation Protocol (SIP) Via header field parameter, 'received-realm', which allows a SIP entity acting as an entry point to a transit network to indicate from which adjacent upstream network a SIP request is received by using a network realm value associated with the adjacent network.</t></abstract>
</front>
<seriesInfo name='RFC' value='8055'/>
<seriesInfo name='DOI' value='10.17487/RFC8055'/>
</reference>




    </references>


<section anchor="ack" title="Acknowledgments">
<t>The editors would like to thank the participants on the IETF secevent
mailing list and related working groups for their support of this
specification.</t>

</section>


  </back>

<!-- ##markdown-source:
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

-->

</rfc>

