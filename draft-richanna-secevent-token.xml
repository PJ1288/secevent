<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.3 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>

<rfc ipr="trust200902" docName="draft-richanna-secevent-token-00" category="info">

  <front>
    <title abbrev="secevent-token">Security Event Token (SET)</title>

    <author initials="A." surname="Backman" fullname="Annabelle Backman">
      <organization>Amazon</organization>
      <address>
        <email>richanna@amazon.com</email>
      </address>
    </author>
    <author initials="P." surname="Hunt" fullname="Phil Hunt">
      <organization>Oracle</organization>
      <address>
        <email>phil.hunt@yahoo.com</email>
      </address>
    </author>
    <author initials="W." surname="Denniss" fullname="William Denniss">
      <organization>Google</organization>
      <address>
        <email>wdenniss@google.com</email>
      </address>
    </author>
    <author initials="M." surname="Ansari" fullname="Morteza Ansari">
      <organization>Cisco</organization>
      <address>
        <email>morteza.ansari@cisco.com</email>
      </address>
    </author>
    <author initials="M." surname="Jones" fullname="Michael B. Jones">
      <organization>Microsoft</organization>
      <address>
        <email>mbj@microsoft.com</email>
        <uri>http://self-issued.info/</uri>
      </address>
    </author>

    <date year="2017" month="November" day="14"/>

    <area>Security</area>
    <workgroup>secevent</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This specification defines the Security Event Token, which may be
distributed via a protocol such as HTTP.  The Security Event Token
(SET) specification profiles the JSON Web Token (JWT), which can be
optionally signed and/or encrypted.  A SET describes a statement of
fact from the perspective of an issuer that it intends to share with
one or more receivers.</t>



    </abstract>


  </front>

  <middle>


<section anchor="intro" title="Introduction">
<t>This specification defines an extensible Security Event Token (SET)
format which may be exchanged using protocols such as HTTP.  The
specification builds on the JSON Web Token (JWT) format <xref target="RFC7519"></xref> in
order to provide a self-contained token that can be optionally signed
using JSON Web Signature (JWS) <xref target="RFC7515"></xref> and/or encrypted using JSON
Web Encryption (JWE) <xref target="RFC7516"></xref>.</t>

<t>This specification profiles the use of JWT for the purpose of issuing
security event tokens (SETs).  This specification defines a base
format upon which profiling specifications define actual events and
their meanings.  Unless otherwise specified, this specification uses
non-normative example events intended to demonstrate how events may
be constructed.</t>

<t>This specification is scoped to security and identity related events.
While security event tokens may be used for other purposes, the
specification only considers security and privacy concerns relevant
to identity and personal information.</t>

<t>Security Events are not commands issued between parties.  A security
event is a statement of fact from the perspective of an issuer about
the state of a security subject (e.g., a web resource, token, IP
address, the issuer itself) that the issuer controls or is aware of,
that has changed in some way (explicitly or implicitly).  A security
subject MAY be permanent (e.g., a user account) or temporary (e.g.,
an HTTP session) in nature.  A state change could describe a direct
change of entity state, an implicit change of state or other higher-
level security statements such as:</t>

<t><list style="symbols">
  <t>The creation, modification, removal of a resource.</t>
  <t>The resetting or suspension of an account.</t>
  <t>The revocation of a security token prior to its expiry.</t>
  <t>The logout of a user session.  Or,</t>
  <t>A cumulative conclusion such as to indicate that a user has taken
over an email identifier that may have been used in the past by
another user.</t>
</list></t>

<t>While subject state changes are often triggered by a user-agent or
security-subsystem, the issuance and transmission of an event often
occurs asynchronously and in a back-channel to the action which
caused the change that generated the security event.  Subsequently,
an Event Receiver, having received a SET, validates and interprets
the received SET and takes its own independent actions, if any.  For
example, having been informed of a personal identifier being
associated with a different security subject (e.g., an email address
is being used by someone else), the Event Receiver may choose to
ensure that the new user is not granted access to resources
associated with the previous user.  Or, the Event Receiver may not
have any relationship with the subject, and no action is taken.</t>

<t>While Event Receivers will often take actions upon receiving SETs,
security events cannot be assumed to be commands or requests.  The
intent of this specification is to define a way of exchanging
statements of fact that Event Receivers may interpret for their own
purposes.  As such, SETs have no capability for error signaling other
to ensure the validation of a received SET.</t>

<section anchor="conv" title="Notational Conventions">
<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”,
“SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and
“OPTIONAL” in this document are to be interpreted as described in
<xref target="RFC2119"></xref>.  These keywords are capitalized when used to unambiguously
specify requirements of the protocol or application features and
behavior that affect the inter-operability and security of
implementations.  When these words are not capitalized, they are
meant in their natural-language sense.</t>

<t>For purposes of readability, examples are not URL encoded.
Implementers MUST percent encode URLs as described in Section 2.1 of
<xref target="RFC3986"></xref>.</t>

<t>Throughout this document, all figures MAY contain spaces and extra
line-wrapping for readability and space limitations.  Similarly, some
URIs contained within examples have been shortened for space and
readability reasons.</t>

</section>
<section anchor="defn" title="Definitions">
<t>The following definitions are used with SETs:</t>

<t><list style="hanging">
  <t hangText='Security Event Token (SET)'><vspace blankLines='0'/>
  A SET is a JWT <xref target="RFC7519"></xref> that contains an event payload describing
a security event.</t>
  <t hangText='Event Transmitter'><vspace blankLines='0'/>
  A service provider that delivers SETs to other providers known as
Event Receivers.</t>
  <t hangText='Event Receiver'><vspace blankLines='0'/>
  An Event Receiver is an entity that receives SETs through some
distribution method.  An Event Receiver is the same entity
referred as “recipient” or “receiver” in and related
specifications.  <xref target="RFC7519"></xref></t>
  <t hangText='Subject'><vspace blankLines='0'/>
  A SET describes an event or state change that has occurred about a
Subject.  A Subject may be a principal (e.g., Section 4.1.2
<xref target="RFC7519"></xref>), a web resource, an entity such as an IP address, or
the issuer itself that a SET might reference.</t>
  <t hangText='Profiling Specification'><vspace blankLines='0'/>
  A specification that uses the SET Token specification to define one or
more event types and the associated claims included.</t>
</list></t>

</section>
</section>
<section anchor="set" title="The Security Event Token (SET)">
<t>A SET is a data structure that encodes an “event payload” describing a
security event, wrapped in an “envelope” providing metadata and context
for the security event.  The SET envelope is a JWT Claims Set as defined in
<xref target="RFC7519"></xref>, consisting of a JSON object containing a set of claims.  The
event payload is a JSON object contained within the SET envelope, itself
containing claims that express information about the event, e.g. the type
of event, the subject of the event, and other information defined in a
Profiling Specification.</t>

<t>This specification defines a core set of claims for use in SET envelopes
and event payloads, however Profiling Specifications MAY define additional
claims of both types.  It is RECOMMENDED that Profiling Specifications
define claims to be used in the event payload rather than the envelope.  If
a Profiling Specification does define envelope claims, those claims SHOULD
be registered in the JWT Token Claims Registry <xref target="IANA.JWT.Claims"></xref> or have
Public Claim Names as defined in Section 4.2 of <xref target="RFC7519"></xref>.</t>

<section anchor="claims" title="SET Claims">
<t>This specification profiles the following claims defined in <xref target="RFC7519"></xref> for
use in the SET envelope:</t>

<t><list style="hanging">
  <t hangText='iss'><vspace blankLines='0'/>
  A case-sensitive string identifying the principal that issued the SET,
as defined by Section 4.1.1 of <xref target="RFC7519"></xref>.  This claim is REQUIRED.</t>
  <t hangText='aud'><vspace blankLines='0'/>
  A case-sensitive string or array of case-sensitive strings identifying
the audience for the SET, as defined by Section 4.1.3 of <xref target="RFC7519"></xref>.  This
claim is RECOMMENDED.</t>
  <t hangText='exp'><vspace blankLines='0'/>
  As defined by Section 4.1.4 of <xref target="RFC7519"></xref>, this claim is the time after
which the JWT MUST NOT be accepted for processing.  In the context of a SET
however, this notion does not apply since a SET reflects something that
has already been processed and is historical in nature.  Use of this claim
is NOT RECOMMENDED.</t>
  <t hangText='iat'><vspace blankLines='0'/>
  A value identifying the time at which the SET was issued, as defined by
Section 4.1.6 of <xref target="RFC7519"></xref>.  This claim is REQUIRED.</t>
  <t hangText='jti'><vspace blankLines='0'/>
  A unique identifier for an event, as defined by Section 4.1.7 of
<xref target="RFC7519"></xref>.  This claim is REQUIRED.</t>
</list></t>

<t>This specification defines the following new claims for use in the SET
envelope:</t>

<t><list style="hanging">
  <t hangText='event'><vspace blankLines='0'/>
  A JSON object known as the “event payload”, whose contents identify the
type of event contained within the SET and contain additional information 
defined as part of an event type definition in a Profiling Specification.<vspace />
This specification defines the following claims for use in event payloads:

      <list style="hanging">
        <t hangText='event_type'><vspace blankLines='0'/>
        A string containing a URI that uniquely identifies an event type
defined by a Profiling Specification.  This claim is REQUIRED.</t>
        <t hangText='sub'><vspace blankLines='0'/>
        A Subject Identifier that identifies the subject of the event.  (See:
<xref target="subject"></xref>) This claim is RECOMMENDED.</t>
      </list>
  </t>
  <t hangText='toe'><vspace blankLines='0'/>
  A number identifying the date and time at which the event is believed to
have occurred or will occur in the future.  Its value MUST take the form of
a NumericDate value, as defined in Section 2 of <xref target="RFC7519"></xref>.  This claim is
RECOMMENDED.  Profiling Specifications MAY indicate ways to determine the
event time when the “toe” claim is omitted (such as using the value of the
“iat” claim).</t>
  <t hangText='txn'><vspace blankLines='0'/>
  A string value that represents a unique transaction identifier.  In cases
where multiple SETs are issued containing different events, the
transaction identifier MAY be used to correlate the SETs to the same
originating event or stateful change.  This claim is OPTIONAL.</t>
</list></t>

<t>Both the SET envelope and event payload MAY contain additional claims, such
as those defined in a Profiling Specification.  The format and meaning of
these claims is out of scope of this specification.  Implementations SHOULD
ignore any claims in the SET envelope or event payload that they do not
understand.</t>

<t>The following is a non-normative example showing a SET envelope expressing
a hypothetical event with two additional claims in the event payload:</t>

<figure title="Example SET With Event Claims In Payload" anchor="figset"><artwork><![CDATA[
{
  "jti": "3d0c3cf797584bd193bd0fb1bd4e7d30",
  "iss": "https://transmitter.example.com",
  "aud": [ "https://receiver.example.com" ],
  "iat": 1458496025,
  "toe": 1458492425,
  "txn": "5bb4ddd2-3e77-4e0b-a406-03c8fdc287c2",
  "event": {
    "event_type": "https://secevent.example.com/example_event",
    "sub": {
      "identifier_type": "urn:ietf:params:secevent:subject:email",
      "email": "user@example.com"
    },
    "claim_1": "foo",
    "claim_2": "bar"
  }
}
]]></artwork></figure>

<t>The payload in this example contains the following:</t>

<t><list style="symbols">
  <t>An “event_type” claim whose value is the URI identifying the
hypothetical event type.</t>
  <t>A “sub” claim whose value identifies a subject via email address.</t>
  <t>Two claims “claim_1” and “claim_2” that are defined by the hypothetical 
event type’s Profiling Specification.</t>
</list></t>

</section>
<section anchor="subject" title="Subject Identifiers">
<t>In many cases, it is necessary to explicitly identify the subject of the
security even within a SET.  The Subject Identifier provides a common
syntax for expressing subject identity within a SET.  A Subject Identifier
is a JSON object representing an instance of a Subject Identifier Type.  A
Subject Identifier Type defines a set of one or more claims about a subject
that when taken together collectively identify that subject.  Subject
Identifier Types MUST be registered in the IANA “SET Subject Identifier
Types” registry established by <xref target="iana-sit"></xref>.</t>

<t>A Subject Identifier MUST contain an “identifier_type” claim, whose value is
the URN identifying the Subject Identifier Type being represented by the
Subject Identifier.  All other claims within the Subject Identifier MUST be
defined by the Subject Identifier Type.</t>

<t>The Subject Identifier Types defined below are registered in the IANA “SET
Subject Identifier Types” registry established by <xref target="iana-sit"></xref>.</t>

<section anchor="email-subject-identifier-type" title="Email Subject Identifier Type">
<t>The “Email” Subject Identifier Type contains a single claim:</t>

<t><list style="hanging">
  <t hangText='email'><vspace blankLines='0'/>
  A string containing an email address.  Its value SHOULD conform to
<xref target="RFC5322"></xref>.  This claim is REQUIRED.</t>
</list></t>

<t>The following is a non-normative example of a Subject Identifier
representing an instance of the Email Subject Identifier Type:</t>

<figure title="An Instance of the Email Subject Identifier Type" anchor="figemail"><artwork><![CDATA[
{
  "identifier_type": "urn:ietf:params:secevent:subject:email",
  "email": "user@example.com"
}
]]></artwork></figure>

</section>
<section anchor="phone-subject-identifier-type" title="Phone Subject Identifier Type">
<t>The “Phone” Subject Identifier Type contains a single claim:</t>

<t><list style="hanging">
  <t hangText='phone_number'><vspace blankLines='0'/>
  A string containing a phone number.  It SHOULD be formatted according to
<xref target="E.164"></xref>.  This claim is REQUIRED.</t>
</list></t>

<t>The following is a non-normative example of a Subject Identifier
representing an instance of the Phone Subject Identifier Type:</t>

<figure title="An Instance of the Phone Subject Identifier Type" anchor="figphone"><artwork><![CDATA[
{
  "identifier_type": "urn:ietf:params:secevent:subject:phone",
  "phone_number": "+1 206 555 0123"
}
]]></artwork></figure>

</section>
<section anchor="issuer-and-subject-subject-identifier-type" title="Issuer and Subject Subject Identifier Type">
<t>The “Issuer and Subject” Subject Identifier Type contains two claims:</t>

<t><list style="hanging">
  <t hangText='iss'><vspace blankLines='0'/>
  A case-sensitive string identifying the principal who is responsible for
assignment of the identifier in the “sub” claim.  This claim MUST adhere to
the format of the “iss” claim defined by Section 4.1.1 of <xref target="RFC7519"></xref>.  This
claim is REQUIRED.</t>
  <t hangText='sub'><vspace blankLines='0'/>
  A case-sensitive string containing an identifier that identifies a subject
within the context of the principal identified by the “iss” claim.  This
claim MUST adhere to the format of the “sub” claim defined by Section 4.1.2
of <xref target="RFC7519"></xref>.  This claim is REQUIRED.</t>
</list></t>

<t>The following is a non-normative example of a Subject Identifier
representing an instance of the Issuer and Subject Subject Identifier Type:</t>

<figure title="An Instance of the Issuer and Subject Subject Identifier Type" anchor="figisssub"><artwork><![CDATA[
{
  "identifier_type": "urn:ietf:params:secevent:subject:iss-sub",
  "iss": "http://id.example.com",
  "sub": "example.user.1234"
}
]]></artwork></figure>

</section>
</section>
<section anchor="set-type" title="Explicit Typing of SETs">
<t>This specification registers the “application/secevent+jwt” media
type.  SETs MAY include this media type in the “typ” header parameter of
the JWT containing the SET to explicitly declare that the JWT is a SET.
This MUST be included if the SET could be used in an application context
in which it could be confused with other kinds of JWTs.  Profiling
Specifications MAY declare that this is REQUIRED for SETs containing events
defined by the Profiling Specification.</t>

<t>Per the definition of “typ” in Section 4.1.9 of <xref target="RFC7515"></xref>, it is
RECOMMENDED that the “application/” prefix be omitted.  Therefore,
the “typ” value used SHOULD be “secevent+jwt”.</t>

</section>
<section anchor="construction" title="Security Event Token Construction">
<t>A SET is a JWT, and therefore it’s construction follows that described in
<xref target="RFC7519"></xref>.</t>

<t>While this specification uses JWT to convey a SET, implementers SHALL
NOT use SETs to convey authentication or authorization assertions.</t>

<t>The following is the example JWT Claims Set from <xref target="figset"></xref>, expressed as
an unsigned JWT.  The JOSE Header is:</t>

<figure><artwork><![CDATA[
{"typ":"secevent+jwt","alg":"none"}
]]></artwork></figure>

<t>Base64url encoding of the octets of the UTF-8 representation of the
JOSE Header yields:</t>

<figure><artwork><![CDATA[
eyJ0eXAiOiJzZWNldmVudCtqd3QiLCJhbGciOiJub25lIn0
]]></artwork></figure>

<t>The example JWT Claims Set is encoded as follows:</t>

<figure><artwork><![CDATA[
ewogICAgICJqdGkiOiAiM2QwYzNjZjc5NzU4NGJkMTkzYmQwZmIxYmQ0ZTdkMzAiLAog
ICAgICJpc3MiOiAiaHR0cHM6Ly90cmFuc21pdHRlci5leGFtcGxlLmNvbSIsCiAgICAg
ImF1ZCI6IFsgImh0dHBzOi8vcmVjZWl2ZXIuZXhhbXBsZS5jb20iIF0sCiAgICAgImlh
dCI6IDE0NTg0OTYwMjUsCiAgICAgInRvZSI6IDE0NTg0OTI0MjUsCiAgICAgInR4biI6
ICI1YmI0ZGRkMi0zZTc3LTRlMGItYTQwNi0wM2M4ZmRjMjg3YzIiLAogICAgICJldmVu
dCI6IHsKICAgICAgICJldmVudF90eXBlIjogImh0dHBzOi8vc2VjZXZlbnQuZXhhbXBs
ZS5jb20vZXhhbXBsZV9ldmVudCIsCiAgICAgICAic3ViIjogewogICAgICAgICAiaWRl
bnRpZmllcl90eXBlIjogInVybjppZXRmOnBhcmFtczpzZWNldmVudDpzdWJqZWN0OmVt
YWlsIiwKICAgICAgICAgImVtYWlsIjogInVzZXJAZXhhbXBsZS5jb20iCiAgICAgICB9
LAogICAgICAgImNsYWltXzEiOiAiZm9vIiwKICAgICAgICJjbGFpbV8yIjogImJhciIK
ICAgICB9CiAgIH0=
]]></artwork></figure>

<t>The encoded JWS signature is the empty string.  Concatenating the
parts yields the following complete JWT:</t>

<figure title="Example Unsecured Security Event Token" anchor="figsetencoded"><artwork><![CDATA[
eyJ0eXAiOiJzZWNldmVudCtqd3QiLCJhbGciOiJub25lIn0.
ewogICAgICJqdGkiOiAiM2QwYzNjZjc5NzU4NGJkMTkzYmQwZmIxYmQ0ZTdkMzAiLAog
ICAgICJpc3MiOiAiaHR0cHM6Ly90cmFuc21pdHRlci5leGFtcGxlLmNvbSIsCiAgICAg
ImF1ZCI6IFsgImh0dHBzOi8vcmVjZWl2ZXIuZXhhbXBsZS5jb20iIF0sCiAgICAgImlh
dCI6IDE0NTg0OTYwMjUsCiAgICAgInRvZSI6IDE0NTg0OTI0MjUsCiAgICAgInR4biI6
ICI1YmI0ZGRkMi0zZTc3LTRlMGItYTQwNi0wM2M4ZmRjMjg3YzIiLAogICAgICJldmVu
dCI6IHsKICAgICAgICJldmVudF90eXBlIjogImh0dHBzOi8vc2VjZXZlbnQuZXhhbXBs
ZS5jb20vZXhhbXBsZV9ldmVudCIsCiAgICAgICAic3ViIjogewogICAgICAgICAiaWRl
bnRpZmllcl90eXBlIjogInVybjppZXRmOnBhcmFtczpzZWNldmVudDpzdWJqZWN0OmVt
YWlsIiwKICAgICAgICAgImVtYWlsIjogInVzZXJAZXhhbXBsZS5jb20iCiAgICAgICB9
LAogICAgICAgImNsYWltXzEiOiAiZm9vIiwKICAgICAgICJjbGFpbV8yIjogImJhciIK
ICAgICB9CiAgIH0=.
]]></artwork></figure>

<t>For the purpose of a simpler example in Figure 5, an unsecured token
was shown.  When SETs are not signed or encrypted, the Event Receiver
MUST employ other mechanisms such as TLS and HTTP to provide
integrity, confidentiality, and issuer validation, as needed by the
application.</t>

<t>When validation (i.e. auditing), or additional transmission security
is required, JWS signing and/or JWE encryption MAY be used.  To
create and or validate a signed and/or encrypted SET, follow the
instructions in Section 7 of <xref target="RFC7519"></xref>.</t>

</section>
</section>
<section anchor="related-events" title="Related Events">
<t>In order to accommodate use cases that require communicating multiple
related security events to an Event Receiver, this section defines the
“Related Events” event type. A Related Events event is essentially a
container for two or more events that are related to one another, in
that they are all related to the same “real world” event or state
change. The Related Events event SHOULD NOT be used to combine
unrelated events into a single set, and MUST NOT be used as a general
purpose batch transmission mechanism. Profiling Specifications and/or
implementers who desire an event grouping mechanism with these or
other semantics are encouraged to profile this specification and
define additional event types for those use cases.
/* ed.: Trying to minimize ambiguity around semantics of event grouping. */</t>

<t>The URN for the Related Events event is “urn:ietf:secevents:related_events”.</t>

<t>The Related Events event has a single additional event payload claim:</t>

<t><list style="hanging">
  <t hangText='events'><vspace blankLines='0'/>
  An array of event payloads, as defined in this document.</t>
</list></t>

<t>For all purposes, the Related Events event’s envelope is considered the
envelope for all events described in the “events” payload claim. SETs
containing a Related Events event MUST comply with the requirements set by
the Profiling Specifications for every event described in the “events”
payload claim. If two or more events’ requirements contradict one another,
those events MUST NOT be combined within the same Related Events event.
/* ed.: Cutting down on opportunities for confusing, impossible SETs. */</t>

<t>All events described in the “events” claim MUST express their subjects in
such a way as to not conflict with the other events. They do not have to
identify their subjects in the same way; two events that support disjoint
sets of Subject Identifier Types but specify their subject using the “sub”
event payload claim defined in <xref target="claims"></xref> can coexist within a Related
Events event, as the subject for each event would reside within the
respective event’s event payload. However, if both events specified their
subject using the “sub” envelope claim, they would be in conflict with one
another, as it would not be possible to assign a value to the “sub” envelope
claim that satisfies the requirements of both events’ Profiling
Specifications.
/* ed.: This is just a specific case of above paragraph, but sub has been a
sticking point so calling it out seems like a good idea. */</t>

<t>The “sub” event payload claim MUST NOT be used with the Related Events
event. 
/* ed.: Trying to avoid complicated “find the subject” logic */</t>

<t>The following is a non-normative example of a SET containing a Related
Events event:</t>

<figure title="Example SET Containing A Related Events Event" anchor="figrelated"><artwork><![CDATA[
{
  "jti": "1c0038c2-02db-40de-ad50-122a64724166",
  "iss": "https://transmitter.example.com",
  "aud": [ "https://receiver.example.com" ],
  "iat": 1510666261,
  "toe": 1510662661,
  "txn": "0d3c97f4-82d3-4fb8-ac67-09c62a8fcda2",
  "event": {
    "event_type": "urn:ietf:secevent:related_events",
    "sub": {
      "identifier_type": "urn:ietf:params:secevent:subject:email",
      "email": "user@example.com"
    },
    "events": [
      {
        "event_type": "http://specs.example.com/set_profile/event_1"
      },
      {
        "event_type": "http://specs.example.com/set_profile/event_2"
      }
    ]
  }
}
]]></artwork></figure>

</section>
<section anchor="profile-req" title="Requirements for SET Profiles">
<t>Profiling Specifications for SETs define the syntax and semantics of
SETs conforming to that SET profile and rules for validating those
SETs.  The syntax defined by Profiling Specifications includes what
SET envelope and event payload claims are used by SETs expressing and
event defined by the profile.</t>

<t>Defining the semantics of the SET contents for SETs utilizing the
profile is equally important.  Possibly most important is defining
the procedures used to validate the SET issuer and to obtain the keys
controlled by the issuer that were used for cryptographic operations
used in the JWT representing the SET.  For instance, some profiles
may define an algorithm for retrieving the SET issuer’s keys that
uses the “iss” claim value as its input.  Likewise, if the profile
allows (or requires) that the JWT be unsecured, the means by which
the integrity of the JWT is ensured MUST be specified.</t>

<t>Profiling Specifications MUST define how the event Subject is
identified in the SET, as well as how to differentiate between the
event Subject’s Issuer and the SET Issuer, if applicable.  It is NOT
RECOMMENDED for Profiling Specifications to use the “sub” claim 
defined in <xref target="RFC7519"></xref> in cases in which the Subject is not globally
unique and has a different Issuer from the SET itself.</t>

<t>Profiling Specifications MUST clearly specify the steps that a
recipient of a SET utilizing that profile MUST perform to validate
that the SET is both syntactically and semantically valid.</t>

<section anchor="extensions" title="Extending Events">
<t>As needs change and new use cases develop, it may be desirable to augment
existing event definitions with new claims. To enable this, Profiling
Specifications MAY define extensions to existing event types. An event
extension consists of a set of one or more event payload claim definitions
that provide the extra information expressed by the extension, and a set of
URIs that identify the event types to which the event extension may be
applied.
/* ed.: Is it necessary to identify which event extensions are being used on
an event? Is “duck typing” good enough here? */</t>

<t>Event extensions SHOULD be defined in documents that are produced through
the same standardization process as the documents that define the event
types being extended. For example, if an event type is defined in an RFC
produced by an IETF working group, event extensions that apply to that event
SHOULD be defined by that same working group. This helps to minimize the
possibility of redundant or conflicting event extensions, and ensure that
event extension creators have the proper context for the events they are
extending.
/* ed.: Guidance on avoiding name conflict with extension claims: put it
here, or in an implementation considerations section? */</t>

</section>
</section>
<section anchor="security" title="Security Considerations">

<section anchor="c-and-i" title="Confidentiality and Integrity">
<t>SETs may often contain sensitive information.  Therefore, methods for
distribution of events SHOULD require the use of a transport-layer
security mechanism when distributing events.  Parties MUST support
TLS 1.2 <xref target="RFC5246"></xref> and MAY support additional transport-layer
mechanisms meeting its security requirements.  When using TLS, the
client MUST perform a TLS/SSL server certificate check, per
<xref target="RFC6125"></xref>.  Implementation security considerations for TLS can be
found in “Recommendations for Secure Use of TLS and DTLS” <xref target="RFC7525"></xref>.</t>

<t>Security Events distributed through third-parties or that carry
personally identifiable information, SHOULD be encrypted using JWE
<xref target="RFC7516"></xref> or secured for confidentiality by other means.</t>

<t>Unless integrity of the JWT is ensured by other means, it MUST be
signed using JWS <xref target="RFC7515"></xref> so that individual events can be
authenticated and validated by the Event Receiver.</t>

</section>
<section anchor="delivery" title="Delivery">
<t>This specification does not define a delivery mechanism by itself.
In addition to confidentiality and integrity (discussed above),
implementers and Profiling Specifications MUST consider the
consequences of delivery mechanisms that are not secure and/or not
assured.  For example, while a SET may be end-to-end secured using
JWE encrypted SETs, without TLS there is no assurance that the
correct endpoint received the SET and that it could be successfully
processed.</t>

</section>
<section anchor="sequencing" title="Sequencing">
<t>As defined in this specification, there is no defined way to order
multiple SETs in a sequence.  Depending on the type and nature of SET
event, order may or may not matter.  For example, in provisioning,
event order is critical – an object could not be modified before it
was created.  In other SET types, such as a token revocation, the
order of SETs for revoked tokens does not matter.  If however, the
event was described as a log-in or logged-out status for a user
subject, then order becomes important.</t>

<t>Profiling Specifications and implementers SHOULD take caution when
using timestamps such as “iat” to define order.  Distributed systems
will have some amount of clock-skew and thus time by itself will not
guarantee order.</t>

<t>Specifications profiling SET SHOULD define a mechanism for detecting
order or sequence of events.  For example, the “txn” claim could
contain an ordered value (e.g., a counter) that the issuer defines.</t>

</section>
<section anchor="timing" title="Timing Issues">
<t>When SETs are delivered asynchronously and/or out-of-band with
respect to the original action that incurred the security event, it
is important to consider that a SET might be delivered to an Event
Receiver in advance or well behind the process that caused the event.
For example, a user having been required to logout and then log back
in again, may cause a logout SET to be issued that may arrive at the
same time as the user-agent accesses a web site having just logged-
in.  If timing is not handled properly, the effect would be to
erroneously treat the new user session as logged out.  Profiling
Specifications SHOULD be careful to anticipate timing and subject
selection information.  For example, it might be more appropriate to
cancel a “session” rather than a “user”.  Alternatively, the
specification could use timestamps that allows new sessions to be
started immediately after a stated logout event time.</t>

</section>
<section anchor="not-id-tokens" title="Distinguishing SETs from ID Tokens">
<t>Because <xref target="RFC7519"></xref> states that “all claims that are not understood by
implementations MUST be ignored”, there is a consideration that a SET
token might be confused with ID Token <xref target="OpenID.Core"></xref> if a SET is
mistakenly or intentionally used in a context requiring an ID Token.
If a SET could otherwise be interpreted as a valid ID Token (because
it includes the required claims for an ID Token and valid issuer and
audience claim values for an ID Token) then that SET profile MUST
require that the “exp” claim not be present in the SET.  Because
“exp” is a required claim in ID Tokens, valid ID Token
implementations will reject such a SET if presented as if it were an
ID Token.</t>

<t>Excluding “exp” from SETs that could otherwise be confused with ID
Tokens is actually defense in depth.  In any OpenID Connect contexts
in which an attacker could attempt to substitute a SET for an ID
Token, the SET would actually already be rejected as an ID Token
because it would not contain the correct “nonce” claim value for the
ID Token to be accepted in contexts for which substitution is
possible.</t>

<t>Note that the use of explicit typing, as described in Section 2.2,
will not achieve disambiguation between ID Tokens and SETs, as the ID
Token validation rules do not use the “typ” header parameter value.</t>

</section>
<section anchor="not-access-tokens" title="Distinguishing SETs from Access Tokens">
<t>OAuth 2.0 <xref target="RFC6749"></xref> defines access tokens as being opaque.
Nonetheless, some implementations implement access tokens as JWTs.
Because the structure of these JWTs is implementation-specific,
ensuring that a SET cannot be confused with such an access token is
therefore likewise, in general, implementation specific.
Nonetheless, it is recommended that SET profiles employ the following
strategies to prevent possible substitutions of SETs for access
tokens in contexts in which that might be possible:</t>

<t><list style="symbols">
  <t>Prohibit use of the “exp” claim, as is done to prevent ID Token
confusion.</t>
  <t>Where possible, use a separate “aud” claim value to distinguish
between the Event Receiver and the protected resource that is the
audience of an access token.</t>
  <t>Modify access token validation systems to check for the presence
of the “events” claim as a means to detect security event tokens.
This is particularly useful if the same endpoint may receive both
types of tokens.</t>
  <t>Employ explicit typing, as described in Section 2.2, and modify
access token validation systems to use the “typ” header parameter
value.</t>
</list></t>

</section>
<section anchor="not-other-jwts" title="Distinguishing SETs from other kinds of JWTs">
<t>JWTs are now being used in application areas beyond the identity
applications in which they first appeared.  For instance, the Session
Initiation Protocol (SIP) Via Header Field <xref target="RFC8055"></xref> and Personal
Assertion Token (PASSporT) <xref target="I-D.ietf-stir-passport"></xref> specifications
both define JWT profiles that use mostly or completely different sets
of claims than are used by ID Tokens.  If it would otherwise be
possible for an attacker to substitute a SET for one of these (or
other) kinds of JWTs, then the SET profile must be defined in such a
way that any substituted SET will result in its rejection when
validated as the intended kind of JWT.</t>

<t>The most direct way to prevent confusion is to employ explicit
typing, as described in Section 2.2, and modify applicable token
validation systems to use the “typ” header parameter value.  This
approach can be employed for new systems but may not be applicable to
existing systems.</t>

<t>Another way to ensure that a SET is not confused with another kind of
JWT is to have the JWT validation logic reject JWTs containing an
“events” claim unless the JWT is intended to be a SET.  This approach
can be employed for new systems but may not be applicable to existing
systems.</t>

<t>For many use cases, the simplest way to prevent substitution is
requiring that the SET not include claims that are required for the
kind of JWT that might be the target of an attack.  For example, for
<xref target="RFC8055"></xref>, the “sip_callid” claim could be omitted and for
<xref target="I-D.ietf-stir-passport"></xref>, the “orig” claim could be omitted.</t>

<t>In many contexts, simple measures such as these will accomplish the
task, should confusion otherwise even be possible.  Note that this
topic is being explored in a more general fashion in JSON Web Token
Best Current Practices <xref target="I-D.sheffer-oauth-jwt-bcp"></xref>.  The proposed
best practices in that draft may also be applicable for particular
SET profiles and use cases.</t>

</section>
</section>
<section anchor="privacy" title="Privacy Considerations">
<t>If a SET needs to be retained for audit purposes, JWS MAY be used to
provide verification of its authenticity.</t>

<t>Event Transmitters SHOULD attempt to specialize feeds so that the
content is targeted to the specific business and protocol needs of an
Event Receiver.</t>

<t>When sharing personally identifiable information or information that
is otherwise considered confidential to affected users, Event
Transmitters and Receivers MUST have the appropriate legal agreements
and user consent or terms of service in place.</t>

<t>The propagation of subject identifiers can be perceived as personally
identifiable information.  Where possible, Event Transmitters and
Receivers SHOULD devise approaches that prevent propagation – for
example, the passing of a hash value that requires the Event Receiver
to know the subject.</t>

</section>
<section anchor="iana" title="IANA Considerations">

<section anchor="iana-sit" title="SET Subject Identifier Types Registry">
<t>This section establishes the IANA “SET Subject Identifier Types” registry
// TODO</t>

</section>
<section anchor="iana-claims" title="JSON Web Token Claims Registration">
<t>This specification registers the “event”, “toe”, and “txn” claims in
the IANA “JSON Web Token Claims” registry <xref target="IANA.JWT.Claims"></xref>
established by <xref target="RFC7519"></xref>.</t>

<section anchor="registry-contents" title="Registry Contents">
<t><list style="symbols">
  <t>Claim Name: “event”</t>
  <t>Claim Description: Security Event Payload</t>
  <t>Change Controller: IESG</t>
  <t>Specification Document(s): Section 2.1 of [[ this specification ]]</t>
  <t>Claim Name: “toe”</t>
  <t>Claim Description: Time Of Event</t>
  <t>Change Controller: IESG</t>
  <t>Specification Document(s): Section 2.1 of [[ this specification ]]</t>
  <t>Claim Name: “txn”</t>
  <t>Claim Description: Transaction Identifier</t>
  <t>Change Controller: IESG</t>
  <t>Specification Document(s): Section 2.1 of [[ this specification ]]</t>
</list></t>

</section>
</section>
<section anchor="iana-media-type" title="Media Type Registration">

<section anchor="registry-contents-1" title="Registry Contents">
<t>This section registers the “application/secevent+jwt” media type
<xref target="RFC2046"></xref> in the “Media Types” registry <xref target="IANA.MediaTypes"></xref> in the
manner described in <xref target="RFC6838"></xref>, which can be used to indicate that the
content is a SET.</t>

<t><list style="symbols">
  <t>Type name: application</t>
  <t>Subtype name: secevent+jwt</t>
  <t>Required parameters: n/a</t>
  <t>Optional parameters: n/a</t>
  <t>Encoding considerations: 8bit; A SET is a JWT; JWT values are
encoded as a series of base64url-encoded values (some of which may
be the empty string) separated by period (‘.’) characters.</t>
  <t>Security considerations: See the Security Considerations section
of [[ this specification ]]</t>
  <t>Interoperability considerations: n/a</t>
  <t>Published specification: Section 2.2 of [[ this specification ]]</t>
  <t>Applications that use this media type: TBD</t>
  <t>Fragment identifier considerations: n/a</t>
  <t>Additional information:</t>
  <t>Magic number(s): n/a</t>
  <t>File extension(s): n/a</t>
  <t>Macintosh file type code(s): n/a</t>
  <t>Person &amp; email address to contact for further information:
Michael B. Jones, mbj@microsoft.com</t>
  <t>Intended usage: COMMON</t>
  <t>Restrictions on usage: none</t>
  <t>Author: Michael B. Jones, mbj@microsoft.com</t>
  <t>Change controller: IESG</t>
  <t>Provisional registration?  No</t>
</list></t>

</section>
</section>
</section>


  </middle>

  <back>

    <references title='Normative References'>

<reference anchor="IANA.JWT.Claims" target="http://www.iana.org/assignments/jwt">
  <front>
    <title>JSON Web Token Claims</title>
    <author >
      <organization>IANA</organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="IANA.MediaTypes" target="http://www.iana.org/assignments/media-types">
  <front>
    <title>Media Types</title>
    <author >
      <organization>IANA</organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>




<reference  anchor="RFC2119" target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC3986" target='https://www.rfc-editor.org/info/rfc3986'>
<front>
<title>Uniform Resource Identifier (URI): Generic Syntax</title>
<author initials='T.' surname='Berners-Lee' fullname='T. Berners-Lee'><organization /></author>
<author initials='R.' surname='Fielding' fullname='R. Fielding'><organization /></author>
<author initials='L.' surname='Masinter' fullname='L. Masinter'><organization /></author>
<date year='2005' month='January' />
<abstract><t>A Uniform Resource Identifier (URI) is a compact sequence of characters that identifies an abstract or physical resource.  This specification defines the generic URI syntax and a process for resolving URI references that might be in relative form, along with guidelines and security considerations for the use of URIs on the Internet.  The URI syntax defines a grammar that is a superset of all valid URIs, allowing an implementation to parse the common components of a URI reference without knowing the scheme-specific requirements of every possible identifier.  This specification does not define a generative grammar for URIs; that task is performed by the individual specifications of each URI scheme.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='STD' value='66'/>
<seriesInfo name='RFC' value='3986'/>
<seriesInfo name='DOI' value='10.17487/RFC3986'/>
</reference>



<reference  anchor="RFC5246" target='https://www.rfc-editor.org/info/rfc5246'>
<front>
<title>The Transport Layer Security (TLS) Protocol Version 1.2</title>
<author initials='T.' surname='Dierks' fullname='T. Dierks'><organization /></author>
<author initials='E.' surname='Rescorla' fullname='E. Rescorla'><organization /></author>
<date year='2008' month='August' />
<abstract><t>This document specifies Version 1.2 of the Transport Layer Security (TLS) protocol.  The TLS protocol provides communications security over the Internet.  The protocol allows client/server applications to communicate in a way that is designed to prevent eavesdropping, tampering, or message forgery.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5246'/>
<seriesInfo name='DOI' value='10.17487/RFC5246'/>
</reference>



<reference  anchor="RFC5322" target='https://www.rfc-editor.org/info/rfc5322'>
<front>
<title>Internet Message Format</title>
<author initials='P.' surname='Resnick' fullname='P. Resnick' role='editor'><organization /></author>
<date year='2008' month='October' />
<abstract><t>This document specifies the Internet Message Format (IMF), a syntax for text messages that are sent between computer users, within the framework of &quot;electronic mail&quot; messages.  This specification is a revision of Request For Comments (RFC) 2822, which itself superseded Request For Comments (RFC) 822, &quot;Standard for the Format of ARPA Internet Text Messages&quot;, updating it to reflect current practice and incorporating incremental changes that were specified in other RFCs.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5322'/>
<seriesInfo name='DOI' value='10.17487/RFC5322'/>
</reference>



<reference  anchor="RFC6125" target='https://www.rfc-editor.org/info/rfc6125'>
<front>
<title>Representation and Verification of Domain-Based Application Service Identity within Internet Public Key Infrastructure Using X.509 (PKIX) Certificates in the Context of Transport Layer Security (TLS)</title>
<author initials='P.' surname='Saint-Andre' fullname='P. Saint-Andre'><organization /></author>
<author initials='J.' surname='Hodges' fullname='J. Hodges'><organization /></author>
<date year='2011' month='March' />
<abstract><t>Many application technologies enable secure communication between two entities by means of Internet Public Key Infrastructure Using X.509 (PKIX) certificates in the context of Transport Layer Security (TLS). This document specifies procedures for representing and verifying the identity of application services in such interactions.   [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6125'/>
<seriesInfo name='DOI' value='10.17487/RFC6125'/>
</reference>



<reference  anchor="RFC6749" target='https://www.rfc-editor.org/info/rfc6749'>
<front>
<title>The OAuth 2.0 Authorization Framework</title>
<author initials='D.' surname='Hardt' fullname='D. Hardt' role='editor'><organization /></author>
<date year='2012' month='October' />
<abstract><t>The OAuth 2.0 authorization framework enables a third-party application to obtain limited access to an HTTP service, either on behalf of a resource owner by orchestrating an approval interaction between the resource owner and the HTTP service, or by allowing the third-party application to obtain access on its own behalf.  This specification replaces and obsoletes the OAuth 1.0 protocol described in RFC 5849.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6749'/>
<seriesInfo name='DOI' value='10.17487/RFC6749'/>
</reference>



<reference  anchor="RFC7519" target='https://www.rfc-editor.org/info/rfc7519'>
<front>
<title>JSON Web Token (JWT)</title>
<author initials='M.' surname='Jones' fullname='M. Jones'><organization /></author>
<author initials='J.' surname='Bradley' fullname='J. Bradley'><organization /></author>
<author initials='N.' surname='Sakimura' fullname='N. Sakimura'><organization /></author>
<date year='2015' month='May' />
<abstract><t>JSON Web Token (JWT) is a compact, URL-safe means of representing claims to be transferred between two parties.  The claims in a JWT are encoded as a JSON object that is used as the payload of a JSON Web Signature (JWS) structure or as the plaintext of a JSON Web Encryption (JWE) structure, enabling the claims to be digitally signed or integrity protected with a Message Authentication Code (MAC) and/or encrypted.</t></abstract>
</front>
<seriesInfo name='RFC' value='7519'/>
<seriesInfo name='DOI' value='10.17487/RFC7519'/>
</reference>



<reference  anchor="RFC7525" target='https://www.rfc-editor.org/info/rfc7525'>
<front>
<title>Recommendations for Secure Use of Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS)</title>
<author initials='Y.' surname='Sheffer' fullname='Y. Sheffer'><organization /></author>
<author initials='R.' surname='Holz' fullname='R. Holz'><organization /></author>
<author initials='P.' surname='Saint-Andre' fullname='P. Saint-Andre'><organization /></author>
<date year='2015' month='May' />
<abstract><t>Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS) are widely used to protect data exchanged over application protocols such as HTTP, SMTP, IMAP, POP, SIP, and XMPP.  Over the last few years, several serious attacks on TLS have emerged, including attacks on its most commonly used cipher suites and their modes of operation.  This document provides recommendations for improving the security of deployed services that use TLS and DTLS. The recommendations are applicable to the majority of use cases.</t></abstract>
</front>
<seriesInfo name='BCP' value='195'/>
<seriesInfo name='RFC' value='7525'/>
<seriesInfo name='DOI' value='10.17487/RFC7525'/>
</reference>


<reference anchor="E.164" target="http://www.itu.int/rec/T-REC-E.164-201011-I/en">
  <front>
    <title>The international public telecommunication numbering plan</title>
    <author >
      <organization>International Telecommunication Union</organization>
    </author>
    <date year="2010"/>
  </front>
</reference>


    </references>

    <references title='Informative References'>





<reference anchor="I-D.ietf-stir-passport">
<front>
<title>Personal Assertion Token (PASSporT)</title>

<author initials='C' surname='Wendt' fullname='Chris Wendt'>
    <organization />
</author>

<author initials='J' surname='Peterson' fullname='Jon Peterson'>
    <organization />
</author>

<date month='February' day='9' year='2017' />

<abstract><t>This document defines a method for creating and validating a token that cryptographically verifies an originating identity, or more generally a URI or telephone number representing the originator of personal communications.  The PASSporT token is cryptographically signed to protect the integrity of the identity the originator and to verify the assertion of the identity information at the destination. The cryptographic signature is defined with the intention that it can confidently verify the originating persona even when the signature is sent to the destination party over an insecure channel.  PASSporT is particularly useful for many personal communications applications over IP networks and other multi-hop interconnection scenarios where the originating and destination parties may not have a direct trusted relationship.</t></abstract>

</front>

<seriesInfo name='Internet-Draft' value='draft-ietf-stir-passport-11' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-ietf-stir-passport-11.txt' />
</reference>



<reference anchor="I-D.sheffer-oauth-jwt-bcp">
<front>
<title>JSON Web Token Best Current Practices</title>

<author initials='Y' surname='Sheffer' fullname='Yaron Sheffer'>
    <organization />
</author>

<author initials='D' surname='Hardt' fullname='Dick Hardt'>
    <organization />
</author>

<author initials='M' surname='Jones' fullname='Michael Jones'>
    <organization />
</author>

<date month='July' day='3' year='2017' />

<abstract><t>JSON Web Tokens, also known as JWTs [RFC7519], are URL-safe JSON- based security tokens that contain a set of claims that can be signed and/or encrypted.  JWTs are being widely used and deployed as a simple security token format in numerous protocols and applications, both in the area of digital identity, and in other application areas. The goal of this Best Current Practices document is to provide actionable guidance leading to secure implementation and deployment of JWTs.</t></abstract>

</front>

<seriesInfo name='Internet-Draft' value='draft-sheffer-oauth-jwt-bcp-01' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-sheffer-oauth-jwt-bcp-01.txt' />
</reference>


<reference anchor="OpenID.Core" target="http://openid.net/specs/openid-connect-core-1_0.html">
  <front>
    <title>OpenID Connect Core 1.0</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>




<reference  anchor="RFC2046" target='https://www.rfc-editor.org/info/rfc2046'>
<front>
<title>Multipurpose Internet Mail Extensions (MIME) Part Two: Media Types</title>
<author initials='N.' surname='Freed' fullname='N. Freed'><organization /></author>
<author initials='N.' surname='Borenstein' fullname='N. Borenstein'><organization /></author>
<date year='1996' month='November' />
<abstract><t>This second document defines the general structure of the MIME media typing system and defines an initial set of media types.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='2046'/>
<seriesInfo name='DOI' value='10.17487/RFC2046'/>
</reference>



<reference  anchor="RFC6838" target='https://www.rfc-editor.org/info/rfc6838'>
<front>
<title>Media Type Specifications and Registration Procedures</title>
<author initials='N.' surname='Freed' fullname='N. Freed'><organization /></author>
<author initials='J.' surname='Klensin' fullname='J. Klensin'><organization /></author>
<author initials='T.' surname='Hansen' fullname='T. Hansen'><organization /></author>
<date year='2013' month='January' />
<abstract><t>This document defines procedures for the specification and registration of media types for use in HTTP, MIME, and other Internet protocols.  This memo documents an Internet Best Current Practice.</t></abstract>
</front>
<seriesInfo name='BCP' value='13'/>
<seriesInfo name='RFC' value='6838'/>
<seriesInfo name='DOI' value='10.17487/RFC6838'/>
</reference>



<reference  anchor="RFC7515" target='https://www.rfc-editor.org/info/rfc7515'>
<front>
<title>JSON Web Signature (JWS)</title>
<author initials='M.' surname='Jones' fullname='M. Jones'><organization /></author>
<author initials='J.' surname='Bradley' fullname='J. Bradley'><organization /></author>
<author initials='N.' surname='Sakimura' fullname='N. Sakimura'><organization /></author>
<date year='2015' month='May' />
<abstract><t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures.  Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification.  Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t></abstract>
</front>
<seriesInfo name='RFC' value='7515'/>
<seriesInfo name='DOI' value='10.17487/RFC7515'/>
</reference>



<reference  anchor="RFC7516" target='https://www.rfc-editor.org/info/rfc7516'>
<front>
<title>JSON Web Encryption (JWE)</title>
<author initials='M.' surname='Jones' fullname='M. Jones'><organization /></author>
<author initials='J.' surname='Hildebrand' fullname='J. Hildebrand'><organization /></author>
<date year='2015' month='May' />
<abstract><t>JSON Web Encryption (JWE) represents encrypted content using JSON-based data structures.  Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and IANA registries defined by that specification.  Related digital signature and Message Authentication Code (MAC) capabilities are described in the separate JSON Web Signature (JWS) specification.</t></abstract>
</front>
<seriesInfo name='RFC' value='7516'/>
<seriesInfo name='DOI' value='10.17487/RFC7516'/>
</reference>



<reference  anchor="RFC8055" target='https://www.rfc-editor.org/info/rfc8055'>
<front>
<title>Session Initiation Protocol (SIP) Via Header Field Parameter to Indicate Received Realm</title>
<author initials='C.' surname='Holmberg' fullname='C. Holmberg'><organization /></author>
<author initials='Y.' surname='Jiang' fullname='Y. Jiang'><organization /></author>
<date year='2017' month='January' />
<abstract><t>This specification defines a new Session Initiation Protocol (SIP) Via header field parameter, 'received-realm', which allows a SIP entity acting as an entry point to a transit network to indicate from which adjacent upstream network a SIP request is received by using a network realm value associated with the adjacent network.</t></abstract>
</front>
<seriesInfo name='RFC' value='8055'/>
<seriesInfo name='DOI' value='10.17487/RFC8055'/>
</reference>




    </references>


<section anchor="ack" title="Acknowledgments">
<t>The editors would like to thank the participants on the IETF secevent
mailing list and related working groups for their support of this
specification.</t>

</section>


  </back>

<!-- ##markdown-source:
H4sIANn8CloAA+19aW8bR7bo9/oVDQZ4sXJJiqIW2xoMbmRZtulrSY4lx4kN
I2h2F8m2emF6kUwHmd/+zlbVVU1SdmbuvIsH3ACBqV5qOXX2rQeDgaqTOtXH
wZWOmjKpV8HZrc7r4Lq40Xnw4OrsekeF02mpb4+DSkcabw5qvKniIsrDDF6N
y3BWD8okWoR5Hg78xwajkYrDGh4bj/YeDvb2BnsHKoIL86JcHQdJPitUsiyP
g7psqno8Gj0ejZUKSx22a1J3RXkzL4tm2S5C3egVXI6Pg0le6zLX9eAprkOp
qg7z+LcwLXKYdKUrtUyOgw91EfWDqijrUs8q+LXK8MdHmKqpF0V5rIKBCuC/
JK+Og5Nh8CSMbrIwp2u8zRPY3FSnqfbuFeU8zJMvYZ0UOTyThV8KvqGzMEmP
AwOWH0O6NYyKzJvq9TB40cB22nleL5K0veaPf1mGUard8Zfw9HABT/+4ChdF
wePDf94k74bBU53nSVU587xL0jQJM++OP9vzopj7s93F/PCPc7pFs3kznQ8B
TlVYJs5E5wB1/SV0b/jznCZVVLjTZPzGMKQ3fozw/sa5XsIhu3s6R2jrNHji
3vIng0fKoipmtTfh9NOPmblhYQjIdxws6np5vLtb6XQ2gJ03Oh4i0u4qlRdl
BoPeakCeYHJycTJ8+e56eJqGSVYd0wBCWy+vLi+Cd3oqVMVP0AMW+ei/gfxL
Sz6mIXmYsJzr2i7l7u5umIR5OISndsOqSuZ5BhRR7X66q81KznWchNerpfZX
QpcDuv5vmD/D0Qe1jP7m2el4b+/xMf/cf/zoSH4ejg/sz/3xWH4e7Y0Pzc+H
B+a1h4d77U9+4Gy4d3Tg7ep6oQEjkAvQGYdpsGymaRIFtU41HGbW5ElEt4K8
yaa6TPJ5sEyFgjftrm7gkOvdUke714M3Z6cDmnQALGwEHGyyq/NvAJ+3ouu1
pbzNE2EVlj+OFKKWi1WDp8NE17NBVSflYAnAXgJpmDvVQs9muhwUuI4BnP5g
Gi3x5uVS55Onw9Oi1B6g+HpwWuS5juoA7wd7w9EmMBTwaBIPga/uVksdVXJh
EPG78G+pB3u/jYaLOkuVHPfIHuzRo/1H7REetj/NA49Gh3BVDQaDIJxWNfC1
Wl0vkirA2ZKZAVKsZwnQcVDDEW8SUf3gbgE0H2ThKphqFScwVDJtah0Ht4Dp
YbAsC2D9RRpUDTwWVsGL62vguYQzmwZUJPM6q4BBZkkqy+hQ8wMg+h2zjCjM
cRnFkk89XQVIHbAYEEm7RRnoPCpXS1gdrOAkgJlgg1UEK4axwwAkV62RlIJi
pmYAkWBWFhlNutQlLgnxAm7CcAHxohJuhnWQ1IT/eQwrLIJqAeIzuEvqhQIe
CMiI/FQHgMwaXi+rIYM9S+IYuLsCPC2LuIlop398l+Cff6q/O//ddzCwEv0Z
pq6SaboZoqJFMF57xwVvonCcA3yaimhSDqvacFrKn3/aJClsF35tO5NAZvwg
bOQjwEiBxoBAK3Cq2yTWCHXk7IDWdZjgSZHWwmDl0wzWTlPxau2kV3A1rBuA
MUx8tWNmPPy4duxB+6bCN8/4Bm4IXj2zrx59hEPaAHUPEZuKcAH2iltlNGnK
ZcGXET9gLlWZIyG1ibdX0ZlUOwTZ7UcbTMNKm4NrlnCLT49XgRvxXqzkzQAw
twGWRxMihsQK1pYAGmqQw/m8gmnf5rALOD64Ud4lsGIZScd92MjakmCrFcjb
fGBlLuBOmC0B5WQWxn86P1hGBqsBnlLrYFHcmUcA6RQcZ0T3AN+BCjcCGS9E
wO5oLAs+2EYACJPX+Eep0xCPk0ceqneghelgM6gF12ELMZ0T7dmcVIXb7eJ2
kQOq4TJhvrLyl7Ask9swotsRiJcKl6JvQ9AWYbF2ffQkvEuix8oUUD+V8kkU
jgfQNi8A2UE4hchBWMmBJdd3GihhGZZ1oitiWGYlijeYdJlW8I1MK5wWTY1I
wW/TzXabVTP9hOLpgR7Oh324cweUUuqqaMpI9xms/WDyWoVxDJcZhGbopEZ6
3mECdq4jgZfIWeAEcN13uO9i1lf04AJYjWFFSQ52QgYMFM7tgf68BEUCpOeK
XszMXzs+PMySz09+xbOGjQMsESZ2D3D8sO8oKkBV38GxAGggy8NyJc8oAA9y
OxgUVKoi38GFMFvhuQhSvEjYTZPGVnbA8HEC7L1WchvgKYhAb/UJ9LL2oH1G
gG9QcpHM4Z+BAnwCFbo9DnPAliuD3P6BJWgEdhriVR9ETGwRuA+nlRW3gHp0
sObohuYtuKDrGvkHzF01gCN5RXhPOCJAcp6+LQxheHjCnBoIoiCODicPTGGZ
lCv7alrMAdH4NToAgS0A9LLs41MnQdRkTcosBWkqbWgpRv7guHmM+9KMUjIQ
Ikwd3rAeWNzi2eZsTAgRAisT4Yz0vwhh+CmSE7GBhKUW6HN1MF3hEGHOZ4CD
A5EKPxGsco+eCRasFBRSZTKf6xKJdSULG4RzIsXS8v0BjFKtKjjClk5C4B3E
I4BH5lWWVA74mbRpAlVEMAbMWK3yaFEWedFUqXDCnMRDdDMg8xbwBSCFw4es
R5CgADuftovXBesIIrBEXRL/JBbgcU04mitYsP69gT/SFZEFKxNvRH/pIzQR
eUShAeUKNal+AAiXoCpdyQpB/V6Wuq6I0diHUemircPpVYQ0xV2Oh6yXKEBg
It4CsJUEAbKCFT0DeIq8sbPTaTJrhVEJxVqO26LAVKMQBsW9iBLaMuplRLCo
uuN0W/meQShhcwrYFo3GOARHjmwKNTydVnqHT9cHFeFetChQJagLBWSGSopl
jbm+Y2yGkVEEzAEbcIlAgSic4UQN6VZrOyD8BdJMACcYa4mmti0ChldEBABQ
lp4I4kWybEeT7ffpdPLCYFIihGapwh+9ggHS1BAEPGiOjxUWPnYEGio8/Y42
VKGKhztHHgp0kbHMJyVBpCHwlhKRsaor0UNJ0yCmskFRSSpWQFgPIhmCzJj1
XFLHWm5q5CWdR3dXCDSLwka/Ax0KkFUZ3QHlAjPlPm2P2QyALgqX4RQ0NNgn
vqnLEhktaqmktRGrQX3BIoQ2xGO5rEsvAPqLojaWLFiPuFaC8R/fAc+8/RPt
iQ3/KeTBN3oVoKOuCnrnb6+ue33+N7i4pN9vzn56O3lz9hR/X704efXK/uAn
FPxx+faV3Mdf7Zunl+fnZxdP+WW4GnQugTTuETqp3uXr68nlxcmrHvNeOKa4
AM5P5I4QoEO38EYaqKx4RV6iPog74yNjQUUb433hAADxpAYQfkH6WBg+D8M2
eZhNk3lDrFP0vBWhFEhsiwdMTWKpwlmFSxTWfBwzTUoAK9JTjeynENESAg+J
RM3BtQ9Aay3NySMZWXQHgxIVAJqRaQ/28W5Blg5upt0J6YLtboiiV3hHofpe
i+wCTCTdJEwHKWB2A2IHJssrEPIKuKVVb3FzoCPEsqi+Udvbud6+eYX2URGj
Oj4xa0QSIDSBDUV4SvwIPl11zwatToLUeLiHG/0g7ia2ocqimS9QC/BOHdAC
uMYMDgYhi2qbWIBAz2EkIgQM2zJUQDJ6cFfCkSDtzIgh2A0xlPGVIE2ypIXt
FfyVhiVIMGLT6u2bSRW0ViZyvSRvodEqCNUCnZ+5GAs8NJ68Oyn8rnAapZ4i
p0kMMQLfyT1iJAqcFWla3OHiY+dphD8hKTFgZB+g1v1xHNzSlH/vjXp/qnvM
+WPxX5ANgCZoa2az7cxbrVqVYhmu0iK0WiuJxa7wV0pmYr2kBjygmUC+3CaR
Nla7oH+sU2aWxPyA2MS0koeq4CZH2R5WqsNd7TzmCk7S1TNoa7lRpGlCYYpm
QsYtPl/reUJEzHS9KMjHs2lQEnYhWBg8NJwsaAIl85weTJEsE7jTQz7QM04b
4luIa2J5+hYjIpyFP5h4LEntGTk+Jqvflb5BYa0gUvloMWijBaEZjB1WoqGI
SYvetSSH9YJUEKXFkOLBcG84VnZNO+tmXAtao2vDlcnrwBp1oHOt2XVGB8dd
ZWCu4JGQGoXWhXpt/RJXLnQYgzwxTcOgU4EdizAa43bnKSvJ2Y+myI8mxj16
uVmRXJDyYLSjiLz7cFxgSsTiYrjPMQZkC9aQ73Bb/0851AZiGs1udGFYdY7Z
I8Gw55Fbz6E3OE2f3voB8TXmovQqiPYUhEhPiAhfAmQOaUrcLJI1sEVlHE5r
yvu1wNOM1DIIDnsAJGpm4DNihCJaCUv67PSo2DRELYRcbAUjnXAU2gfMSxoY
A1sUM5/N8Lzr77fMt+4stS9IppyZ5DQZxp+XiJmuP0WoBEcSgCIZ0N+IIAp1
P77uaLhG4MsdBCszLnfgFj5walsQe7P7qnXfoY/ehxTJFPQbotR0tg76fR77
fBoocFHcaeRZW6ZnuWl03ThOWEFUMhVMOi1Qt0dKgSOakMPIUdEYqtsGVzKw
OYHCOtHk6PzjBntywXJB7srOcOIZCJot04BCoK3f0uIsz4mHhpaTrIC1T/Qg
lnoOSEqGt6wF8dsN7gG/x0fKVfChExj8iKwXpb16zTEquhxcgDyofLpweOkY
gWnJBJ14Z5aeQAWnH67c/6rruFUJZHPOtK0gB2RRgixdWjkO1pQFjCEjp43C
Sg9QF0zIqYJiEeYRk3iFv1nbNZKDIxjsdJRpwOpvlwSGritV9nxYiAebtsH4
xfbEECP78T0LQi27LNk+2/hE5a6ZRBEMmKCose52cjtsX+r+pqUqZ6mWFGC1
wF1wtVsHO/AGEy+5HYs4TgI6RThDnYn99AYzjb1FMhtse4pE4B4AJ9DSh/0h
mfApC4dn/gsbVMIFZEZQ2S3ZoPqOlgrGRcijRCgCEjmFdVekFyGjndMRK9Qu
whTV2BVrujI7R8dwEzB+XZSAsKnn+3zLAY12w+gJ6Zh7AEAQv3TcYMk2eg3f
GDgm/mTQ+S40/u7OOSoX9EffjHKf6oTW0OTJ7+0i0A+E4Dba130489BYMF+d
6yvR0pbE0c2zzv4FBMpS9BpBc54NbscVo0anpgE6ugaGQYljFuQjaSmIghwo
CAIjEbeLY6NmoDHWShVPOCoDPFgGxic81yVN01o67KrcJkGD4NvhuA5DX2Ae
Yxi8A8OAn/mNtIEgIE2U+Y+nzoB1KDopIQ5QlEWdyt+ZcvDmvm1tRZsA1RBZ
itHnJx2XtTP5Nr0FpnhwpQFrPnx88J08sLOzNq1LoHWhCZs4B2ONQtF1ywr1
GqnacNMULD59S54VdidacwUOhR2BeMHg96wRFjIBXGS+QLyQ/IR8uGWGBBcG
F02mgfU8xUXQk/0t0nh8LzNQ7paD+zUnG1i4C1fiNgTenaEmUlt1loBxJ46a
oAcw7LXwLchEjoMHxoTi8LL48xphm1r1gDfKazt4EJ/FJmJM5EfFwEUVl+OC
holRjMA4Yy2isMBAwVmBtAFdKMiatE4wIkvGMboXRKg7mN56vdn/ytHPzTOY
YJrxpIE2y8av4RSViTmgMa1AcMwTTLeBaXwbd9akYuau0YVxCwJQnhR1Kxes
JrimFnu+Ioc9GZURT0IRd0RG6Grx9xKrNtkKOKHEyREx2TtnbEo4cQ5nUXx6
swsaD8b39BnNNZnnaBCgB94aqes7Rn+xt2ETLliB0Cc/fpOjcwWzLMW4bVkk
GV2b4/TVgh8J/enEqGJv0GK1REuoJhWAV8HhgbtiHdYb7QDgwf/4xz/UH8Dg
eiCMe8dBbz8eRfvR7OHjh4ePDqbx3uP9aTyaTfem8YF+GO+Pen18GHAVH8bs
p+p4d7duHVBD2QGmBfKzoAfCsx/ap42Xxns0+MgDA+kdB3sHMPnjo9H4kC4i
GZuL4wNz8XOOSzicTg/iOB4P9vXDh4MDPZoOwoPR0WC0Hz2axdH40cNozOug
ncMrf1ACV6+VNO5OTMKsu7Zd+f0bj9Dn94GL28Fw4ZYS7ZhNmR9jOtoxCN0w
q47N2MciAI4pYCXj4YroT3yx0uWPLnDoiT9lYjrP3/bwwVlR9LyrY7w6DUt8
40/1J5/ucfDdLJmjZUuJbX/vnQmSIWq9Q4xhN4uYSMCoXouG8idjrHUSSDDA
IKn1WnqSn+LdJ7kHYeEhrO+IysmvoSzvyDa1AbFxFAxUnzDgN43nqABWBmNW
mxcWxDGugT6EKCwwiZNYIIrjrNSu3omr9Vam2qV9X23lV9bB6OgNaIfKEjdG
gxScQUacJ6Skl4TEea7RAMAcCAxGtakWrtrY0T58D5bRHYmpGO/TulIjHmH2
iWRZkatqBQf9maNjlgPZqWweTWf4TRqTWnM0WSFK7A4VUGSWkaS5bFge5uPi
6BvgSvccl454c9y8Pjl48deaPXBeCysOIWW0FXNNLpII0JqTcnxIw+OV9fUa
F3JnJRKU2egDQUdH0EMK3AAkerknb8F5awDJNE2qBWMiKpGYUjwACxw1lI2q
KU1tRW++zqEYFP0OUSomyos1hXMbtDnIbk/R0sqG48FTQ6WTAcsH4ZozWzYx
9dT4e9ZivMeb7zpGJAjTOyLve85lG3r9hXP57rvvgjPiPlvGouX26JHeVgC3
sSF0HMxTweENFiiOo7YYTZ30CE/Ll0gxPE4aPlgLHyTb/Csm9TcqM1soWd1H
+pQZcR/sXN3lXxO+9wleT4QyBEWIgoSb/JX1ojBFhHi9QHZ0L0LQI/8NCLHE
cX5jA3IbXgT0kFiZ7HcWdJgaLVuSXIqSAhyIHZTf/z+LG/eC8V/FDYIJ44YL
Q3z3P/aC8egoODw8DEZ74/0OhjAwt2PIvas2GDKRtE/QSMyT96LL+vPfgDu1
VYLW8eaf9U2DJMGjhnNbFpLijk7xtujFgMExW4XtOlqdj1YkAcKYbGZAvbq1
/WQsskXk4b/iBFeb0BadPdt37vPTbubiJgVUOeLNcRX7YLMvWvnm7MlfrQ+N
YAM0HO14CzTG6lv9s/92Iv52TP9XKRoAiqmda9YrmHxJvG6zsnHXM9cpYw+o
/aBD7jAQPHkPvX/7BpH4z0SnxwsS1CXHDcW8qVJsW+7YxhiWUW7E+exkSVkz
9z8+3QGzoEo0cjijLoszssONYvJs8tEj7Cw2FAt/9IKFDjHBhMCO/jjxwlAg
xSEX4zfxDZdYA9a5KZb4FqEZpdHRlowGbTIEMM3UjMZ53U6gE/OhnVwwE35P
TCkG5nObd1DbaTN6WCe9SSiJkapEKtchqTaGcr3VJ5VLPWQrESgdKLAXr6vM
bjccX2sOnDnueVgbA96LeO4NHzss7vCjWIxqLXy8hgiYugCjf6bKHfaPsmEI
V8Fc6qv2qFlXJJC1GkLPw6S1ggkT5jVFJFw0FTl/bsVoB7f93Km+ySPhJcJW
v68Cd0jhWZVJe+rkJZqoMOfHbimfIVQkN2p+iwl9HLxM3IQ7SrtUGFnD+Ibx
sJoXGlhgXtsalVKqH6WwFlNgdMnJSBv4LDnqhLd2kkGoXAQNDXbp7PSNRU7x
Hcz/bnKposMwOhv5Ly+vzoIXTKpJZXgpHeuxf4L9XpjO4WKOChDzOvUEhOHR
QVOmnDcjnAnXWES1blMy314/GzxqLUGbHovGoLuCVaLT2KxCr16O9C8nyWXy
8sv7dxdpnP3cxKf17/H+T8mr05eL6fMI7zXT8WE6yUe8ouvt8EH3FOdHoodf
MMHMdVfMJ6cn8P/L3+PnNzDuSXI+/unu1y8Xn95/ig4vvrw9uHj+8ub8+ubL
r9lPd++zyWf4d/T+Or45/3KSvDop5koGWEb75zRA+OLNKHpxfvRq9XgUZc+a
aLy3jF+8SaPkMNXPn9XR88/pq+zidno1qU6TE1qAmmTP9t6fTo4mz6r5JFuM
4hdPvlwmj26j7OdP79+l4/e/TJr3vywW01+eVO+vDj9Nx6Nk8mxkB5hk6ULF
OMDTs9HF9Xx0ef3r3fmnt+0D+Zvb91fu/cmoc/9gmkyOYDuTvV+zyej98zc3
58noy/vraP/V9Zv0/Pmk/vX6p7uLZHR3Pj4/eJ+9+XT+ab7/65cJwUHAQOfF
K3lR/RdfbG/Ezx7D4T5JJ58Kf5tj2OYv79Np/pPdppJ93tp9//xYsKEFHPyf
RPs/Jzhge5p8PXz3JlXT/M3yfZamUerMnP+8mn5aLt//8ia7zJ8s4JTq6Muy
Rbenyy/xu5e/w9+jy+znWv36Lq0myZ2zHYT4zzVd5wG/vP/l5Un3hNpVPnms
WiDhyxcVvFz/8uWMcOZ99vjWn+Dlp+nzZ8vpz49WDKuXiyiZ/Jcyo9HIL0Z/
d9BfkPzluyvOVafsNsM7siWVIpWcqwDsFyNnEu5BcsQwcCWE2I3bFkhWNRHW
P0ejw/8ltP8ltP/PCW3YCZ0YcutEUN7m5GBHlWiD3oM6/bP1WmN02+DbpZVh
oMw9o+T64JBSfRs7LDePwcQbjAjmpgzBBo0xqUjEvVs5vamySJEqDawhLVai
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
Oe1VPp/hx9qBSf1fbSDL0BaNAAA=

-->

</rfc>

