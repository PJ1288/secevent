<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.3 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>

<rfc ipr="trust200902" docName="draft-richanna-secevent-token-01" category="info">

  <front>
    <title abbrev="secevent-token">Security Event Token (SET)</title>

    <author initials="A." surname="Backman" fullname="Annabelle Backman">
      <organization>Amazon</organization>
      <address>
        <email>richanna@amazon.com</email>
      </address>
    </author>
    <author initials="P." surname="Hunt" fullname="Phil Hunt">
      <organization>Oracle</organization>
      <address>
        <email>phil.hunt@yahoo.com</email>
      </address>
    </author>
    <author initials="W." surname="Denniss" fullname="William Denniss">
      <organization>Google</organization>
      <address>
        <email>wdenniss@google.com</email>
      </address>
    </author>
    <author initials="M." surname="Ansari" fullname="Morteza Ansari">
      <organization>Cisco</organization>
      <address>
        <email>morteza.ansari@cisco.com</email>
      </address>
    </author>
    <author initials="M." surname="Jones" fullname="Michael B. Jones">
      <organization>Microsoft</organization>
      <address>
        <email>mbj@microsoft.com</email>
        <uri>http://self-issued.info/</uri>
      </address>
    </author>

    <date year="2017" month="November" day="14"/>

    <area>Security</area>
    <workgroup>secevent</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This specification defines the Security Event Token, which may be
distributed via a protocol such as HTTP.  The Security Event Token
(SET) specification profiles the JSON Web Token (JWT), which can be
optionally signed and/or encrypted.  A SET describes a statement of
fact from the perspective of an issuer that it intends to share with
one or more receivers.</t>



    </abstract>


  </front>

  <middle>


<section anchor="intro" title="Introduction">
<t>This specification defines an extensible Security Event Token (SET)
format which may be exchanged using protocols such as HTTP.  The
specification builds on the JSON Web Token (JWT) format <xref target="RFC7519"></xref> in
order to provide a self-contained token that can be optionally signed
using JSON Web Signature (JWS) <xref target="RFC7515"></xref> and/or encrypted using JSON
Web Encryption (JWE) <xref target="RFC7516"></xref>.</t>

<t>This specification profiles the use of JWT for the purpose of issuing
security event tokens (SETs).  This specification defines a base
format upon which profiling specifications define actual events and
their meanings.  Unless otherwise specified, this specification uses
non-normative example events intended to demonstrate how events may
be constructed.</t>

<t>This specification is scoped to security and identity related events.
While security event tokens may be used for other purposes, the
specification only considers security and privacy concerns relevant
to identity and personal information.</t>

<t>Security Events are not commands issued between parties.  A security
event is a statement of fact from the perspective of an issuer about
the state of a security subject (e.g., a web resource, token, IP
address, the issuer itself) that the issuer controls or is aware of,
that has changed in some way (explicitly or implicitly).  A security
subject MAY be permanent (e.g., a user account) or temporary (e.g.,
an HTTP session) in nature.  A state change could describe a direct
change of entity state, an implicit change of state or other higher-
level security statements such as:</t>

<t><list style="symbols">
  <t>The creation, modification, removal of a resource.</t>
  <t>The resetting or suspension of an account.</t>
  <t>The revocation of a security token prior to its expiry.</t>
  <t>The logout of a user session.  Or,</t>
  <t>A cumulative conclusion such as to indicate that a user has taken
over an email identifier that may have been used in the past by
another user.</t>
</list></t>

<t>While subject state changes are often triggered by a user-agent or
security-subsystem, the issuance and transmission of an event often
occurs asynchronously and in a back-channel to the action which
caused the change that generated the security event.  Subsequently,
an Event Receiver, having received a SET, validates and interprets
the received SET and takes its own independent actions, if any.  For
example, having been informed of a personal identifier being
associated with a different security subject (e.g., an email address
is being used by someone else), the Event Receiver may choose to
ensure that the new user is not granted access to resources
associated with the previous user.  Or, the Event Receiver may not
have any relationship with the subject, and no action is taken.</t>

<t>While Event Receivers will often take actions upon receiving SETs,
security events cannot be assumed to be commands or requests.  The
intent of this specification is to define a way of exchanging
statements of fact that Event Receivers may interpret for their own
purposes.  As such, SETs have no capability for error signaling other
to ensure the validation of a received SET.</t>

<section anchor="conv" title="Notational Conventions">
<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”,
“SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and
“OPTIONAL” in this document are to be interpreted as described in
<xref target="RFC2119"></xref>.  These keywords are capitalized when used to unambiguously
specify requirements of the protocol or application features and
behavior that affect the inter-operability and security of
implementations.  When these words are not capitalized, they are
meant in their natural-language sense.</t>

<t>For purposes of readability, examples are not URL encoded.
Implementers MUST percent encode URLs as described in Section 2.1 of
<xref target="RFC3986"></xref>.</t>

<t>Throughout this document, all figures MAY contain spaces and extra
line-wrapping for readability and space limitations.  Similarly, some
URIs contained within examples have been shortened for space and
readability reasons.</t>

</section>
<section anchor="defn" title="Definitions">
<t>The following definitions are used with SETs:</t>

<t><list style="hanging">
  <t hangText='Security Event Token (SET)'><vspace blankLines='0'/>
  A SET is a JWT <xref target="RFC7519"></xref> that contains an event payload describing
a security event.</t>
  <t hangText='Event Transmitter'><vspace blankLines='0'/>
  A service provider that delivers SETs to other providers known as
Event Receivers.</t>
  <t hangText='Event Receiver'><vspace blankLines='0'/>
  An Event Receiver is an entity that receives SETs through some
distribution method.  An Event Receiver is the same entity
referred as “recipient” or “receiver” in and related
specifications.  <xref target="RFC7519"></xref></t>
  <t hangText='Subject'><vspace blankLines='0'/>
  A SET describes an event or state change that has occurred about a
Subject.  A Subject may be a principal (e.g., Section 4.1.2
<xref target="RFC7519"></xref>), a web resource, an entity such as an IP address, or
the issuer itself that a SET might reference.</t>
  <t hangText='Profiling Specification'><vspace blankLines='0'/>
  A specification that uses the SET Token specification to define one or
more event types and the associated claims included.</t>
</list></t>

</section>
</section>
<section anchor="set" title="The Security Event Token (SET)">
<t>A SET is a data structure that encodes an “event payload” describing a
security event, wrapped in an “envelope” providing metadata and context
for the security event.  The SET envelope is a JWT Claims Set as defined in
<xref target="RFC7519"></xref>, consisting of a JSON object containing a set of claims.  The
event payload is a JSON object contained within the SET envelope, itself
containing claims that express information about the event, e.g. the type
of event, the subject of the event, and other information defined in a
Profiling Specification.</t>

<t>This specification defines a core set of claims for use in SET envelopes
and event payloads, however Profiling Specifications MAY define additional
claims of both types.  It is RECOMMENDED that Profiling Specifications
define claims to be used in the event payload rather than the envelope.  If
a Profiling Specification does define envelope claims, those claims SHOULD
be registered in the JWT Token Claims Registry <xref target="IANA.JWT.Claims"></xref> or have
Public Claim Names as defined in Section 4.2 of <xref target="RFC7519"></xref>.</t>

<section anchor="claims" title="SET Claims">
<t>This specification profiles the following claims defined in <xref target="RFC7519"></xref> for
use in the SET envelope:</t>

<t><list style="hanging">
  <t hangText='iss'><vspace blankLines='0'/>
  A case-sensitive string identifying the principal that issued the SET,
as defined by Section 4.1.1 of <xref target="RFC7519"></xref>.  This claim is REQUIRED.</t>
  <t hangText='aud'><vspace blankLines='0'/>
  A case-sensitive string or array of case-sensitive strings identifying
the audience for the SET, as defined by Section 4.1.3 of <xref target="RFC7519"></xref>.  This
claim is RECOMMENDED.</t>
  <t hangText='exp'><vspace blankLines='0'/>
  As defined by Section 4.1.4 of <xref target="RFC7519"></xref>, this claim is the time after
which the JWT MUST NOT be accepted for processing.  In the context of a SET
however, this notion does not apply since a SET reflects something that
has already been processed and is historical in nature.  Use of this claim
is NOT RECOMMENDED.</t>
  <t hangText='iat'><vspace blankLines='0'/>
  A value identifying the time at which the SET was issued, as defined by
Section 4.1.6 of <xref target="RFC7519"></xref>.  This claim is REQUIRED.</t>
  <t hangText='jti'><vspace blankLines='0'/>
  A unique identifier for an event, as defined by Section 4.1.7 of
<xref target="RFC7519"></xref>.  This claim is REQUIRED.</t>
</list></t>

<t>This specification defines the following new claims for use in the SET
envelope:</t>

<t><list style="hanging">
  <t hangText='event'><vspace blankLines='0'/>
  A JSON object known as the “event payload”, whose contents identify the
type of event contained within the SET and contain additional information 
defined as part of an event type definition in a Profiling Specification.</t>
</list></t>

<t>This specification defines the following claims for use in event payloads:</t>

<t><list style="hanging">
  <t hangText='event_type'><vspace blankLines='0'/>
  A string containing a URI that uniquely identifies an event type
defined by a Profiling Specification.  This claim is REQUIRED.</t>
  <t hangText='event_id'><vspace blankLines='0'/>
  A string that identifies a specific “real world” event or state change
to which this event is related. Recipients MAY use this claim to correlate
events across different SETs received at different times and/or by different
systems. The value of this claim MUST be unique with respect to the
transmitter to a specific “real world” event or state change, however
recipients MUST NOT interpret a difference in “event_id” values as a
guarantee that two events are not related to the same “real world” event or
state change.</t>
  <t hangText='event_subject'><vspace blankLines='0'/>
  A Subject Identifier that identifies the subject of the event.  (See:
<xref target="subject"></xref>) This claim is REQUIRED.</t>
  <t hangText='event_time'><vspace blankLines='0'/>
  A number identifying the date and time at which the event is believed to
  have occurred or will occur in the future.  Its value MUST take the form
  of a NumericDate value, as defined in Section 2 of <xref target="RFC7519"></xref>.  This claim
  is OPTIONAL, however if it is not present then the recipient MUST
  interpret that to mean that no event time is being asserted, either
  because there is no specific event time, the transmitter does not wish to
  share it, or the transmitter does not know its value.</t>
</list></t>

<t>Both the SET envelope and event payload MAY contain additional claims, such
as those defined in a Profiling Specification.  The format and meaning of
these claims is out of scope of this specification.  Implementations SHOULD
ignore any claims in the SET envelope or event payload that they do not
understand.</t>

<t>The following is a non-normative example showing a SET envelope expressing
a hypothetical event with two additional claims in the event payload:</t>

<figure title="Example SET With Event Claims In Payload" anchor="figset"><artwork><![CDATA[
{
  "jti": "3d0c3cf797584bd193bd0fb1bd4e7d30",
  "iss": "https://transmitter.example.com",
  "aud": [ "https://receiver.example.com" ],
  "iat": 1458496025,
  "event": {
    "event_type": "https://secevent.example.com/example_event",
    "event_subject": {
      "identifier_type": "urn:ietf:params:secevent:subject:email",
      "email": "user@example.com"
    },
    "event_time": 1458492425,
    "claim_1": "foo",
    "claim_2": "bar"
  }
}
]]></artwork></figure>

<t>The payload in this example contains the following:</t>

<t><list style="symbols">
  <t>An “event_type” claim whose value is the URI identifying the
hypothetical event type.</t>
  <t>An “event_subject” claim whose value identifies a subject via email
address.</t>
  <t>An “event_time” claim whose value is the time at which the event occured.</t>
  <t>Two claims “claim_1” and “claim_2” that are defined by the hypothetical 
event type’s Profiling Specification.</t>
</list></t>

</section>
<section anchor="subject" title="Subject Identifiers">
<t>In many cases, it is necessary to explicitly identify the subject of the
security event within a SET.  The Subject Identifier provides a common
syntax for expressing subject identity within a SET.  A Subject Identifier
is a JSON object representing an instance of a Subject Identifier Type.  A
Subject Identifier Type defines a set of one or more claims about a subject
that when taken together collectively identify that subject.  Subject
Identifier Types MUST be registered in the IANA “SET Subject Identifier
Types” registry established by <xref target="iana-sit"></xref>.</t>

<t>A Subject Identifier MUST contain an “identifier_type” claim, whose value is
the URN identifying the Subject Identifier Type being represented by the
Subject Identifier.  All other claims within the Subject Identifier MUST be
defined by the Subject Identifier Type.</t>

<t>The Subject Identifier Types defined below are registered in the IANA “SET
Subject Identifier Types” registry established by <xref target="iana-sit"></xref>.</t>

<section anchor="implicit-identifier-type" title="Implicit Identifier Type">
<t>The “Implicit” Subject Identifier Type contains a single claim:</t>

<t><list style="hanging">
  <t hangText='implicit'><vspace blankLines='0'/>
  A boolean value. The value of this claim must be true. This claim is
REQUIRED.</t>
</list></t>

<t>Recipients MUST interpret the presence of this Subject Identifier Type as
meaning that the actual subject can be determined implicitly, either through
other claims in the SET envelope or event payload, or through other some
other context. For example, there may be event types for which the only
logical subject is the transmitter itself, in which case the subject is
implicitly known from the “iss” claim in the SET envelope.</t>

<t>The following is a non-normative example of a Subject Identifier
representing an instance of the Implicit Subject Identifier Type:</t>

<figure title="An Instance of the Implicit Subject Identifier Type" anchor="figimplicit"><artwork><![CDATA[
{
  "identifier_type": "urn:ietf:params:secevent:subject:implicit",
  "implicit": true
}
]]></artwork></figure>

</section>
<section anchor="email-subject-identifier-type" title="Email Subject Identifier Type">
<t>The “Email” Subject Identifier Type contains a single claim:</t>

<t><list style="hanging">
  <t hangText='email'><vspace blankLines='0'/>
  A string containing an email address.  Its value SHOULD conform to
<xref target="RFC5322"></xref>.  This claim is REQUIRED.</t>
</list></t>

<t>The following is a non-normative example of a Subject Identifier
representing an instance of the Email Subject Identifier Type:</t>

<figure title="An Instance of the Email Subject Identifier Type" anchor="figemail"><artwork><![CDATA[
{
  "identifier_type": "urn:ietf:params:secevent:subject:email",
  "email": "user@example.com"
}
]]></artwork></figure>

</section>
<section anchor="phone-subject-identifier-type" title="Phone Subject Identifier Type">
<t>The “Phone” Subject Identifier Type contains a single claim:</t>

<t><list style="hanging">
  <t hangText='phone_number'><vspace blankLines='0'/>
  A string containing a phone number.  It SHOULD be formatted according to
<xref target="E.164"></xref>.  This claim is REQUIRED.</t>
</list></t>

<t>The following is a non-normative example of a Subject Identifier
representing an instance of the Phone Subject Identifier Type:</t>

<figure title="An Instance of the Phone Subject Identifier Type" anchor="figphone"><artwork><![CDATA[
{
  "identifier_type": "urn:ietf:params:secevent:subject:phone",
  "phone_number": "+1 206 555 0123"
}
]]></artwork></figure>

</section>
<section anchor="issuer-and-subject-subject-identifier-type" title="Issuer and Subject Subject Identifier Type">
<t>The “Issuer and Subject” Subject Identifier Type contains two claims:</t>

<t><list style="hanging">
  <t hangText='iss'><vspace blankLines='0'/>
  A case-sensitive string identifying the principal who is responsible for
assignment of the identifier in the “sub” claim.  This claim MUST adhere to
the format of the “iss” claim defined by Section 4.1.1 of <xref target="RFC7519"></xref>.  This
claim is REQUIRED.</t>
  <t hangText='sub'><vspace blankLines='0'/>
  A case-sensitive string containing an identifier that identifies a subject
within the context of the principal identified by the “iss” claim.  This
claim MUST adhere to the format of the “sub” claim defined by Section 4.1.2
of <xref target="RFC7519"></xref>.  This claim is REQUIRED.</t>
</list></t>

<t>The following is a non-normative example of a Subject Identifier
representing an instance of the Issuer and Subject Subject Identifier Type:</t>

<figure title="An Instance of the Issuer and Subject Subject Identifier Type" anchor="figisssub"><artwork><![CDATA[
{
  "identifier_type": "urn:ietf:params:secevent:subject:iss-sub",
  "iss": "http://id.example.com",
  "sub": "example.user.1234"
}
]]></artwork></figure>

</section>
</section>
<section anchor="set-type" title="Explicit Typing of SETs">
<t>This specification registers the “application/secevent+jwt” media
type.  SETs MAY include this media type in the “typ” header parameter of
the JWT containing the SET to explicitly declare that the JWT is a SET.
This MUST be included if the SET could be used in an application context
in which it could be confused with other kinds of JWTs.  Profiling
Specifications MAY declare that this is REQUIRED for SETs containing events
defined by the Profiling Specification.</t>

<t>Per the definition of “typ” in Section 4.1.9 of <xref target="RFC7515"></xref>, it is
RECOMMENDED that the “application/” prefix be omitted.  Therefore,
the “typ” value used SHOULD be “secevent+jwt”.</t>

</section>
<section anchor="construction" title="Security Event Token Construction">
<t>A SET is a JWT, and therefore it’s construction follows that described in
<xref target="RFC7519"></xref>.</t>

<t>While this specification uses JWT to convey a SET, implementers SHALL
NOT use SETs to convey authentication or authorization assertions.</t>

<t>The following is the example JWT Claims Set from <xref target="figset"></xref>, expressed as
an unsigned JWT.  The JOSE Header is:</t>

<figure><artwork><![CDATA[
{"typ":"secevent+jwt","alg":"none"}
]]></artwork></figure>

<t>Base64url encoding of the octets of the UTF-8 representation of the
JOSE Header yields:</t>

<figure><artwork><![CDATA[
eyJ0eXAiOiJzZWNldmVudCtqd3QiLCJhbGciOiJub25lIn0
]]></artwork></figure>

<t>The example JWT Claims Set is encoded as follows:</t>

<figure><artwork><![CDATA[
ewogICAgICJqdGkiOiAiM2QwYzNjZjc5NzU4NGJkMTkzYmQwZmIxYmQ0ZTdkMzAiLAog
ICAgICJpc3MiOiAiaHR0cHM6Ly90cmFuc21pdHRlci5leGFtcGxlLmNvbSIsCiAgICAg
ImF1ZCI6IFsgImh0dHBzOi8vcmVjZWl2ZXIuZXhhbXBsZS5jb20iIF0sCiAgICAgImlh
dCI6IDE0NTg0OTYwMjUsCiAgICAgInRvZSI6IDE0NTg0OTI0MjUsCiAgICAgInR4biI6
ICI1YmI0ZGRkMi0zZTc3LTRlMGItYTQwNi0wM2M4ZmRjMjg3YzIiLAogICAgICJldmVu
dCI6IHsKICAgICAgICJldmVudF90eXBlIjogImh0dHBzOi8vc2VjZXZlbnQuZXhhbXBs
ZS5jb20vZXhhbXBsZV9ldmVudCIsCiAgICAgICAic3ViIjogewogICAgICAgICAiaWRl
bnRpZmllcl90eXBlIjogInVybjppZXRmOnBhcmFtczpzZWNldmVudDpzdWJqZWN0OmVt
YWlsIiwKICAgICAgICAgImVtYWlsIjogInVzZXJAZXhhbXBsZS5jb20iCiAgICAgICB9
LAogICAgICAgImNsYWltXzEiOiAiZm9vIiwKICAgICAgICJjbGFpbV8yIjogImJhciIK
ICAgICB9CiAgIH0=
]]></artwork></figure>

<t>The encoded JWS signature is the empty string.  Concatenating the
parts yields the following complete JWT:</t>

<figure title="Example Unsecured Security Event Token" anchor="figsetencoded"><artwork><![CDATA[
eyJ0eXAiOiJzZWNldmVudCtqd3QiLCJhbGciOiJub25lIn0.
ewogICAgICJqdGkiOiAiM2QwYzNjZjc5NzU4NGJkMTkzYmQwZmIxYmQ0ZTdkMzAiLAog
ICAgICJpc3MiOiAiaHR0cHM6Ly90cmFuc21pdHRlci5leGFtcGxlLmNvbSIsCiAgICAg
ImF1ZCI6IFsgImh0dHBzOi8vcmVjZWl2ZXIuZXhhbXBsZS5jb20iIF0sCiAgICAgImlh
dCI6IDE0NTg0OTYwMjUsCiAgICAgInRvZSI6IDE0NTg0OTI0MjUsCiAgICAgInR4biI6
ICI1YmI0ZGRkMi0zZTc3LTRlMGItYTQwNi0wM2M4ZmRjMjg3YzIiLAogICAgICJldmVu
dCI6IHsKICAgICAgICJldmVudF90eXBlIjogImh0dHBzOi8vc2VjZXZlbnQuZXhhbXBs
ZS5jb20vZXhhbXBsZV9ldmVudCIsCiAgICAgICAic3ViIjogewogICAgICAgICAiaWRl
bnRpZmllcl90eXBlIjogInVybjppZXRmOnBhcmFtczpzZWNldmVudDpzdWJqZWN0OmVt
YWlsIiwKICAgICAgICAgImVtYWlsIjogInVzZXJAZXhhbXBsZS5jb20iCiAgICAgICB9
LAogICAgICAgImNsYWltXzEiOiAiZm9vIiwKICAgICAgICJjbGFpbV8yIjogImJhciIK
ICAgICB9CiAgIH0=.
]]></artwork></figure>

<t>For the purpose of a simpler example in Figure 5, an unsecured token
was shown.  When SETs are not signed or encrypted, the Event Receiver
MUST employ other mechanisms such as TLS and HTTP to provide
integrity, confidentiality, and issuer validation, as needed by the
application.</t>

<t>When validation (i.e. auditing), or additional transmission security
is required, JWS signing and/or JWE encryption MAY be used.  To
create and or validate a signed and/or encrypted SET, follow the
instructions in Section 7 of <xref target="RFC7519"></xref>.</t>

</section>
</section>
<section anchor="related-events" title="Related Events">
<t>In order to accommodate use cases that require communicating multiple
related security events to an Event Receiver, this section defines the
“Related Events” event type. A Related Events event is essentially a
container for two or more events that are related to one another, in
that they are all related to the same “real world” event or state
change. The Related Events event SHOULD NOT be used to combine
unrelated events into a single set, and MUST NOT be used as a general
purpose batch transmission mechanism. Profiling Specifications and/or
implementers who desire an event grouping mechanism with these or
other semantics are encouraged to profile this specification and
define additional event types for those use cases.
/* ed.: Trying to minimize ambiguity around semantics of event grouping. */</t>

<t>The URN for the Related Events event is “urn:ietf:secevents:related_events”.</t>

<t>The Related Events event has a single additional event payload claim:</t>

<t><list style="hanging">
  <t hangText='events'><vspace blankLines='0'/>
  An array of event payloads, as defined in this document.</t>
</list></t>

<t>For all purposes, the Related Events event’s envelope is considered the
envelope for all events described in the “events” payload claim. SETs
containing a Related Events event MUST comply with the requirements set by
the Profiling Specifications for every event described in the “events”
payload claim. If two or more events’ requirements contradict one another,
those events MUST NOT be combined within the same Related Events event.
/* ed.: Cutting down on opportunities for confusing, impossible SETs. */</t>

<t>All events described in the “events” claim MUST express their subjects in
such a way as to not conflict with the other events. They do not have to
identify their subjects in the same way; two events that support disjoint
sets of Subject Identifier Types but specify their subject using the “sub”
event payload claim defined in <xref target="claims"></xref> can coexist within a Related
Events event, as the subject for each event would reside within the
respective event’s event payload. However, if both events specified their
subject using the “sub” envelope claim, they would be in conflict with one
another, as it would not be possible to assign a value to the “sub” envelope
claim that satisfies the requirements of both events’ Profiling
Specifications.
/* ed.: This is just a specific case of above paragraph, but sub has been a
sticking point so calling it out seems like a good idea. */</t>

<t>The “sub” event payload claim MUST NOT be used with the Related Events
event. 
/* ed.: Trying to avoid complicated “find the subject” logic */</t>

<t>The following is a non-normative example of a SET containing a Related
Events event:</t>

<figure title="Example SET Containing A Related Events Event" anchor="figrelated"><artwork><![CDATA[
{
  "jti": "1c0038c2-02db-40de-ad50-122a64724166",
  "iss": "https://transmitter.example.com",
  "aud": [ "https://receiver.example.com" ],
  "iat": 1510666261,
  "event": {
    "event_type": "urn:ietf:secevent:related_events",
    "event_subject": {
      "identifier_type": "urn:ietf:params:secevent:subject:email",
      "email": "user@example.com"
    },
    "event_time": 1510662661,
    "events": [
      {
        "event_type": "http://specs.example.com/set_profile/event_1"
      },
      {
        "event_type": "http://specs.example.com/set_profile/event_2"
      }
    ]
  }
}
]]></artwork></figure>

</section>
<section anchor="profile-req" title="Requirements for SET Profiles">
<t>Profiling Specifications for SETs define the syntax and semantics of
SETs conforming to that SET profile and rules for validating those
SETs.  The syntax defined by Profiling Specifications includes what
SET envelope and event payload claims are used by SETs expressing and
event defined by the profile.</t>

<t>Defining the semantics of the SET contents for SETs utilizing the
profile is equally important.  Possibly most important is defining
the procedures used to validate the SET issuer and to obtain the keys
controlled by the issuer that were used for cryptographic operations
used in the JWT representing the SET.  For instance, some profiles
may define an algorithm for retrieving the SET issuer’s keys that
uses the “iss” claim value as its input.  Likewise, if the profile
allows (or requires) that the JWT be unsecured, the means by which
the integrity of the JWT is ensured MUST be specified.</t>

<t>Profiling Specifications MUST define how the event Subject is
identified in the SET, as well as how to differentiate between the
event Subject’s Issuer and the SET Issuer, if applicable.  It is NOT
RECOMMENDED for Profiling Specifications to use the “sub” claim 
defined in <xref target="RFC7519"></xref> in cases in which the Subject is not globally
unique and has a different Issuer from the SET itself.</t>

<t>Profiling Specifications MUST clearly specify the steps that a
recipient of a SET utilizing that profile MUST perform to validate
that the SET is both syntactically and semantically valid.</t>

<section anchor="extensions" title="Extending Events">
<t>As needs change and new use cases develop, it may be desirable to augment
existing event definitions with new claims. To enable this, Profiling
Specifications MAY define extensions to existing event types. An event
extension consists of a set of one or more event payload claim definitions
that provide the extra information expressed by the extension, and a set of
URIs that identify the event types to which the event extension may be
applied.
/* ed.: Is it necessary to identify which event extensions are being used on
an event? Is “duck typing” good enough here? */</t>

<t>Event extensions SHOULD be defined in documents that are produced through
the same standardization process as the documents that define the event
types being extended. For example, if an event type is defined in an RFC
produced by an IETF working group, event extensions that apply to that event
SHOULD be defined by that same working group. This helps to minimize the
possibility of redundant or conflicting event extensions, and ensure that
event extension creators have the proper context for the events they are
extending.
/* ed.: Guidance on avoiding name conflict with extension claims: put it
here, or in an implementation considerations section? */</t>

</section>
</section>
<section anchor="security" title="Security Considerations">

<section anchor="c-and-i" title="Confidentiality and Integrity">
<t>SETs may often contain sensitive information.  Therefore, methods for
distribution of events SHOULD require the use of a transport-layer
security mechanism when distributing events.  Parties MUST support
TLS 1.2 <xref target="RFC5246"></xref> and MAY support additional transport-layer
mechanisms meeting its security requirements.  When using TLS, the
client MUST perform a TLS/SSL server certificate check, per
<xref target="RFC6125"></xref>.  Implementation security considerations for TLS can be
found in “Recommendations for Secure Use of TLS and DTLS” <xref target="RFC7525"></xref>.</t>

<t>Security Events distributed through third-parties or that carry
personally identifiable information, SHOULD be encrypted using JWE
<xref target="RFC7516"></xref> or secured for confidentiality by other means.</t>

<t>Unless integrity of the JWT is ensured by other means, it MUST be
signed using JWS <xref target="RFC7515"></xref> so that individual events can be
authenticated and validated by the Event Receiver.</t>

</section>
<section anchor="delivery" title="Delivery">
<t>This specification does not define a delivery mechanism by itself.
In addition to confidentiality and integrity (discussed above),
implementers and Profiling Specifications MUST consider the
consequences of delivery mechanisms that are not secure and/or not
assured.  For example, while a SET may be end-to-end secured using
JWE encrypted SETs, without TLS there is no assurance that the
correct endpoint received the SET and that it could be successfully
processed.</t>

</section>
<section anchor="sequencing" title="Sequencing">
<t>As defined in this specification, there is no defined way to order
multiple SETs in a sequence.  Depending on the type and nature of SET
event, order may or may not matter.  For example, in provisioning,
event order is critical – an object could not be modified before it
was created.  In other SET types, such as a token revocation, the
order of SETs for revoked tokens does not matter.  If however, the
event was described as a log-in or logged-out status for a user
subject, then order becomes important.</t>

<t>Profiling Specifications and implementers SHOULD take caution when
using timestamps such as “iat” to define order.  Distributed systems
will have some amount of clock-skew and thus time by itself will not
guarantee order.</t>

<t>Specifications profiling SET SHOULD define a mechanism for detecting
order or sequence of events.</t>

</section>
<section anchor="timing" title="Timing Issues">
<t>When SETs are delivered asynchronously and/or out-of-band with
respect to the original action that incurred the security event, it
is important to consider that a SET might be delivered to an Event
Receiver in advance or well behind the process that caused the event.
For example, a user having been required to logout and then log back
in again, may cause a logout SET to be issued that may arrive at the
same time as the user-agent accesses a web site having just logged-
in.  If timing is not handled properly, the effect would be to
erroneously treat the new user session as logged out.  Profiling
Specifications SHOULD be careful to anticipate timing and subject
selection information.  For example, it might be more appropriate to
cancel a “session” rather than a “user”.  Alternatively, the
specification could use timestamps that allows new sessions to be
started immediately after a stated logout event time.</t>

</section>
<section anchor="not-id-tokens" title="Distinguishing SETs from ID Tokens">
<t>Because <xref target="RFC7519"></xref> states that “all claims that are not understood by
implementations MUST be ignored”, there is a consideration that a SET
token might be confused with ID Token <xref target="OpenID.Core"></xref> if a SET is
mistakenly or intentionally used in a context requiring an ID Token.
If a SET could otherwise be interpreted as a valid ID Token (because
it includes the required claims for an ID Token and valid issuer and
audience claim values for an ID Token) then that SET profile MUST
require that the “exp” claim not be present in the SET.  Because
“exp” is a required claim in ID Tokens, valid ID Token
implementations will reject such a SET if presented as if it were an
ID Token.</t>

<t>Excluding “exp” from SETs that could otherwise be confused with ID
Tokens is actually defense in depth.  In any OpenID Connect contexts
in which an attacker could attempt to substitute a SET for an ID
Token, the SET would actually already be rejected as an ID Token
because it would not contain the correct “nonce” claim value for the
ID Token to be accepted in contexts for which substitution is
possible.</t>

<t>Note that the use of explicit typing, as described in Section 2.2,
will not achieve disambiguation between ID Tokens and SETs, as the ID
Token validation rules do not use the “typ” header parameter value.</t>

</section>
<section anchor="not-access-tokens" title="Distinguishing SETs from Access Tokens">
<t>OAuth 2.0 <xref target="RFC6749"></xref> defines access tokens as being opaque.
Nonetheless, some implementations implement access tokens as JWTs.
Because the structure of these JWTs is implementation-specific,
ensuring that a SET cannot be confused with such an access token is
therefore likewise, in general, implementation specific.
Nonetheless, it is recommended that SET profiles employ the following
strategies to prevent possible substitutions of SETs for access
tokens in contexts in which that might be possible:</t>

<t><list style="symbols">
  <t>Prohibit use of the “exp” claim, as is done to prevent ID Token
confusion.</t>
  <t>Where possible, use a separate “aud” claim value to distinguish
between the Event Receiver and the protected resource that is the
audience of an access token.</t>
  <t>Modify access token validation systems to check for the presence
of the “events” claim as a means to detect security event tokens.
This is particularly useful if the same endpoint may receive both
types of tokens.</t>
  <t>Employ explicit typing, as described in Section 2.2, and modify
access token validation systems to use the “typ” header parameter
value.</t>
</list></t>

</section>
<section anchor="not-other-jwts" title="Distinguishing SETs from other kinds of JWTs">
<t>JWTs are now being used in application areas beyond the identity
applications in which they first appeared.  For instance, the Session
Initiation Protocol (SIP) Via Header Field <xref target="RFC8055"></xref> and Personal
Assertion Token (PASSporT) <xref target="I-D.ietf-stir-passport"></xref> specifications
both define JWT profiles that use mostly or completely different sets
of claims than are used by ID Tokens.  If it would otherwise be
possible for an attacker to substitute a SET for one of these (or
other) kinds of JWTs, then the SET profile must be defined in such a
way that any substituted SET will result in its rejection when
validated as the intended kind of JWT.</t>

<t>The most direct way to prevent confusion is to employ explicit
typing, as described in Section 2.2, and modify applicable token
validation systems to use the “typ” header parameter value.  This
approach can be employed for new systems but may not be applicable to
existing systems.</t>

<t>Another way to ensure that a SET is not confused with another kind of
JWT is to have the JWT validation logic reject JWTs containing an
“events” claim unless the JWT is intended to be a SET.  This approach
can be employed for new systems but may not be applicable to existing
systems.</t>

<t>For many use cases, the simplest way to prevent substitution is
requiring that the SET not include claims that are required for the
kind of JWT that might be the target of an attack.  For example, for
<xref target="RFC8055"></xref>, the “sip_callid” claim could be omitted and for
<xref target="I-D.ietf-stir-passport"></xref>, the “orig” claim could be omitted.</t>

<t>In many contexts, simple measures such as these will accomplish the
task, should confusion otherwise even be possible.  Note that this
topic is being explored in a more general fashion in JSON Web Token
Best Current Practices <xref target="I-D.sheffer-oauth-jwt-bcp"></xref>.  The proposed
best practices in that draft may also be applicable for particular
SET profiles and use cases.</t>

</section>
</section>
<section anchor="privacy" title="Privacy Considerations">
<t>If a SET needs to be retained for audit purposes, JWS MAY be used to
provide verification of its authenticity.</t>

<t>Event Transmitters SHOULD attempt to specialize feeds so that the
content is targeted to the specific business and protocol needs of an
Event Receiver.</t>

<t>When sharing personally identifiable information or information that
is otherwise considered confidential to affected users, Event
Transmitters and Receivers MUST have the appropriate legal agreements
and user consent or terms of service in place.</t>

<t>The propagation of subject identifiers can be perceived as personally
identifiable information.  Where possible, Event Transmitters and
Receivers SHOULD devise approaches that prevent propagation – for
example, the passing of a hash value that requires the Event Receiver
to know the subject.</t>

</section>
<section anchor="iana" title="IANA Considerations">

<section anchor="iana-sit" title="SET Subject Identifier Types Registry">
<t>This section establishes the IANA “SET Subject Identifier Types” registry
// TODO</t>

</section>
<section anchor="iana-claims" title="JSON Web Token Claims Registration">
<t>This specification registers the “event” claim in the IANA “JSON Web Token
Claims” registry <xref target="IANA.JWT.Claims"></xref> established by <xref target="RFC7519"></xref>.</t>

<section anchor="registry-contents" title="Registry Contents">
<t><list style="symbols">
  <t>Claim Name: “event”</t>
  <t>Claim Description: Security Event Payload</t>
  <t>Change Controller: IESG</t>
  <t>Specification Document(s): Section 2.1 of [[ this specification ]]</t>
</list></t>

</section>
</section>
<section anchor="iana-media-type" title="Media Type Registration">

<section anchor="registry-contents-1" title="Registry Contents">
<t>This section registers the “application/secevent+jwt” media type
<xref target="RFC2046"></xref> in the “Media Types” registry <xref target="IANA.MediaTypes"></xref> in the
manner described in <xref target="RFC6838"></xref>, which can be used to indicate that the
content is a SET.</t>

<t><list style="symbols">
  <t>Type name: application</t>
  <t>Subtype name: secevent+jwt</t>
  <t>Required parameters: n/a</t>
  <t>Optional parameters: n/a</t>
  <t>Encoding considerations: 8bit; A SET is a JWT; JWT values are
encoded as a series of base64url-encoded values (some of which may
be the empty string) separated by period (‘.’) characters.</t>
  <t>Security considerations: See the Security Considerations section
of [[ this specification ]]</t>
  <t>Interoperability considerations: n/a</t>
  <t>Published specification: Section 2.2 of [[ this specification ]]</t>
  <t>Applications that use this media type: TBD</t>
  <t>Fragment identifier considerations: n/a</t>
  <t>Additional information:</t>
  <t>Magic number(s): n/a</t>
  <t>File extension(s): n/a</t>
  <t>Macintosh file type code(s): n/a</t>
  <t>Person &amp; email address to contact for further information:
Michael B. Jones, mbj@microsoft.com</t>
  <t>Intended usage: COMMON</t>
  <t>Restrictions on usage: none</t>
  <t>Author: Michael B. Jones, mbj@microsoft.com</t>
  <t>Change controller: IESG</t>
  <t>Provisional registration?  No</t>
</list></t>

</section>
</section>
</section>


  </middle>

  <back>

    <references title='Normative References'>

<reference anchor="IANA.JWT.Claims" target="http://www.iana.org/assignments/jwt">
  <front>
    <title>JSON Web Token Claims</title>
    <author >
      <organization>IANA</organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="IANA.MediaTypes" target="http://www.iana.org/assignments/media-types">
  <front>
    <title>Media Types</title>
    <author >
      <organization>IANA</organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>




<reference  anchor="RFC2119" target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC3986" target='https://www.rfc-editor.org/info/rfc3986'>
<front>
<title>Uniform Resource Identifier (URI): Generic Syntax</title>
<author initials='T.' surname='Berners-Lee' fullname='T. Berners-Lee'><organization /></author>
<author initials='R.' surname='Fielding' fullname='R. Fielding'><organization /></author>
<author initials='L.' surname='Masinter' fullname='L. Masinter'><organization /></author>
<date year='2005' month='January' />
<abstract><t>A Uniform Resource Identifier (URI) is a compact sequence of characters that identifies an abstract or physical resource.  This specification defines the generic URI syntax and a process for resolving URI references that might be in relative form, along with guidelines and security considerations for the use of URIs on the Internet.  The URI syntax defines a grammar that is a superset of all valid URIs, allowing an implementation to parse the common components of a URI reference without knowing the scheme-specific requirements of every possible identifier.  This specification does not define a generative grammar for URIs; that task is performed by the individual specifications of each URI scheme.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='STD' value='66'/>
<seriesInfo name='RFC' value='3986'/>
<seriesInfo name='DOI' value='10.17487/RFC3986'/>
</reference>



<reference  anchor="RFC5246" target='https://www.rfc-editor.org/info/rfc5246'>
<front>
<title>The Transport Layer Security (TLS) Protocol Version 1.2</title>
<author initials='T.' surname='Dierks' fullname='T. Dierks'><organization /></author>
<author initials='E.' surname='Rescorla' fullname='E. Rescorla'><organization /></author>
<date year='2008' month='August' />
<abstract><t>This document specifies Version 1.2 of the Transport Layer Security (TLS) protocol.  The TLS protocol provides communications security over the Internet.  The protocol allows client/server applications to communicate in a way that is designed to prevent eavesdropping, tampering, or message forgery.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5246'/>
<seriesInfo name='DOI' value='10.17487/RFC5246'/>
</reference>



<reference  anchor="RFC5322" target='https://www.rfc-editor.org/info/rfc5322'>
<front>
<title>Internet Message Format</title>
<author initials='P.' surname='Resnick' fullname='P. Resnick' role='editor'><organization /></author>
<date year='2008' month='October' />
<abstract><t>This document specifies the Internet Message Format (IMF), a syntax for text messages that are sent between computer users, within the framework of &quot;electronic mail&quot; messages.  This specification is a revision of Request For Comments (RFC) 2822, which itself superseded Request For Comments (RFC) 822, &quot;Standard for the Format of ARPA Internet Text Messages&quot;, updating it to reflect current practice and incorporating incremental changes that were specified in other RFCs.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5322'/>
<seriesInfo name='DOI' value='10.17487/RFC5322'/>
</reference>



<reference  anchor="RFC6125" target='https://www.rfc-editor.org/info/rfc6125'>
<front>
<title>Representation and Verification of Domain-Based Application Service Identity within Internet Public Key Infrastructure Using X.509 (PKIX) Certificates in the Context of Transport Layer Security (TLS)</title>
<author initials='P.' surname='Saint-Andre' fullname='P. Saint-Andre'><organization /></author>
<author initials='J.' surname='Hodges' fullname='J. Hodges'><organization /></author>
<date year='2011' month='March' />
<abstract><t>Many application technologies enable secure communication between two entities by means of Internet Public Key Infrastructure Using X.509 (PKIX) certificates in the context of Transport Layer Security (TLS). This document specifies procedures for representing and verifying the identity of application services in such interactions.   [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6125'/>
<seriesInfo name='DOI' value='10.17487/RFC6125'/>
</reference>



<reference  anchor="RFC6749" target='https://www.rfc-editor.org/info/rfc6749'>
<front>
<title>The OAuth 2.0 Authorization Framework</title>
<author initials='D.' surname='Hardt' fullname='D. Hardt' role='editor'><organization /></author>
<date year='2012' month='October' />
<abstract><t>The OAuth 2.0 authorization framework enables a third-party application to obtain limited access to an HTTP service, either on behalf of a resource owner by orchestrating an approval interaction between the resource owner and the HTTP service, or by allowing the third-party application to obtain access on its own behalf.  This specification replaces and obsoletes the OAuth 1.0 protocol described in RFC 5849.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6749'/>
<seriesInfo name='DOI' value='10.17487/RFC6749'/>
</reference>



<reference  anchor="RFC7519" target='https://www.rfc-editor.org/info/rfc7519'>
<front>
<title>JSON Web Token (JWT)</title>
<author initials='M.' surname='Jones' fullname='M. Jones'><organization /></author>
<author initials='J.' surname='Bradley' fullname='J. Bradley'><organization /></author>
<author initials='N.' surname='Sakimura' fullname='N. Sakimura'><organization /></author>
<date year='2015' month='May' />
<abstract><t>JSON Web Token (JWT) is a compact, URL-safe means of representing claims to be transferred between two parties.  The claims in a JWT are encoded as a JSON object that is used as the payload of a JSON Web Signature (JWS) structure or as the plaintext of a JSON Web Encryption (JWE) structure, enabling the claims to be digitally signed or integrity protected with a Message Authentication Code (MAC) and/or encrypted.</t></abstract>
</front>
<seriesInfo name='RFC' value='7519'/>
<seriesInfo name='DOI' value='10.17487/RFC7519'/>
</reference>



<reference  anchor="RFC7525" target='https://www.rfc-editor.org/info/rfc7525'>
<front>
<title>Recommendations for Secure Use of Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS)</title>
<author initials='Y.' surname='Sheffer' fullname='Y. Sheffer'><organization /></author>
<author initials='R.' surname='Holz' fullname='R. Holz'><organization /></author>
<author initials='P.' surname='Saint-Andre' fullname='P. Saint-Andre'><organization /></author>
<date year='2015' month='May' />
<abstract><t>Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS) are widely used to protect data exchanged over application protocols such as HTTP, SMTP, IMAP, POP, SIP, and XMPP.  Over the last few years, several serious attacks on TLS have emerged, including attacks on its most commonly used cipher suites and their modes of operation.  This document provides recommendations for improving the security of deployed services that use TLS and DTLS. The recommendations are applicable to the majority of use cases.</t></abstract>
</front>
<seriesInfo name='BCP' value='195'/>
<seriesInfo name='RFC' value='7525'/>
<seriesInfo name='DOI' value='10.17487/RFC7525'/>
</reference>


<reference anchor="E.164" target="http://www.itu.int/rec/T-REC-E.164-201011-I/en">
  <front>
    <title>The international public telecommunication numbering plan</title>
    <author >
      <organization>International Telecommunication Union</organization>
    </author>
    <date year="2010"/>
  </front>
</reference>


    </references>

    <references title='Informative References'>





<reference anchor="I-D.ietf-stir-passport">
<front>
<title>Personal Assertion Token (PASSporT)</title>

<author initials='C' surname='Wendt' fullname='Chris Wendt'>
    <organization />
</author>

<author initials='J' surname='Peterson' fullname='Jon Peterson'>
    <organization />
</author>

<date month='February' day='9' year='2017' />

<abstract><t>This document defines a method for creating and validating a token that cryptographically verifies an originating identity, or more generally a URI or telephone number representing the originator of personal communications.  The PASSporT token is cryptographically signed to protect the integrity of the identity the originator and to verify the assertion of the identity information at the destination. The cryptographic signature is defined with the intention that it can confidently verify the originating persona even when the signature is sent to the destination party over an insecure channel.  PASSporT is particularly useful for many personal communications applications over IP networks and other multi-hop interconnection scenarios where the originating and destination parties may not have a direct trusted relationship.</t></abstract>

</front>

<seriesInfo name='Internet-Draft' value='draft-ietf-stir-passport-11' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-ietf-stir-passport-11.txt' />
</reference>



<reference anchor="I-D.sheffer-oauth-jwt-bcp">
<front>
<title>JSON Web Token Best Current Practices</title>

<author initials='Y' surname='Sheffer' fullname='Yaron Sheffer'>
    <organization />
</author>

<author initials='D' surname='Hardt' fullname='Dick Hardt'>
    <organization />
</author>

<author initials='M' surname='Jones' fullname='Michael Jones'>
    <organization />
</author>

<date month='July' day='3' year='2017' />

<abstract><t>JSON Web Tokens, also known as JWTs [RFC7519], are URL-safe JSON- based security tokens that contain a set of claims that can be signed and/or encrypted.  JWTs are being widely used and deployed as a simple security token format in numerous protocols and applications, both in the area of digital identity, and in other application areas. The goal of this Best Current Practices document is to provide actionable guidance leading to secure implementation and deployment of JWTs.</t></abstract>

</front>

<seriesInfo name='Internet-Draft' value='draft-sheffer-oauth-jwt-bcp-01' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-sheffer-oauth-jwt-bcp-01.txt' />
</reference>


<reference anchor="OpenID.Core" target="http://openid.net/specs/openid-connect-core-1_0.html">
  <front>
    <title>OpenID Connect Core 1.0</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>




<reference  anchor="RFC2046" target='https://www.rfc-editor.org/info/rfc2046'>
<front>
<title>Multipurpose Internet Mail Extensions (MIME) Part Two: Media Types</title>
<author initials='N.' surname='Freed' fullname='N. Freed'><organization /></author>
<author initials='N.' surname='Borenstein' fullname='N. Borenstein'><organization /></author>
<date year='1996' month='November' />
<abstract><t>This second document defines the general structure of the MIME media typing system and defines an initial set of media types.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='2046'/>
<seriesInfo name='DOI' value='10.17487/RFC2046'/>
</reference>



<reference  anchor="RFC6838" target='https://www.rfc-editor.org/info/rfc6838'>
<front>
<title>Media Type Specifications and Registration Procedures</title>
<author initials='N.' surname='Freed' fullname='N. Freed'><organization /></author>
<author initials='J.' surname='Klensin' fullname='J. Klensin'><organization /></author>
<author initials='T.' surname='Hansen' fullname='T. Hansen'><organization /></author>
<date year='2013' month='January' />
<abstract><t>This document defines procedures for the specification and registration of media types for use in HTTP, MIME, and other Internet protocols.  This memo documents an Internet Best Current Practice.</t></abstract>
</front>
<seriesInfo name='BCP' value='13'/>
<seriesInfo name='RFC' value='6838'/>
<seriesInfo name='DOI' value='10.17487/RFC6838'/>
</reference>



<reference  anchor="RFC7515" target='https://www.rfc-editor.org/info/rfc7515'>
<front>
<title>JSON Web Signature (JWS)</title>
<author initials='M.' surname='Jones' fullname='M. Jones'><organization /></author>
<author initials='J.' surname='Bradley' fullname='J. Bradley'><organization /></author>
<author initials='N.' surname='Sakimura' fullname='N. Sakimura'><organization /></author>
<date year='2015' month='May' />
<abstract><t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures.  Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification.  Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t></abstract>
</front>
<seriesInfo name='RFC' value='7515'/>
<seriesInfo name='DOI' value='10.17487/RFC7515'/>
</reference>



<reference  anchor="RFC7516" target='https://www.rfc-editor.org/info/rfc7516'>
<front>
<title>JSON Web Encryption (JWE)</title>
<author initials='M.' surname='Jones' fullname='M. Jones'><organization /></author>
<author initials='J.' surname='Hildebrand' fullname='J. Hildebrand'><organization /></author>
<date year='2015' month='May' />
<abstract><t>JSON Web Encryption (JWE) represents encrypted content using JSON-based data structures.  Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and IANA registries defined by that specification.  Related digital signature and Message Authentication Code (MAC) capabilities are described in the separate JSON Web Signature (JWS) specification.</t></abstract>
</front>
<seriesInfo name='RFC' value='7516'/>
<seriesInfo name='DOI' value='10.17487/RFC7516'/>
</reference>



<reference  anchor="RFC8055" target='https://www.rfc-editor.org/info/rfc8055'>
<front>
<title>Session Initiation Protocol (SIP) Via Header Field Parameter to Indicate Received Realm</title>
<author initials='C.' surname='Holmberg' fullname='C. Holmberg'><organization /></author>
<author initials='Y.' surname='Jiang' fullname='Y. Jiang'><organization /></author>
<date year='2017' month='January' />
<abstract><t>This specification defines a new Session Initiation Protocol (SIP) Via header field parameter, 'received-realm', which allows a SIP entity acting as an entry point to a transit network to indicate from which adjacent upstream network a SIP request is received by using a network realm value associated with the adjacent network.</t></abstract>
</front>
<seriesInfo name='RFC' value='8055'/>
<seriesInfo name='DOI' value='10.17487/RFC8055'/>
</reference>




    </references>


<section anchor="ack" title="Acknowledgments">
<t>The editors would like to thank the participants on the IETF secevent
mailing list and related working groups for their support of this
specification.</t>

</section>


  </back>

<!-- ##markdown-source:
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
MKn/DdvSdIihkAAA

-->

</rfc>

