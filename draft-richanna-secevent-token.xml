<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.3 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>

<rfc ipr="trust200902" docName="draft-richanna-secevent-token-01" category="info">

  <front>
    <title abbrev="secevent-token">Security Event Token (SET)</title>

    <author initials="A." surname="Backman" fullname="Annabelle Backman">
      <organization>Amazon</organization>
      <address>
        <email>richanna@amazon.com</email>
      </address>
    </author>
    <author initials="W." surname="Denniss" fullname="William Denniss">
      <organization>Google</organization>
      <address>
        <email>wdenniss@google.com</email>
      </address>
    </author>
    <author initials="M." surname="Ansari" fullname="Morteza Ansari">
      <organization>Cisco</organization>
      <address>
        <email>morteza.ansari@cisco.com</email>
      </address>
    </author>
    <author initials="M." surname="Jones" fullname="Michael B. Jones">
      <organization>Microsoft</organization>
      <address>
        <email>mbj@microsoft.com</email>
        <uri>http://self-issued.info/</uri>
      </address>
    </author>

    <date year="2017" month="November" day="14"/>

    <area>Security</area>
    <workgroup>secevent</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This specification defines the Security Event Token, which may be
distributed via a protocol such as HTTP.  The Security Event Token
(SET) specification profiles the JSON Web Token (JWT), which can be
optionally signed and/or encrypted.  A SET describes a statement of
fact from the perspective of an issuer that it intends to share with
one or more receivers.</t>



    </abstract>


  </front>

  <middle>


<section anchor="intro" title="Introduction">
<t>This specification defines an extensible Security Event Token (SET)
format which may be exchanged using protocols such as HTTP.  The
specification builds on the JSON Web Token (JWT) format <xref target="RFC7519"></xref> in
order to provide a self-contained token that can be optionally signed
using JSON Web Signature (JWS) <xref target="RFC7515"></xref> and/or encrypted using JSON
Web Encryption (JWE) <xref target="RFC7516"></xref>.</t>

<t>This specification profiles the use of JWT for the purpose of issuing
security event tokens (SETs).  This specification defines a base
format upon which profiling specifications define actual events and
their meanings.  Unless otherwise specified, this specification uses
non-normative example events intended to demonstrate how events may
be constructed.</t>

<t>This specification is scoped to security and identity related events.
While security event tokens may be used for other purposes, the
specification only considers security and privacy concerns relevant
to identity and personal information.</t>

<t>Security Events are not commands issued between parties.  A security
event is a statement of fact from the perspective of an issuer about
the state of a security subject (e.g., a web resource, token, IP
address, the issuer itself) that the issuer controls or is aware of,
that has changed in some way (explicitly or implicitly).  A security
subject MAY be permanent (e.g., a user account) or temporary (e.g.,
an HTTP session) in nature.  A state change could describe a direct
change of entity state, an implicit change of state or other higher-
level security statements such as:</t>

<t><list style="symbols">
  <t>The creation, modification, removal of a resource.</t>
  <t>The resetting or suspension of an account.</t>
  <t>The revocation of a security token prior to its expiry.</t>
  <t>The logout of a user session.  Or,</t>
  <t>A cumulative conclusion such as to indicate that a user has taken
over an email identifier that may have been used in the past by
another user.</t>
</list></t>

<t>While subject state changes are often triggered by a user-agent or
security-subsystem, the issuance and transmission of an event often
occurs asynchronously and in a back-channel to the action which
caused the change that generated the security event.  Subsequently,
an Event Receiver, having received a SET, validates and interprets
the received SET and takes its own independent actions, if any.  For
example, having been informed of a personal identifier being
associated with a different security subject (e.g., an email address
is being used by someone else), the Event Receiver may choose to
ensure that the new user is not granted access to resources
associated with the previous user.  Or, the Event Receiver may not
have any relationship with the subject, and no action is taken.</t>

<t>While Event Receivers will often take actions upon receiving SETs,
security events cannot be assumed to be commands or requests.  The
intent of this specification is to define a way of exchanging
statements of fact that Event Receivers may interpret for their own
purposes.  As such, SETs have no capability for error signaling other
to ensure the validation of a received SET.</t>

<section anchor="conv" title="Notational Conventions">
<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”,
“SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and
“OPTIONAL” in this document are to be interpreted as described in
<xref target="RFC2119"></xref>.  These keywords are capitalized when used to unambiguously
specify requirements of the protocol or application features and
behavior that affect the inter-operability and security of
implementations.  When these words are not capitalized, they are
meant in their natural-language sense.</t>

<t>For purposes of readability, examples are not URL encoded.
Implementers MUST percent encode URLs as described in Section 2.1 of
<xref target="RFC3986"></xref>.</t>

<t>Throughout this document, all figures MAY contain spaces and extra
line-wrapping for readability and space limitations.  Similarly, some
URIs contained within examples have been shortened for space and
readability reasons.</t>

</section>
<section anchor="defn" title="Definitions">
<t>The following definitions are used with SETs:</t>

<t><list style="hanging">
  <t hangText='Security Event Token (SET)'><vspace blankLines='0'/>
  A SET is a JWT <xref target="RFC7519"></xref> that contains an event payload describing
a security event.</t>
  <t hangText='Event Transmitter'><vspace blankLines='0'/>
  A service provider that delivers SETs to other providers known as
Event Receivers.</t>
  <t hangText='Event Receiver'><vspace blankLines='0'/>
  An Event Receiver is an entity that receives SETs through some
distribution method.  An Event Receiver is the same entity
referred as “recipient” or “receiver” in and related
specifications.  <xref target="RFC7519"></xref></t>
  <t hangText='Subject'><vspace blankLines='0'/>
  A SET describes an event or state change that has occurred about a
Subject.  A Subject may be a principal (e.g., Section 4.1.2
<xref target="RFC7519"></xref>), a web resource, an entity such as an IP address, or
the issuer itself that a SET might reference.</t>
  <t hangText='Profiling Specification'><vspace blankLines='0'/>
  A specification that uses the SET Token specification to define one or
more event types and the associated claims included.</t>
</list></t>

</section>
</section>
<section anchor="set" title="The Security Event Token (SET)">
<t>A SET is a data structure that encodes an “event payload” describing a
security event, wrapped in an “envelope” providing metadata and context
for the security event.  The SET envelope is a JWT Claims Set as defined in
<xref target="RFC7519"></xref>, consisting of a JSON object containing a set of claims.  The
event payload is a JSON object contained within the SET envelope, itself
containing claims that express information about the event, e.g. the type
of event, the subject of the event, and other information defined in a
Profiling Specification.</t>

<t>This specification defines a core set of claims for use in SET envelopes
and event payloads, however Profiling Specifications MAY define additional
claims of both types.  It is RECOMMENDED that Profiling Specifications
define claims to be used in the event payload rather than the envelope.  If
a Profiling Specification does define envelope claims, those claims SHOULD
be registered in the JWT Token Claims Registry <xref target="IANA.JWT.Claims"></xref> or have
Public Claim Names as defined in Section 4.2 of <xref target="RFC7519"></xref>.</t>

<section anchor="claims" title="SET Claims">
<t>This specification profiles the following claims defined in <xref target="RFC7519"></xref> for
use in the SET envelope:</t>

<t><list style="hanging">
  <t hangText='iss'><vspace blankLines='0'/>
  A case-sensitive string identifying the principal that issued the SET,
as defined by Section 4.1.1 of <xref target="RFC7519"></xref>.  This claim is REQUIRED.</t>
  <t hangText='aud'><vspace blankLines='0'/>
  A case-sensitive string or array of case-sensitive strings identifying
the audience for the SET, as defined by Section 4.1.3 of <xref target="RFC7519"></xref>.  This
claim is RECOMMENDED.</t>
  <t hangText='exp'><vspace blankLines='0'/>
  As defined by Section 4.1.4 of <xref target="RFC7519"></xref>, this claim is the time after
which the JWT MUST NOT be accepted for processing.  In the context of a SET
however, this notion does not apply since a SET reflects something that
has already been processed and is historical in nature.  Use of this claim
is NOT RECOMMENDED.</t>
  <t hangText='iat'><vspace blankLines='0'/>
  A value identifying the time at which the SET was issued, as defined by
Section 4.1.6 of <xref target="RFC7519"></xref>.  This claim is REQUIRED.</t>
  <t hangText='jti'><vspace blankLines='0'/>
  A unique identifier for an event, as defined by Section 4.1.7 of
<xref target="RFC7519"></xref>.  This claim is REQUIRED.</t>
</list></t>

<t>This specification defines the following new claims for use in the SET
envelope:</t>

<t><list style="hanging">
  <t hangText='event'><vspace blankLines='0'/>
  A JSON object known as the “event payload”, whose contents identify the
type of event contained within the SET and contain additional information 
defined as part of an event type definition in a Profiling Specification.</t>
</list></t>

<t>This specification defines the following claims for use in event payloads:</t>

<t><list style="hanging">
  <t hangText='event_type'><vspace blankLines='0'/>
  A string containing a URI that uniquely identifies an event type
defined by a Profiling Specification.  This claim is REQUIRED.</t>
  <t hangText='event_id'><vspace blankLines='0'/>
  A string that identifies a specific “real world” event or state change
to which this event is related. Recipients MAY use this claim to correlate
events across different SETs received at different times and/or by different
systems. The value of this claim MUST be unique with respect to the
transmitter to a specific “real world” event or state change, however
recipients MUST NOT interpret a difference in “event_id” values as a
guarantee that two events are not related to the same “real world” event or
state change.</t>
  <t hangText='event_subject'><vspace blankLines='0'/>
  A Subject Identifier that identifies the subject of the event.  (See:
<xref target="subject"></xref>) This claim is REQUIRED.</t>
  <t hangText='event_time'><vspace blankLines='0'/>
  A number identifying the date and time at which the event is believed to
  have occurred or will occur in the future.  Its value MUST take the form
  of a NumericDate value, as defined in Section 2 of <xref target="RFC7519"></xref>.  This claim
  is OPTIONAL, however if it is not present then the recipient MUST
  interpret that to mean that no event time is being asserted, either
  because there is no specific event time, the transmitter does not wish to
  share it, or the transmitter does not know its value.</t>
</list></t>

<t>Both the SET envelope and event payload MAY contain additional claims, such
as those defined in a Profiling Specification.  The format and meaning of
these claims is out of scope of this specification.  Implementations SHOULD
ignore any claims in the SET envelope or event payload that they do not
understand.</t>

<t>The following is a non-normative example showing a SET envelope expressing
a hypothetical event with two additional claims in the event payload:</t>

<figure title="Example SET With Event Claims In Payload" anchor="figset"><artwork><![CDATA[
{
  "jti": "3d0c3cf797584bd193bd0fb1bd4e7d30",
  "iss": "https://transmitter.example.com",
  "aud": [ "https://receiver.example.com" ],
  "iat": 1458496025,
  "event": {
    "event_type": "https://secevent.example.com/example_event",
    "event_subject": {
      "identifier_type": "urn:ietf:params:secevent:subject:email",
      "email": "user@example.com"
    },
    "event_time": 1458492425,
    "claim_1": "foo",
    "claim_2": "bar"
  }
}
]]></artwork></figure>

<t>The payload in this example contains the following:</t>

<t><list style="symbols">
  <t>An “event_type” claim whose value is the URI identifying the
hypothetical event type.</t>
  <t>An “event_subject” claim whose value identifies a subject via email
address.</t>
  <t>An “event_time” claim whose value is the time at which the event occured.</t>
  <t>Two claims “claim_1” and “claim_2” that are defined by the hypothetical 
event type’s Profiling Specification.</t>
</list></t>

</section>
<section anchor="subject" title="Subject Identifiers">
<t>The Subject Identifier provides a common syntax for expressing the subject
of a security event.  A Subject Identifier is a JSON object representing an
instance of a Subject Identifier Type.  A Subject Identifier Type defines a
way of identifying the subject of an event. Typically this is done by
defining a set of one or more claims about a subject that when taken
together collectively identify that subject.  Each Subject Identifier Type
MUST have a name which MUST be registered in the IANA “SET Subject
Identifier Types” registry established by <xref target="iana-sit"></xref>.</t>

<t>A Subject Identifier MUST contain an “identifier_type” claim, whose value is
a string containing the name of the Subject Identifier’s Subject Identifier
Type.  All other claims within the Subject Identifier MUST be defined by the
Subject Identifier Type.</t>

<t>The names of the Subject Identifier Types defined below are registered in
the IANA “SET Subject Identifier Types” registry established by <xref target="iana-sit"></xref>.</t>

<section anchor="implicit-subject-identifier-type" title="Implicit Subject Identifier Type">
<t>The “Implicit” Subject Identifier Type indicates that the recipient is to be
determined implicitly, either from other claims in the SET envelope or event
payload, or through some other context.  For example, there may be event
types for which the only logical subject is the transmitter itself, in which
case the subject is implicitly known from the “iss” claim in the SET
envelope.</t>

<t>The Implicit Subject Identifier Type has the name “implicit”.  This type
contains no additional claims.</t>

<t>The following is a non-normative example of a Subject Identifier
representing an instance of the Implicit Subject Identifier Type:</t>

<figure title="An Instance of the Implicit Subject Identifier Type" anchor="figimplicit"><artwork><![CDATA[
{
  "identifier_type": "implicit"
}
]]></artwork></figure>

</section>
<section anchor="email-subject-identifier-type" title="Email Subject Identifier Type">
<t>The “Email” Subject Identifier Type identifies a subject by email address.
It has the name “email”, and contains a single additional claim:</t>

<t><list style="hanging">
  <t hangText='email'><vspace blankLines='0'/>
  A string containing an email address.  Its value SHOULD conform to
<xref target="RFC5322"></xref>.  This claim is REQUIRED.</t>
</list></t>

<t>The following is a non-normative example of a Subject Identifier
representing an instance of the Email Subject Identifier Type:</t>

<figure title="An Instance of the Email Subject Identifier Type" anchor="figemail"><artwork><![CDATA[
{
  "identifier_type": "email",
  "email": "user@example.com"
}
]]></artwork></figure>

</section>
<section anchor="phone-number-subject-identifier-type" title="Phone Number Subject Identifier Type">
<t>The “Phone Number” Subject Identifier Type identifies a subject by phone
number. It has the name “phone_number”, and contains a single claim:</t>

<t><list style="hanging">
  <t hangText='phone_number'><vspace blankLines='0'/>
  A string containing a phone number.  It SHOULD be formatted according to
<xref target="E.164"></xref>.  This claim is REQUIRED.</t>
</list></t>

<t>The following is a non-normative example of a Subject Identifier
representing an instance of the Phone Number Subject Identifier Type:</t>

<figure title="An Instance of the Phone Number Subject Identifier Type" anchor="figphone"><artwork><![CDATA[
{
  "identifier_type": "phone_number",
  "phone_number": "+1 206 555 0123"
}
]]></artwork></figure>

</section>
<section anchor="issuer-and-subject-subject-identifier-type" title="Issuer and Subject Subject Identifier Type">
<t>The “Issuer and Subject” Subject Identifier Type identifies a subject by an
issuer and subject pair.  It has the name “iss-sub”, and contains two
claims:</t>

<t><list style="hanging">
  <t hangText='iss'><vspace blankLines='0'/>
  A case-sensitive string identifying the principal who is responsible for
assignment of the identifier in the “sub” claim, as defined by Section 4.1.1
of <xref target="RFC7519"></xref>.  This claim is REQUIRED.</t>
  <t hangText='sub'><vspace blankLines='0'/>
  A case-sensitive string containing an identifier that identifies a subject
within the context of the principal identified by the “iss” claim, as
defined by Section 4.1.2 of <xref target="RFC7519"></xref>.  This claim is REQUIRED.</t>
</list></t>

<t>The following is a non-normative example of a Subject Identifier
representing an instance of the Issuer and Subject Subject Identifier Type:</t>

<figure title="An Instance of the Issuer and Subject Subject Identifier Type" anchor="figisssub"><artwork><![CDATA[
{
  "identifier_type": "iss-sub",
  "iss": "http://id.example.com",
  "sub": "example.user.1234"
}
]]></artwork></figure>

</section>
</section>
<section anchor="set-type" title="Explicit Typing of SETs">
<t>This specification registers the “application/secevent+jwt” media
type.  SETs MAY include this media type in the “typ” header parameter of
the JWT containing the SET to explicitly declare that the JWT is a SET.
This MUST be included if the SET could be used in an application context
in which it could be confused with other kinds of JWTs.  Profiling
Specifications MAY declare that this is REQUIRED for SETs containing events
defined by the Profiling Specification.</t>

<t>Per the definition of “typ” in Section 4.1.9 of <xref target="RFC7515"></xref>, it is
RECOMMENDED that the “application/” prefix be omitted.  Therefore,
the “typ” value used SHOULD be “secevent+jwt”.</t>

</section>
<section anchor="construction" title="Security Event Token Construction">
<t>A SET is a JWT, and therefore it’s construction follows that described in
<xref target="RFC7519"></xref>.</t>

<t>While this specification uses JWT to convey a SET, implementers SHALL
NOT use SETs to convey authentication or authorization assertions.</t>

<t>The following is the example JWT Claims Set from <xref target="figset"></xref>, expressed as
an unsigned JWT.  The JOSE Header is:</t>

<figure><artwork><![CDATA[
{"typ":"secevent+jwt","alg":"none"}
]]></artwork></figure>

<t>Base64url encoding of the octets of the UTF-8 representation of the
JOSE Header yields:</t>

<figure><artwork><![CDATA[
eyJ0eXAiOiJzZWNldmVudCtqd3QiLCJhbGciOiJub25lIn0
]]></artwork></figure>

<t>The example JWT Claims Set is encoded as follows:</t>

<figure><artwork><![CDATA[
ew0KICAgImp0aSI6ICIzZDBjM2NmNzk3NTg0YmQxOTNiZDBmYjFiZDRlN2QzMCIsDQog
ICAiaXNzIjogImh0dHBzOi8vdHJhbnNtaXR0ZXIuZXhhbXBsZS5jb20iLA0KICAgImF1
ZCI6IFsgImh0dHBzOi8vcmVjZWl2ZXIuZXhhbXBsZS5jb20iIF0sDQogICAiaWF0Ijog
MTQ1ODQ5NjAyNSwNCiAgICJldmVudCI6IHsNCiAgICAgImV2ZW50X3R5cGUiOiAiaHR0
cHM6Ly9zZWNldmVudC5leGFtcGxlLmNvbS9leGFtcGxlX2V2ZW50IiwNCiAgICAgImV2
ZW50X3N1YmplY3QiOiB7DQogICAgICAgImlkZW50aWZpZXJfdHlwZSI6ICJlbWFpbCIs
DQogICAgICAgImVtYWlsIjogInVzZXJAZXhhbXBsZS5jb20iDQogICAgIH0sDQogICAg
ICJldmVudF90aW1lIjogMTQ1ODQ5MjQyNSwNCiAgICAgImNsYWltXzEiOiAiZm9vIiwN
CiAgICAgImNsYWltXzIiOiAiYmFyIg0KICAgfQ0KIH0=
]]></artwork></figure>

<t>The encoded JWS signature is the empty string.  Concatenating the
parts yields the following complete JWT:</t>

<figure title="Example Unsecured Security Event Token" anchor="figsetencoded"><artwork><![CDATA[
eyJ0eXAiOiJzZWNldmVudCtqd3QiLCJhbGciOiJub25lIn0.
ew0KICAgImp0aSI6ICIzZDBjM2NmNzk3NTg0YmQxOTNiZDBmYjFiZDRlN2QzMCIsDQog
ICAiaXNzIjogImh0dHBzOi8vdHJhbnNtaXR0ZXIuZXhhbXBsZS5jb20iLA0KICAgImF1
ZCI6IFsgImh0dHBzOi8vcmVjZWl2ZXIuZXhhbXBsZS5jb20iIF0sDQogICAiaWF0Ijog
MTQ1ODQ5NjAyNSwNCiAgICJldmVudCI6IHsNCiAgICAgImV2ZW50X3R5cGUiOiAiaHR0
cHM6Ly9zZWNldmVudC5leGFtcGxlLmNvbS9leGFtcGxlX2V2ZW50IiwNCiAgICAgImV2
ZW50X3N1YmplY3QiOiB7DQogICAgICAgImlkZW50aWZpZXJfdHlwZSI6ICJlbWFpbCIs
DQogICAgICAgImVtYWlsIjogInVzZXJAZXhhbXBsZS5jb20iDQogICAgIH0sDQogICAg
ICJldmVudF90aW1lIjogMTQ1ODQ5MjQyNSwNCiAgICAgImNsYWltXzEiOiAiZm9vIiwN
CiAgICAgImNsYWltXzIiOiAiYmFyIg0KICAgfQ0KIH0=.
]]></artwork></figure>

<t>For the purpose of a simpler example in Figure 5, an unsecured token
was shown.  When SETs are not signed or encrypted, the Event Receiver
MUST employ other mechanisms such as TLS and HTTP to provide
integrity, confidentiality, and issuer validation, as needed by the
application.</t>

<t>When validation (i.e. auditing), or additional transmission security
is required, JWS signing and/or JWE encryption MAY be used.  To
create and or validate a signed and/or encrypted SET, follow the
instructions in Section 7 of <xref target="RFC7519"></xref>.</t>

</section>
</section>
<section anchor="related-events" title="Related Events">
<t>In order to accommodate use cases that require communicating multiple
related security events to an Event Receiver, this section defines the
“Related Events” event type. A Related Events event is essentially a
container for two or more events that are related to one another, in
that they are all related to the same “real world” event or state
change. The Related Events event SHOULD NOT be used to combine
unrelated events into a single set, and MUST NOT be used as a general
purpose batch transmission mechanism. Profiling Specifications and/or
implementers who desire an event grouping mechanism with these or
other semantics are encouraged to profile this specification and
define additional event types for those use cases.
/* ed.: Trying to minimize ambiguity around semantics of event grouping. */</t>

<t>The event type for the Related Events event is the URN
“urn:ietf:secevents:related_events”.</t>

<t>The Related Events event has a single additional event payload claim:</t>

<t><list style="hanging">
  <t hangText='events'><vspace blankLines='0'/>
  An array of event payloads, as defined in this document.</t>
</list></t>

<t>For all purposes, the Related Events event’s envelope is considered the
envelope for all events described in the “events” payload claim. SETs
containing a Related Events event MUST comply with the requirements set by
the Profiling Specifications for every event described in the “events”
payload claim. If two or more events’ requirements contradict one another,
those events MUST NOT be combined within the same Related Events event.
/* ed.: Cutting down on opportunities for confusing, impossible SETs. */</t>

<t>All events described in the “events” claim MUST express their subjects in
such a way as to not conflict with the other events. They do not have to
identify their subjects in the same way; two events that support disjoint
sets of Subject Identifier Types but specify their subject using the “sub”
event payload claim defined in <xref target="claims"></xref> can coexist within a Related
Events event, as the subject for each event would reside within the
respective event’s event payload. However, if both events specified their
subject using the “sub” envelope claim, they would be in conflict with one
another, as it would not be possible to assign a value to the “sub” envelope
claim that satisfies the requirements of both events’ Profiling
Specifications.
/* ed.: This is just a specific case of above paragraph, but sub has been a
sticking point so calling it out seems like a good idea. */</t>

<t>The “sub” event payload claim MUST NOT be used with the Related Events
event. 
/* ed.: Trying to avoid complicated “find the subject” logic */</t>

<t>The following is a non-normative example of a SET containing a Related
Events event:</t>

<figure title="Example SET Containing A Related Events Event" anchor="figrelated"><artwork><![CDATA[
{
  "jti": "1c0038c2-02db-40de-ad50-122a64724166",
  "iss": "https://transmitter.example.com",
  "aud": [ "https://receiver.example.com" ],
  "iat": 1510666261,
  "event": {
    "event_type": "urn:ietf:secevent:related_events",
    "event_subject": {
      "identifier_type": "email",
      "email": "user@example.com"
    },
    "event_time": 1510662661,
    "events": [
      {
        "event_type": "http://specs.example.com/set_profile/event_1"
      },
      {
        "event_type": "http://specs.example.com/set_profile/event_2"
      }
    ]
  }
}
]]></artwork></figure>

</section>
<section anchor="profile-req" title="Requirements for SET Profiles">
<t>Profiling Specifications for SETs define the syntax and semantics of
SETs conforming to that SET profile and rules for validating those
SETs.  The syntax defined by Profiling Specifications includes what
SET envelope and event payload claims are used by SETs expressing and
event defined by the profile.</t>

<t>Defining the semantics of the SET contents for SETs utilizing the
profile is equally important.  Possibly most important is defining
the procedures used to validate the SET issuer and to obtain the keys
controlled by the issuer that were used for cryptographic operations
used in the JWT representing the SET.  For instance, some profiles
may define an algorithm for retrieving the SET issuer’s keys that
uses the “iss” claim value as its input.  Likewise, if the profile
allows (or requires) that the JWT be unsecured, the means by which
the integrity of the JWT is ensured MUST be specified.</t>

<t>Profiling Specifications MUST define how the event Subject is
identified in the SET, as well as how to differentiate between the
event Subject’s Issuer and the SET Issuer, if applicable.  It is NOT
RECOMMENDED for Profiling Specifications to use the “sub” claim 
defined in <xref target="RFC7519"></xref> in cases in which the Subject is not globally
unique and has a different Issuer from the SET itself.</t>

<t>Profiling Specifications MUST clearly specify the steps that a
recipient of a SET utilizing that profile MUST perform to validate
that the SET is both syntactically and semantically valid.</t>

<section anchor="extensions" title="Extending Events">
<t>As needs change and new use cases develop, it may be desirable to augment
existing event definitions with new claims. To enable this, Profiling
Specifications MAY define extensions to existing event types. An event
extension consists of a set of one or more event payload claim definitions
that provide the extra information expressed by the extension, and a set of
URIs that identify the event types to which the event extension may be
applied.
/* ed.: Is it necessary to identify which event extensions are being used on
an event? Is “duck typing” good enough here? */</t>

<t>Event extensions SHOULD be defined in documents that are produced through
the same standardization process as the documents that define the event
types being extended. For example, if an event type is defined in an RFC
produced by an IETF working group, event extensions that apply to that event
SHOULD be defined by that same working group. This helps to minimize the
possibility of redundant or conflicting event extensions, and ensure that
event extension creators have the proper context for the events they are
extending.
/* ed.: Guidance on avoiding name conflict with extension claims: put it
here, or in an implementation considerations section? */</t>

</section>
</section>
<section anchor="security" title="Security Considerations">

<section anchor="c-and-i" title="Confidentiality and Integrity">
<t>SETs may often contain sensitive information.  Therefore, methods for
distribution of events SHOULD require the use of a transport-layer
security mechanism when distributing events.  Parties MUST support
TLS 1.2 <xref target="RFC5246"></xref> and MAY support additional transport-layer
mechanisms meeting its security requirements.  When using TLS, the
client MUST perform a TLS/SSL server certificate check, per
<xref target="RFC6125"></xref>.  Implementation security considerations for TLS can be
found in “Recommendations for Secure Use of TLS and DTLS” <xref target="RFC7525"></xref>.</t>

<t>Security Events distributed through third-parties or that carry
personally identifiable information, SHOULD be encrypted using JWE
<xref target="RFC7516"></xref> or secured for confidentiality by other means.</t>

<t>Unless integrity of the JWT is ensured by other means, it MUST be
signed using JWS <xref target="RFC7515"></xref> so that individual events can be
authenticated and validated by the Event Receiver.</t>

</section>
<section anchor="delivery" title="Delivery">
<t>This specification does not define a delivery mechanism by itself.
In addition to confidentiality and integrity (discussed above),
implementers and Profiling Specifications MUST consider the
consequences of delivery mechanisms that are not secure and/or not
assured.  For example, while a SET may be end-to-end secured using
JWE encrypted SETs, without TLS there is no assurance that the
correct endpoint received the SET and that it could be successfully
processed.</t>

</section>
<section anchor="sequencing" title="Sequencing">
<t>As defined in this specification, there is no defined way to order
multiple SETs in a sequence.  Depending on the type and nature of SET
event, order may or may not matter.  For example, in provisioning,
event order is critical – an object could not be modified before it
was created.  In other SET types, such as a token revocation, the
order of SETs for revoked tokens does not matter.  If however, the
event was described as a log-in or logged-out status for a user
subject, then order becomes important.</t>

<t>Profiling Specifications and implementers SHOULD take caution when
using timestamps such as “iat” to define order.  Distributed systems
will have some amount of clock-skew and thus time by itself will not
guarantee order.</t>

<t>Specifications profiling SET SHOULD define a mechanism for detecting
order or sequence of events.</t>

</section>
<section anchor="timing" title="Timing Issues">
<t>When SETs are delivered asynchronously and/or out-of-band with
respect to the original action that incurred the security event, it
is important to consider that a SET might be delivered to an Event
Receiver in advance or well behind the process that caused the event.
For example, a user having been required to logout and then log back
in again, may cause a logout SET to be issued that may arrive at the
same time as the user-agent accesses a web site having just logged-
in.  If timing is not handled properly, the effect would be to
erroneously treat the new user session as logged out.  Profiling
Specifications SHOULD be careful to anticipate timing and subject
selection information.  For example, it might be more appropriate to
cancel a “session” rather than a “user”.  Alternatively, the
specification could use timestamps that allows new sessions to be
started immediately after a stated logout event time.</t>

</section>
<section anchor="not-id-tokens" title="Distinguishing SETs from ID Tokens">
<t>Because <xref target="RFC7519"></xref> states that “all claims that are not understood by
implementations MUST be ignored”, there is a consideration that a SET
token might be confused with ID Token <xref target="OpenID.Core"></xref> if a SET is
mistakenly or intentionally used in a context requiring an ID Token.
If a SET could otherwise be interpreted as a valid ID Token (because
it includes the required claims for an ID Token and valid issuer and
audience claim values for an ID Token) then that SET profile MUST
require that the “exp” claim not be present in the SET.  Because
“exp” is a required claim in ID Tokens, valid ID Token
implementations will reject such a SET if presented as if it were an
ID Token.</t>

<t>Excluding “exp” from SETs that could otherwise be confused with ID
Tokens is actually defense in depth.  In any OpenID Connect contexts
in which an attacker could attempt to substitute a SET for an ID
Token, the SET would actually already be rejected as an ID Token
because it would not contain the correct “nonce” claim value for the
ID Token to be accepted in contexts for which substitution is
possible.</t>

<t>Note that the use of explicit typing, as described in Section 2.2,
will not achieve disambiguation between ID Tokens and SETs, as the ID
Token validation rules do not use the “typ” header parameter value.</t>

</section>
<section anchor="not-access-tokens" title="Distinguishing SETs from Access Tokens">
<t>OAuth 2.0 <xref target="RFC6749"></xref> defines access tokens as being opaque.
Nonetheless, some implementations implement access tokens as JWTs.
Because the structure of these JWTs is implementation-specific,
ensuring that a SET cannot be confused with such an access token is
therefore likewise, in general, implementation specific.
Nonetheless, it is recommended that SET profiles employ the following
strategies to prevent possible substitutions of SETs for access
tokens in contexts in which that might be possible:</t>

<t><list style="symbols">
  <t>Prohibit use of the “exp” claim, as is done to prevent ID Token
confusion.</t>
  <t>Where possible, use a separate “aud” claim value to distinguish
between the Event Receiver and the protected resource that is the
audience of an access token.</t>
  <t>Modify access token validation systems to check for the presence
of the “events” claim as a means to detect security event tokens.
This is particularly useful if the same endpoint may receive both
types of tokens.</t>
  <t>Employ explicit typing, as described in Section 2.2, and modify
access token validation systems to use the “typ” header parameter
value.</t>
</list></t>

</section>
<section anchor="not-other-jwts" title="Distinguishing SETs from other kinds of JWTs">
<t>JWTs are now being used in application areas beyond the identity
applications in which they first appeared.  For instance, the Session
Initiation Protocol (SIP) Via Header Field <xref target="RFC8055"></xref> and Personal
Assertion Token (PASSporT) <xref target="I-D.ietf-stir-passport"></xref> specifications
both define JWT profiles that use mostly or completely different sets
of claims than are used by ID Tokens.  If it would otherwise be
possible for an attacker to substitute a SET for one of these (or
other) kinds of JWTs, then the SET profile must be defined in such a
way that any substituted SET will result in its rejection when
validated as the intended kind of JWT.</t>

<t>The most direct way to prevent confusion is to employ explicit
typing, as described in Section 2.2, and modify applicable token
validation systems to use the “typ” header parameter value.  This
approach can be employed for new systems but may not be applicable to
existing systems.</t>

<t>Another way to ensure that a SET is not confused with another kind of
JWT is to have the JWT validation logic reject JWTs containing an
“events” claim unless the JWT is intended to be a SET.  This approach
can be employed for new systems but may not be applicable to existing
systems.</t>

<t>For many use cases, the simplest way to prevent substitution is
requiring that the SET not include claims that are required for the
kind of JWT that might be the target of an attack.  For example, for
<xref target="RFC8055"></xref>, the “sip_callid” claim could be omitted and for
<xref target="I-D.ietf-stir-passport"></xref>, the “orig” claim could be omitted.</t>

<t>In many contexts, simple measures such as these will accomplish the
task, should confusion otherwise even be possible.  Note that this
topic is being explored in a more general fashion in JSON Web Token
Best Current Practices <xref target="I-D.sheffer-oauth-jwt-bcp"></xref>.  The proposed
best practices in that draft may also be applicable for particular
SET profiles and use cases.</t>

</section>
</section>
<section anchor="privacy" title="Privacy Considerations">
<t>If a SET needs to be retained for audit purposes, JWS MAY be used to
provide verification of its authenticity.</t>

<t>Event Transmitters SHOULD attempt to specialize feeds so that the
content is targeted to the specific business and protocol needs of an
Event Receiver.</t>

<t>When sharing personally identifiable information or information that
is otherwise considered confidential to affected users, Event
Transmitters and Receivers MUST have the appropriate legal agreements
and user consent or terms of service in place.</t>

<t>The propagation of subject identifiers can be perceived as personally
identifiable information.  Where possible, Event Transmitters and
Receivers SHOULD devise approaches that prevent propagation – for
example, the passing of a hash value that requires the Event Receiver
to know the subject.</t>

</section>
<section anchor="iana" title="IANA Considerations">

<section anchor="iana-sit" title="SET Subject Identifier Types Registry">
<t>This section establishes the IANA “SET Subject Identifier Types” registry
// TODO</t>

</section>
<section anchor="iana-claims" title="JSON Web Token Claims Registration">
<t>This specification registers the “event” claim in the IANA “JSON Web Token
Claims” registry <xref target="IANA.JWT.Claims"></xref> established by <xref target="RFC7519"></xref>.</t>

<section anchor="registry-contents" title="Registry Contents">
<t><list style="symbols">
  <t>Claim Name: “event”</t>
  <t>Claim Description: Security Event Payload</t>
  <t>Change Controller: IESG</t>
  <t>Specification Document(s): Section 2.1 of [[ this specification ]]</t>
</list></t>

</section>
</section>
<section anchor="iana-media-type" title="Media Type Registration">

<section anchor="registry-contents-1" title="Registry Contents">
<t>This section registers the “application/secevent+jwt” media type
<xref target="RFC2046"></xref> in the “Media Types” registry <xref target="IANA.MediaTypes"></xref> in the
manner described in <xref target="RFC6838"></xref>, which can be used to indicate that the
content is a SET.</t>

<t><list style="symbols">
  <t>Type name: application</t>
  <t>Subtype name: secevent+jwt</t>
  <t>Required parameters: n/a</t>
  <t>Optional parameters: n/a</t>
  <t>Encoding considerations: 8bit; A SET is a JWT; JWT values are
encoded as a series of base64url-encoded values (some of which may
be the empty string) separated by period (‘.’) characters.</t>
  <t>Security considerations: See the Security Considerations section
of [[ this specification ]]</t>
  <t>Interoperability considerations: n/a</t>
  <t>Published specification: Section 2.2 of [[ this specification ]]</t>
  <t>Applications that use this media type: TBD</t>
  <t>Fragment identifier considerations: n/a</t>
  <t>Additional information:</t>
  <t>Magic number(s): n/a</t>
  <t>File extension(s): n/a</t>
  <t>Macintosh file type code(s): n/a</t>
  <t>Person &amp; email address to contact for further information:
Michael B. Jones, mbj@microsoft.com</t>
  <t>Intended usage: COMMON</t>
  <t>Restrictions on usage: none</t>
  <t>Author: Michael B. Jones, mbj@microsoft.com</t>
  <t>Change controller: IESG</t>
  <t>Provisional registration?  No</t>
</list></t>

</section>
</section>
</section>


  </middle>

  <back>

    <references title='Normative References'>

<reference anchor="IANA.JWT.Claims" target="http://www.iana.org/assignments/jwt">
  <front>
    <title>JSON Web Token Claims</title>
    <author >
      <organization>IANA</organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="IANA.MediaTypes" target="http://www.iana.org/assignments/media-types">
  <front>
    <title>Media Types</title>
    <author >
      <organization>IANA</organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>




<reference  anchor="RFC2119" target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC3986" target='https://www.rfc-editor.org/info/rfc3986'>
<front>
<title>Uniform Resource Identifier (URI): Generic Syntax</title>
<author initials='T.' surname='Berners-Lee' fullname='T. Berners-Lee'><organization /></author>
<author initials='R.' surname='Fielding' fullname='R. Fielding'><organization /></author>
<author initials='L.' surname='Masinter' fullname='L. Masinter'><organization /></author>
<date year='2005' month='January' />
<abstract><t>A Uniform Resource Identifier (URI) is a compact sequence of characters that identifies an abstract or physical resource.  This specification defines the generic URI syntax and a process for resolving URI references that might be in relative form, along with guidelines and security considerations for the use of URIs on the Internet.  The URI syntax defines a grammar that is a superset of all valid URIs, allowing an implementation to parse the common components of a URI reference without knowing the scheme-specific requirements of every possible identifier.  This specification does not define a generative grammar for URIs; that task is performed by the individual specifications of each URI scheme.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='STD' value='66'/>
<seriesInfo name='RFC' value='3986'/>
<seriesInfo name='DOI' value='10.17487/RFC3986'/>
</reference>



<reference  anchor="RFC5246" target='https://www.rfc-editor.org/info/rfc5246'>
<front>
<title>The Transport Layer Security (TLS) Protocol Version 1.2</title>
<author initials='T.' surname='Dierks' fullname='T. Dierks'><organization /></author>
<author initials='E.' surname='Rescorla' fullname='E. Rescorla'><organization /></author>
<date year='2008' month='August' />
<abstract><t>This document specifies Version 1.2 of the Transport Layer Security (TLS) protocol.  The TLS protocol provides communications security over the Internet.  The protocol allows client/server applications to communicate in a way that is designed to prevent eavesdropping, tampering, or message forgery.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5246'/>
<seriesInfo name='DOI' value='10.17487/RFC5246'/>
</reference>



<reference  anchor="RFC5322" target='https://www.rfc-editor.org/info/rfc5322'>
<front>
<title>Internet Message Format</title>
<author initials='P.' surname='Resnick' fullname='P. Resnick' role='editor'><organization /></author>
<date year='2008' month='October' />
<abstract><t>This document specifies the Internet Message Format (IMF), a syntax for text messages that are sent between computer users, within the framework of &quot;electronic mail&quot; messages.  This specification is a revision of Request For Comments (RFC) 2822, which itself superseded Request For Comments (RFC) 822, &quot;Standard for the Format of ARPA Internet Text Messages&quot;, updating it to reflect current practice and incorporating incremental changes that were specified in other RFCs.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5322'/>
<seriesInfo name='DOI' value='10.17487/RFC5322'/>
</reference>



<reference  anchor="RFC6125" target='https://www.rfc-editor.org/info/rfc6125'>
<front>
<title>Representation and Verification of Domain-Based Application Service Identity within Internet Public Key Infrastructure Using X.509 (PKIX) Certificates in the Context of Transport Layer Security (TLS)</title>
<author initials='P.' surname='Saint-Andre' fullname='P. Saint-Andre'><organization /></author>
<author initials='J.' surname='Hodges' fullname='J. Hodges'><organization /></author>
<date year='2011' month='March' />
<abstract><t>Many application technologies enable secure communication between two entities by means of Internet Public Key Infrastructure Using X.509 (PKIX) certificates in the context of Transport Layer Security (TLS). This document specifies procedures for representing and verifying the identity of application services in such interactions.   [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6125'/>
<seriesInfo name='DOI' value='10.17487/RFC6125'/>
</reference>



<reference  anchor="RFC6749" target='https://www.rfc-editor.org/info/rfc6749'>
<front>
<title>The OAuth 2.0 Authorization Framework</title>
<author initials='D.' surname='Hardt' fullname='D. Hardt' role='editor'><organization /></author>
<date year='2012' month='October' />
<abstract><t>The OAuth 2.0 authorization framework enables a third-party application to obtain limited access to an HTTP service, either on behalf of a resource owner by orchestrating an approval interaction between the resource owner and the HTTP service, or by allowing the third-party application to obtain access on its own behalf.  This specification replaces and obsoletes the OAuth 1.0 protocol described in RFC 5849.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6749'/>
<seriesInfo name='DOI' value='10.17487/RFC6749'/>
</reference>



<reference  anchor="RFC7519" target='https://www.rfc-editor.org/info/rfc7519'>
<front>
<title>JSON Web Token (JWT)</title>
<author initials='M.' surname='Jones' fullname='M. Jones'><organization /></author>
<author initials='J.' surname='Bradley' fullname='J. Bradley'><organization /></author>
<author initials='N.' surname='Sakimura' fullname='N. Sakimura'><organization /></author>
<date year='2015' month='May' />
<abstract><t>JSON Web Token (JWT) is a compact, URL-safe means of representing claims to be transferred between two parties.  The claims in a JWT are encoded as a JSON object that is used as the payload of a JSON Web Signature (JWS) structure or as the plaintext of a JSON Web Encryption (JWE) structure, enabling the claims to be digitally signed or integrity protected with a Message Authentication Code (MAC) and/or encrypted.</t></abstract>
</front>
<seriesInfo name='RFC' value='7519'/>
<seriesInfo name='DOI' value='10.17487/RFC7519'/>
</reference>



<reference  anchor="RFC7525" target='https://www.rfc-editor.org/info/rfc7525'>
<front>
<title>Recommendations for Secure Use of Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS)</title>
<author initials='Y.' surname='Sheffer' fullname='Y. Sheffer'><organization /></author>
<author initials='R.' surname='Holz' fullname='R. Holz'><organization /></author>
<author initials='P.' surname='Saint-Andre' fullname='P. Saint-Andre'><organization /></author>
<date year='2015' month='May' />
<abstract><t>Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS) are widely used to protect data exchanged over application protocols such as HTTP, SMTP, IMAP, POP, SIP, and XMPP.  Over the last few years, several serious attacks on TLS have emerged, including attacks on its most commonly used cipher suites and their modes of operation.  This document provides recommendations for improving the security of deployed services that use TLS and DTLS. The recommendations are applicable to the majority of use cases.</t></abstract>
</front>
<seriesInfo name='BCP' value='195'/>
<seriesInfo name='RFC' value='7525'/>
<seriesInfo name='DOI' value='10.17487/RFC7525'/>
</reference>


<reference anchor="E.164" target="http://www.itu.int/rec/T-REC-E.164-201011-I/en">
  <front>
    <title>The international public telecommunication numbering plan</title>
    <author >
      <organization>International Telecommunication Union</organization>
    </author>
    <date year="2010"/>
  </front>
</reference>


    </references>

    <references title='Informative References'>





<reference anchor="I-D.ietf-stir-passport">
<front>
<title>Personal Assertion Token (PASSporT)</title>

<author initials='C' surname='Wendt' fullname='Chris Wendt'>
    <organization />
</author>

<author initials='J' surname='Peterson' fullname='Jon Peterson'>
    <organization />
</author>

<date month='February' day='9' year='2017' />

<abstract><t>This document defines a method for creating and validating a token that cryptographically verifies an originating identity, or more generally a URI or telephone number representing the originator of personal communications.  The PASSporT token is cryptographically signed to protect the integrity of the identity the originator and to verify the assertion of the identity information at the destination. The cryptographic signature is defined with the intention that it can confidently verify the originating persona even when the signature is sent to the destination party over an insecure channel.  PASSporT is particularly useful for many personal communications applications over IP networks and other multi-hop interconnection scenarios where the originating and destination parties may not have a direct trusted relationship.</t></abstract>

</front>

<seriesInfo name='Internet-Draft' value='draft-ietf-stir-passport-11' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-ietf-stir-passport-11.txt' />
</reference>



<reference anchor="I-D.sheffer-oauth-jwt-bcp">
<front>
<title>JSON Web Token Best Current Practices</title>

<author initials='Y' surname='Sheffer' fullname='Yaron Sheffer'>
    <organization />
</author>

<author initials='D' surname='Hardt' fullname='Dick Hardt'>
    <organization />
</author>

<author initials='M' surname='Jones' fullname='Michael Jones'>
    <organization />
</author>

<date month='July' day='3' year='2017' />

<abstract><t>JSON Web Tokens, also known as JWTs [RFC7519], are URL-safe JSON- based security tokens that contain a set of claims that can be signed and/or encrypted.  JWTs are being widely used and deployed as a simple security token format in numerous protocols and applications, both in the area of digital identity, and in other application areas. The goal of this Best Current Practices document is to provide actionable guidance leading to secure implementation and deployment of JWTs.</t></abstract>

</front>

<seriesInfo name='Internet-Draft' value='draft-sheffer-oauth-jwt-bcp-01' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-sheffer-oauth-jwt-bcp-01.txt' />
</reference>


<reference anchor="OpenID.Core" target="http://openid.net/specs/openid-connect-core-1_0.html">
  <front>
    <title>OpenID Connect Core 1.0</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>




<reference  anchor="RFC2046" target='https://www.rfc-editor.org/info/rfc2046'>
<front>
<title>Multipurpose Internet Mail Extensions (MIME) Part Two: Media Types</title>
<author initials='N.' surname='Freed' fullname='N. Freed'><organization /></author>
<author initials='N.' surname='Borenstein' fullname='N. Borenstein'><organization /></author>
<date year='1996' month='November' />
<abstract><t>This second document defines the general structure of the MIME media typing system and defines an initial set of media types.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='2046'/>
<seriesInfo name='DOI' value='10.17487/RFC2046'/>
</reference>



<reference  anchor="RFC6838" target='https://www.rfc-editor.org/info/rfc6838'>
<front>
<title>Media Type Specifications and Registration Procedures</title>
<author initials='N.' surname='Freed' fullname='N. Freed'><organization /></author>
<author initials='J.' surname='Klensin' fullname='J. Klensin'><organization /></author>
<author initials='T.' surname='Hansen' fullname='T. Hansen'><organization /></author>
<date year='2013' month='January' />
<abstract><t>This document defines procedures for the specification and registration of media types for use in HTTP, MIME, and other Internet protocols.  This memo documents an Internet Best Current Practice.</t></abstract>
</front>
<seriesInfo name='BCP' value='13'/>
<seriesInfo name='RFC' value='6838'/>
<seriesInfo name='DOI' value='10.17487/RFC6838'/>
</reference>



<reference  anchor="RFC7515" target='https://www.rfc-editor.org/info/rfc7515'>
<front>
<title>JSON Web Signature (JWS)</title>
<author initials='M.' surname='Jones' fullname='M. Jones'><organization /></author>
<author initials='J.' surname='Bradley' fullname='J. Bradley'><organization /></author>
<author initials='N.' surname='Sakimura' fullname='N. Sakimura'><organization /></author>
<date year='2015' month='May' />
<abstract><t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures.  Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification.  Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t></abstract>
</front>
<seriesInfo name='RFC' value='7515'/>
<seriesInfo name='DOI' value='10.17487/RFC7515'/>
</reference>



<reference  anchor="RFC7516" target='https://www.rfc-editor.org/info/rfc7516'>
<front>
<title>JSON Web Encryption (JWE)</title>
<author initials='M.' surname='Jones' fullname='M. Jones'><organization /></author>
<author initials='J.' surname='Hildebrand' fullname='J. Hildebrand'><organization /></author>
<date year='2015' month='May' />
<abstract><t>JSON Web Encryption (JWE) represents encrypted content using JSON-based data structures.  Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and IANA registries defined by that specification.  Related digital signature and Message Authentication Code (MAC) capabilities are described in the separate JSON Web Signature (JWS) specification.</t></abstract>
</front>
<seriesInfo name='RFC' value='7516'/>
<seriesInfo name='DOI' value='10.17487/RFC7516'/>
</reference>



<reference  anchor="RFC8055" target='https://www.rfc-editor.org/info/rfc8055'>
<front>
<title>Session Initiation Protocol (SIP) Via Header Field Parameter to Indicate Received Realm</title>
<author initials='C.' surname='Holmberg' fullname='C. Holmberg'><organization /></author>
<author initials='Y.' surname='Jiang' fullname='Y. Jiang'><organization /></author>
<date year='2017' month='January' />
<abstract><t>This specification defines a new Session Initiation Protocol (SIP) Via header field parameter, 'received-realm', which allows a SIP entity acting as an entry point to a transit network to indicate from which adjacent upstream network a SIP request is received by using a network realm value associated with the adjacent network.</t></abstract>
</front>
<seriesInfo name='RFC' value='8055'/>
<seriesInfo name='DOI' value='10.17487/RFC8055'/>
</reference>




    </references>


<section anchor="ack" title="Acknowledgments">
<t>The editors would like to thank the participants on the IETF secevent
mailing list and related working groups for their support of this
specification.</t>

</section>


  </back>

<!-- ##markdown-source:
H4sIAL9KDFoAA+19a3MTx7bo9/4VU0rVDc6R5AeYgHftOjHGBHPAEGxCAkWl
RjMtaWA0oz0PG5HK/u13PXu6R5IN++5z7peTLzGamX6sXu9Xj0Yj02RNbo+i
C5u0VdasotMrWzTRZfnJFtGdi9PLHRNPJpW9Oopqm1h8OGrwoUnLpIgX8Gla
xdNmVGXJPC6KeBS+NtrbN2ncwGsHe/s/jvb3R/v3TAI/zMpqdRRlxbQ02bI6
ipqqrZuDvb2HewfGxJWNuzWZ67L6NKvKdtktwnyyK/g5PYrOisZWhW1Gj3Ed
xtRNXKR/xHlZwKQrW5tldhS9b8pkGNVl1VR2WsNfqwX+8QGmapt5WR2ZaGQi
+C8r6qPoeBw9ipNPi7ig33ibx7C5ic1zGzwrq1lcZF/iJisLeGcRfyn5gV3E
WX4UKVh+iunROCkX9DiY7+04emyLIqtrb763WZ5n8SJ4Es72c1nOcuvPdp3y
yz/N6BHNFsz0Ygz7qOMq8yZ6AVCxX2L/QTjPSVYnpT/Ngr8Yx/TFTwk+3zjX
MzgEf08vEBo2jx75j8LJ4JWqrEs4SX/CycefFvrAwRCQ4yiaN83yaHe3tvl0
BDtvbTpGpNo1piirBQx6ZeFwo7Pj8+Pxs7eX45M8zhb1EQ0guP/s4uV59NZO
BOv5DXrBIQf9N5L/05KPaEgeJq5mtnFLub6+HmdxEY/hrd24rrNZsQCMrXc/
Xje6khc2zeLL1dKGK6GfI/r9v2H+BY4+amT0109ODvb3Hx7xn3cfPrgvfx4e
3HN/3j04kD/v7x8c6p8/3tPPfjzc7/7kF07H+/fvBbu6nFvACKRSOuM4j5bt
JM+SqLG5hcNctEWW0KOoaBcTW2XFLFrmQmGbdte0cMjNbmWT3cvR69OTEU06
AhazBxzmbNcWXwG+YEWXa0t5U2RCyo5/7RlELR+rRo/HmW2mo7rJqtESgL0E
0tAn9dxOp7YalbiOEZz+aJIs8eHLpS3OHo9PysoGgOLfo5OyKGzSRPg82h/v
bQJDCa9m6Rj43m69tEktP4wS/hb+X9nR/h9743mzyI0c95472PsP7j7ojvCw
+1NfeLB3CL+a0WgUxZO6qeKkMZfzrI5wtmyqQErtNAM6jho44k0iZBhdz4Hm
o0W8iibWpBkMlU3axqbRFWB6HC2rElhzmUd1C6/FdfT08vLVOCKc2TSgIZnU
WwUMMs1yWUaPmu8A0e/oMpK4wGWUSz71fBUhdcBiQGTsllVki6RaLWF1sILj
CGaCDdYJrBjGjiOQLI1FUorKqZkCRKJpVS5o0qWtcEmIF/AQhouIF1XwMG6i
rCH8L1JYYRnVcxBv0XXWzA3wQEBG5Kc2AmS28HlVjxnsiyxNgbsbwNOqTNuE
dvrndxn+8y/zd++/mw4GVmI/w9R1Nsk3Q1SkPON1cFzwJQqvGcCnrYkm5bDq
DadlwvknbZbDduGvbWcSyYzvhY18ABgZkOgItBKnuspSi1BHzg5o3cQZnhRp
FQxWPs1o7TQNr9ZNegG/xk0LMIaJL3Z0xsMPa8cedV8a/PKUH+CG4NNT9+n9
D3BIG6AeIGJbEy7AXnGrjCZttSz5Z8QPmMvUeiSk1vD2ajqTeocgu/1oo0lc
Wz24dgmP+PR4FbiR4MNavowAc1tgeTQhYkhqYG0ZoKEFOVzMapj2TQG7gOOD
B9V1BiuWkWw6hI2sLQm2WoO8LUZO5gLuxIsloJzMwvhP5wfLWMBqgKc0NpqX
1/oKIJ2B40zoGeA7UOFGIOMPCbA7GsuBD7YRAcIUDf6jsnmMx8kjj83bOZxK
tBnUguuwhZTOifasJ1Xjdvu4XRaAarhMmK+qwyUsq+wqTuhxAuKlxqXYqxgU
VlisWx+9Cd+S6HEyBdRDY0ISheMBtC1KQHYQTjFyEFZyYMnNtQVKWMZVk9ma
GJauxPAGsz7Tir6SacWTsm0QKfhrethts24nH1E83bHj2XgIT66BUipbl22V
2CGDdRidvTJxmsLPDEIdOmuQnneYgL3fkcAr5CxwArjua9x3OR0aenEOrEZZ
UVaAHr8ABgrndsd+XoIiAdJzRR8u9F87ITx0yS+Of8ezho0DLBEmbg9w/LDv
JCnbotnBsQBoIMvjaiXvGAAPcjsYFFSqstjBhTBb4bkIUrxI2E2bp052wPBp
Buy9MfIY4CmIQF8NCfSy9qh7R4CvKDnPZvC/kQF8AhW6Ow49YMeVQW7/wBI0
ATsK8WoIIiZ1CDyE01qUV4B6dLB6dGP9Cn6wTYP8A+auW8CRoia8JxwRIHlv
X5VKGAGeMKcGgiiJo8PJA1NYZtXKfZqXM0A0/owOQGALAH1ZDfGt4yhpF23O
LAVpKm9pKSp/cNwixX1ZRikZCBGmiT+xHlhe4dkWbEwIEQIrE+GM9D+PYfgJ
khOxgYylFuhzTTRZ4RBxwWeAgwORCj8RrPKPngkWrBQUUlU2m9kKiXUlCxvF
MyLFyvH9EYxSr2o4wo5OYuAdxCOARxb1Iqs98DNp0wSmTGAMmLFeFcm8Kouy
rXPhhAWJh+TTiMxPwBeAFA4fsx5BggLscNou/i5YRxCBJdqK+CexgIBrwtFc
wILtP1r4R74ismBl4rXoL0OEJiKPKDSgXKEmNYwA4TJUpWtZIajfy8o2NTEa
9zIqXbR1OL2akKa8LvCQ7RIFCEzEWwC2kiFAVrCiJwBPkTdudjpNZq0wKqFY
x3E7FJhYFMKguJdJRltGvYwIFlV3nG4r31OEEjZngG3RaIxDcOTIplDDs3lt
d/h0Q1AR7iXzElWCpjRAZqikONZY2GvGZhgZRcAMsAGXCBSIwhlOVEm3XtsB
4S+QZgY4wVhLNLVtETC8ISIAgLL0RBDPs2U3mmx/SKdTlIpJmRCao4pw9BoG
yHMlCHhRj48VFj52BBoqPMOeNlSjioc7Rx4KdLFgmU9KgkhD4C0VImPd1KKH
kqZBTGWDopLVrICwHkQyBJkx67mkjnXcVOUlnUd/Vwg0h8Kq34EOBchqVHdA
ucBMeUjbYzYDoEviZTwBDQ32iV/aqkJGi1oqaW3EalBfcAhhlXgcl/XpBUB/
XjZqyYL1iGslGP/5HfDMq7/Qntjwn0Ee/MmuInSk1dHgxZuLy8GQ/x+dv6S/
X5/+8ubs9elj/Pvi6fHz5+4PfsPAP16+eS7P8a/uy5OXL16cnj/mj+HXqPcT
SOMBoZMZvHx1efby/Pj5gHkvHFNaAucnckcI0KE7eCMN1E68Ii8x78Wd8YGx
oKaN8b5wAIB41gAIvyB9zJXPw7BtES8m2awl1il63opQCiS2wwOmJrFU4azi
JQprPo6pJSWAFemJRfZTimiJgYckoubg2kegtVZ68khGDt3BoEQFgGZk2oN9
vJ2TpYOb6XZCumC3G6LoFT4xqL43IrsAE0k3ifNRDpjdgtiByYoahLwBbunU
W9wc6AipLGqoans315vXz9E+KlNUx890jUgChCawoQRPiV/Bt+v+2aDVSZA6
GO/jRt+Lu4ltqKpsZ3PUAoJTB7QArjGFg0HIotomFiDQc5yICAHDtooNkIwd
XVdwJEg7U2IIbkMMZfwkyrNF1sH2Av6VxxVIMGLT5s3rszrqrEzkelnRQaNT
EOo5Oj8LMRZ4aDx5f1L4u8ZpjHmMnCZTYgS+UwTESBQ4LfO8vMbFp97bCH9C
UmLAyD5ArfvzKLqiKf8+2Bv8ZW4w54/Ef0E2AJqgnZnNtjNvte5UimW8ysvY
aa0kFvvC3xiZifWSBvCAZgL5cpUlVq12Qf/U5swsifkBsYlpJS/V0acCZXtc
mx53dfPoLzhJX8+grRWqSNOEwhR1QsYtPl/neUJEXNhmXpKPZ9OgJOxisDB4
aDhZ0AQq5jkDmCJbZvBkgHxgoE4b4luIa2J5hhYjIpyDP5h4LEndGXk+Jqff
VaFB4awgUvloMWijRbEOxg4r0VDEpEXvWlbAekEqiNKipHhvvD8+MG5NO+tm
XAda1bXhl7NXkTPqQOdas+tUB8ddLcBcwSMhNQqtC/PK+SUufOgwBgVimoZB
pwI7FmE0xu3eW06Ssx/NkB9NjHv0crMiOSflQbWjhLz7cFxgSqTiYrjJMQZk
C9ZQ6HBb/8941AZiGs1udGE4dY7ZI8FwEJDbwKM3OM2Q3oYR8TXmovQpiPYc
hMhAiAg/AmSOaUrcLJI1sEWjDqc15f1S4KkjdQyCwx4AiYYZ+JQYoYhWwpIh
Oz1qNg1RCyEXW8lIJxyF9gHzkgbGwBbFLGQzPO/69x3zbXpLHQqSGW8mOU2G
8eclYqbvTxEqwZEEoEgG9G9EEIO6H//uabgq8OUJgpUZlz9wBx84tS2Ivdl9
1bnv0EcfQopkCvoNUWp6Wwf9vkhDPg0UOC+vLfKsLdOz3FRdN00zVhCNTAWT
TkrU7ZFS4IjOyGHkqWgM1W2DGxlYT6B0TjQ5uvC4wZ6cs1yQp7IznHgKgmbL
NKAQWOe3dDjLc+KhoeUkK2DtEz2IlZ0BkpLhLWtB/PaDe8Dv8ZVqFb3vBQY/
IOtFaW9ecYyKfo7OQR7UIV14vPQAgenIBJ14p46eQAWnP3y5f6vruFMJZHPe
tJ0gB2Qxgix9WjmK1pQFjCEjp03i2o5QF8zIqYJiEeYRk3iFf7O2q5KDIxjs
dJRpwOrvlgSGri9V9kNYiAebtsH4xfbEGCPv6Q0LQi27qtg+2/hG7a+ZRBEM
mKGoce52cjtsX+rdTUs13lIdKcBqgbvgarcOdi8YTLzkbiziOBnoFPEUdSb2
0ytmqr1FMhtse4pE4B4AJ9DSh/0hmfApC4dn/gsbNMIFZEZQ2R3ZoPqOlgrG
RcijRCgCEjmHddekFyGjndERG9Qu4hzV2BVrujI7R8dwEzB+U1aAsHng+3zD
AY1uw+gJ6Zl7AEAQv3TcYMm2dg3fGDgaf1J0vo7V3907R+OD/v5Xo9zHJqM1
tEX2j24R6AdCcKv2dRPO/KgWzK1z3RIt7Ugc3Tzr7F9AYBxFrxE058Hgdnwx
qjo1DdDTNTAMShyzJB9JR0EU5EBBEKlE3C6OVc1AY6yTKoFwNAo8WAbGJwLX
JU3TWTrsqtwmQaPoGwC5DsRQYh5hHLwHxIjf+YPUgSgiVZQZUKDPgHkoSilh
DpCUw5063JrxEOemfW3FG11RlobrYT7szepggmYInMB1WeWgT240INCbpKQF
07n4kJgrYzSA2K5hrQHh53Ew+BqUFX7ZaNwQ03Fqz1FKRlfn9G28R0jdtUZb
ATDuiWHXN+gfl+zkanu8hJkjqhZMsmQNg5q3JMdKyYjbWaP40zcBxmlRpvIg
oAy58/B1HuGEMGughzTgVZNyEJtZG5OTVr2416ULs4o/RUOT4o8nQ3PjMo2/
TA8vREsV5FCT76wX1fAQZZtqC0h458ICY3n/4c538sLOzu2IiYcps3O6zhoz
Ry8/215rXN1h3sTmmb0iQMBg5F9xti2cEXuN8QdlhtNW5M0ZQJMxhc6JnMrM
CCrMCyPBeN4uLEiqx7gQene4RXk72C47YCz4Uz2TnbqdTSmhg+UrmhyE4eKr
ixwa0epwDIdDjBIlxdn5H0WpnAMB5QIIYK7aqkGhZzPyBUfwgII1OEVlefIO
zbsx2JDxCcJpAtdZPWdgcwJK1gwj0ZM2vo+ChOIvBD84/0dl00lmp4uvGSaB
t84TEKq0ozvBkHxCUeTbUTdyS6v5IjihZCqgLGb/qFr1YNZwQJEyBDYHARCF
Ql+r2g7ZrECTDGMgzk2wvmP02Acb1oAN8LWSIiltge4tzEMV90Ino8js3Zwp
Uc/5lTicTsxa9sfNV0u0RRtSwngVHKABRrMG642WGAjBf/7zn+ZPwIMBqEOD
o2hwN91L7ibTHx/+ePjg3iTdf3h3ku5NJ/uT9J79Mb27Nxjiy6CH4cuYf1Yf
7e56ODOWHWBiJr8Lmji8+757W/1kwavRBx44buDl/Xsw+cP7eweH9COtGX7+
k5LfBp2Q9tegycD+qLvy9x88wtD/XpicGxYnd3zTjd5WxREm9R2B6hIv6iOd
5Ug+P6Kwn4yMY9M/8UOg2p/8DdIbfwVLQCJ1uz24x7uFp3Rif+zjMNOyHAS/
HuCvk7jC8f4yf/H5HUXfTbMZeg8oefDvg1NBI0Set4gT7MoSMxSsh1eiBf7F
OOkcMRJwUTR0nuFAuaKcguMiOAmREqxTilrPn6G61BMKZgPq4ijjYFw9oU1D
B6qPyDNMIiT4a7JJOBxBe/syt4knkjvoG/whugTCEmpyZ0QsyJ2N+Dwr65sM
OFawYdPt+Pt6K6NzvmFPnqMLQba7MZDH/st1NUDc7OxoWiwwaWIFJ/uZQ46O
qfjqgQkTOFRL2KhlrPnvKiuykHhYYQCFGkpkYEt1fQRMc942+qUzEnADRuK0
fT3D02pUBx/jpwjxfMVoTUGlwqLNyEaH75/08y/llMWv7sam06WQIeeTNOXM
kisrAdLg5KnOGpA4RO188qcxINaW/RlSXzjqTvnxgoeq8a67sdBXFQ2QwDWE
0BuyHshXFZwegH+Sg9BnjEQlD7PCR3XW7ACibQQ7Te1kd7HOHhlKwx4xmXiD
0UQZDLgr0TnXpwNCWP/RKFqg/seA5oPxzdAtK5/0aXADOTHaMQssyKu3dX0M
0m5IkMfXROjByZiNJ7M2zNefzHfffUcKCmWDbcMdXP5A3xpsJSFNjqq7rJJO
Qc3EbQuEAZtZsB7mUuhU+eR8weAobtKKjMgVUS67EJwOwf4rztqJXNYO67Wa
d0wDcQgHuVXHnyn1Mi9nxFOVRJWbe1osRwqGuFJNdWLl2f+o26t4TVxmJCk7
agSt+2IEfW47JM5CUzIY6HQDtTLIXeDEbbFBg/sW9XELmzU9vhz5fLn5il34
CuMGbcntKlRMXDqjaCcgk8++cWJUVJAWTinL6kZCoFduoIJNqgNQXpC/NTZn
Te/ERNHzXV40AkAyt2untcFDR5rJFp9SL30sMGwlkwZeR6MHrbb3Uo1zi8vx
vxlXbjyKWxCl05pv0pgDJGIAbcegG5ej6PNqjlL+nD0VN2KR/+a3I9MSvzbs
ERlHa7hEj//gx1tRagse+d9uQyeeP9L5cQGCRRM1nSV3sKwoboxIRWVT/39R
6muO5xbMCkGLLwW/wBv/sR8d7N2PDg8Po739g7s9NGPIbUezr1miYtuZZNDD
8eqbN4vwtfe/HfNQ2e6G0QfLOBM86Imhusac4z4ONtelRIbX8e9fDR2ClshO
5npZSgUSxiy7mkSFsBeIEXE7wCWqtnlDtNF8begHxrthDyFj7qeIbwK88fRR
LyYXAsB96IxCT7PAfZkt+7rBLfk/TaBfj9G3aQqKeD1v0tHubpau+5DwVRQb
8jvlMAPt3usrGjWsb3KTmvHV60caPpWCEjIjOc2F4hqUBUS1s9uyaTdG9dVS
kHCclzfqnFf/8fEaaJ5qc0nlxeREnBHdqJKlxJYsvcLhMyUS+McgmtsYU+7I
W4WKvHhFKbTcs8dQY8e84q5qJrWAVH7SOX5FWESJxbQlta00Zwo94DoaV7p4
qR9YIeJlx2pCkiri6Dp336B+0+U4sn3wKaO0bqqbQ6XIuUrMxuSWYPVs7itx
kOlAoPSgwNEY03PVbPfHvLLsIvcClrA2BnyQA7I/fujR7OGHIQcJzFpCzRoi
YDIXjP6ZahnJfknZ4w2/lpUdmu6oWTskkHXCfRBg0loJmSa+aFkdl5Em3j+3
YrSH22E26VAz63iJsNXv68gfUliSmJ1rmdqaJ8MVA1sKCgkVKfIIZtdKq0gy
PwWZEtENRuowNqJppvpBi0GZxlXtVVIPLq0GJMqScaLuGhslb6Cwzl56HJmJ
aLWzA3ZnqO40inhjRUxbSF0xJhZx9OLZy4vT6CmTalYrq6RjPQpPcDiI8xn8
CGwcWRK+Zx6B1Lp/r61yziQUzkQWcdLYLkn9zeWT0YPOFecKBtAX4q9gldk8
1VXY1bM9+9tx9jJ79uXd2/M8XfzapifNP9K7v2TPT57NJz8n+KydHBzmZ8Ue
r+hyO3zQmcwZ4yi5BRN0ruu9/zo7OZ6B8bcXX5zdPzs5+/Lu8aOPLw7OF+df
Pt09v5zt/b745fPLy/MMfl/8/vEJ/P91fn7wy5cXJ2f141/KmYEBsvi38y9n
H0sYaL6XPn305WX24Cp9Costzpv4t9d77347a9/9Np9PfntUv7s4/Dg52Mue
H+vkT/bNuxOY/UkdDJAsfv347m1+sOnjsyd7NDtN/vbJHk5uXlz+sv/y8S+H
5x+PV+cX1+cnGYx+8kxACBM8reU3nPXXg3dvD/d+u/v6MPn5DYAUBnr6es8k
T1/cf7566MH+MLc/P2mSnz/nzxfnV5OLh+7fvx3wIGfZdTCw4ZHP93+HE/kd
Du5l9uhHWa68lH/Cd+K375bvfns2TZ/m1+/oAJ7lk7dPlhMArgk/+LX5/W1e
E5CLX7/AR8d9mLj3nzrY4OnI/p88hNn2cxxA4fTi4y8enHCS8xomaX77ckrw
eLd4eIVbM+svnNELvy+erM5mfIzTX+D/T/f+7iGkoN2ztxdcT0MZuErNiyWV
S1acTwUMET1j2AFCIhSYqlILafRTS0pE9IZQ/V+jmvH/ov7/ov6/HfXHvWCg
EkAvJvimoKAOqg0bdAPUe5+sdyhArwR+7by0qPA8oZKc6JAKBFo3LLeEwnQ9
jGIXWrxEElkzX0Qk+v0WNtUjclgEiDUvV6ITLixmwWT1oms8cfn8gnQQKsnu
+kVQ9d+solIm1C7ZDIm5tonTGMka6MrpyLosrE27oIGnnJGOAhvxyu/uZGPQ
0THXFBnHDvm5PVdgULLrCtDJCqaaMtizcic2uCgn6tnbU4UKfid16qjoofoA
ljkWcnOyRelWT90xNvcvYV2J+RftKet0s9pXXH/spy6/lvwkaT/w53eSsDRi
zblfCGHOULOSph3oXFosSloaKmRoa4sKKLuPvB47WLvQ5k0GmGU0K6pf/4mD
rhcYs8IoO/ByAc0gXP3AjzOD7d/bm8tFQtWN0ASrp9UjL0mhmFmhIUJdlAZ8
vVwu9BBJkfiQg0KaE4IvYjHbVyd+cX6a9ArgxLiNC+/KLZ39RcrvYgKLN20R
NsHAPKSy8zQCr2CC8JOPW9Zg4S0uAc+1lDWaxA1GYHzcdkQ53l6AwGhpAp0d
nUJgEGSUaCNboeZuXMwig7q645oqe5gP1HYRo0LPPAV5XVvFM9635M9vMiaw
PG+tDCKoE+KEcdyoQ9ux2f0hAvI7ii4rdm2V0QJMwEX2BYahmlGqL4SVUyGn
rswl0OqextEPu6KddPmvmqG+DSM5ieLcdMkoaiLUR3KunOBSD8R42TgS5XRv
iFeE+UvbohdsKlPpnUvF79eghFl1QQ2nlJoi7gfdVDYu9fs6KEnS7ipcc+AC
b5ymnbveNUGZaeMSnoHwg72NSRCZwF2+EV4S/15gzrwrfA+KgTFxYLIyNzgN
GJswU1AbzWxdpemt8my6gd18Hy6AGqXEaYZpDx7PMYy+AhefqIUhBHncxHw2
QaDD+pOWW4CkGBhFI3KJrc1a9IEIwbD3Bt4ho7yspcXUKbptEOWPv+acvCRf
rd9qqHxZ3KzItwwLfarW554f3BCnmOYIBndQzCR4ZOKbmpDHSRZNafx893CO
Diwwy9/8xF3J6KDtR2lWfywzzFsWo3tr1sCkbSItJw9mkx5TzsltNhBjUO/z
4Y6UEO1Qx6uktJ+zutHjdJhs/HMcagWATko4ickokjRILjgAN/bY6hDDSGY1
+Y2VLP3ljaOnWm6SSf2YgMk1iOLdmi277RVxSfn6tXoEs6J3rhhTc3IVq0F0
7dIWwuEdCjeKKwBE2E0mgjacVsp7+FCBXmuXIt2v+fc29/1WL6QnJcT7+LGt
Gz8FnRIPUJuelFeWnLSzKl7Oh4wg7YR4NNXbxKYGCfKJGq0hjkU1dorIicPA
tjEtqbYWdOA8wzYa0awsqeVV3EkY2esGhFoT845qQjZgJItqg/SLr8osZe5I
OSVpNAAkTX00G3BuhlvPNwQmTi+jTfw5wOoNuav7yd7e3QfJwWjvIJ2M7u2l
dhSnh3uj/YOD+P69Hw/u7d+//z+Tv3q4v3f//v2D+/u356+uCfW+TP8Xslb/
HUmptIWD+7yFyDFpgIQMqwvYmJGLCbnYijLIxgU++YeoZrv8yf5ABvlr+G8c
9cCNSv//sJ4q6/Tv9XTZkw7x1owE+h9ayGAZeQxCYgvCGCwaSrKgETCSW8rF
txUM113IQvRVoi1O24x7aqbR0AYG94VEia3hslQbppYEbS4SW61YYsigLhgW
1mRiyCxeYGTrIiUOhKp83JhbqgE0rVLbWWCgExfuZaCifq6aUhCWkV24Phqa
9ukr210gSmraHAjbBlb/xTn3BCJo7v2jJVMPtZaqiSnH9RXLkRVoXsC/3RNK
H5W5jSwpsSl1JVGLy1njuhQvGI+W4YSyKfHhJ7tiLbTC3FG3Tb9V6LWtvF6E
ZM2XJDCAq1L3GC6+9gut0fseBHFlHZJip/FcbnTi6owN5tqpVQTCJ5+VYHjP
F9JBpakye+WHDXmRoA/gJmitxjVo8NPlWPbG3LorK5YtQvc5SCxsIznU0KGs
wsQcJbojbZyAvGqvNyDujEq/xM3E5gMWf9QIO87sIwiq10cxQqKY3EApdRFM
p6Rs70YhyrNAZs7uE7W4Xe6g8SL7XYIgaSjXFvRe+D99Wnalbth+wnVtbFw/
BBkTAOsFqhXo/BN3OmOnFKg6rlYfxHkQXsST27or7HUkKZBebkVXqhlUlqMa
Rr4bF7ZtvAxZbUeWlxOkIyOlebhwNji7wj/Zk0usJEyi3MxbTyDJLfbn8ZXo
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

-->

</rfc>

