<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.3.37 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-secevent-subject-identifiers-07" category="std" consensus="true">

  <front>
    <title abbrev="secevent-subject-identifiers">Subject Identifiers for Security Event Tokens</title>

    <author initials="A." surname="Backman" fullname="Annabelle Backman" role="editor">
      <organization>Amazon</organization>
      <address>
        <email>richanna@amazon.com</email>
      </address>
    </author>
    <author initials="M." surname="Scurtescu" fullname="Marius Scurtescu">
      <organization>Coinbase</organization>
      <address>
        <email>marius.scurtescu@coinbase.com</email>
      </address>
    </author>

    <date year="2021" month="March" day="08"/>

    <area>Security</area>
    <workgroup>Security Events Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>Security events communicated within Security Event Tokens may support a variety of identifiers to identify subjects related to the event.  This specification formalizes the notion of subject identifiers as structured information that describe a subject, and named formats that define the syntax and semantics for encoding subject identifiers as JSON objects.  It also defines a registry for defining and allocating names for such formats, as well as the <spanx style="verb">sub_id</spanx> JSON Web Token (JWT) claim.</t>



    </abstract>


  </front>

  <middle>


<section anchor="intro" title="Introduction">
<t>As described in Section 1.2 of SET <xref target="RFC8417"/>, subjects related to security events may take a variety of forms, including but not limited to a JWT <xref target="RFC7519"/> principal, an IP address, a URL, etc.  Different types of subjects may need to be identified in different ways. (e.g., a host might be identified by an IP or MAC address, while a user might be identified by an email address)  Furthermore, even in the case where the type of the subject is known, there may be multiple ways by which a given subject may be identified.  For example, an account may be identified by an opaque identifier, an email address, a phone number, a JWT <spanx style="verb">iss</spanx> claim and <spanx style="verb">sub</spanx> claim, etc., depending on the nature and needs of the transmitter and receiver. Even within the context of a given transmitter and receiver relationship, it may be appropriate to identify different accounts in different ways, for example if some accounts only have email addresses associated with them while others only have phone numbers. Therefore it can be necessary to indicate within a SET the mechanism by which a subject is being identified.</t>

<t>To address this problem, this specification defines Subject Identifiers - JSON <xref target="RFC7159"/> objects containing information identifying a subject - and Identifier Formats - named sets of rules describing how to encode different kinds of subject identifying information (e.g., an email address, or an issuer and subject pair) as a Subject Identifier.</t>

<t>Below is a non-normative example of a Subject Identifier that identifies a subject by email address, using the Email Identifier Format.</t>

<figure title="Example: Subject Identifier using the Email Identifier Format" anchor="figexampleintro"><artwork><![CDATA[
{
  "format": "email",
  "email": "user@example.com",
}
]]></artwork></figure>

<t>Subject Identifiers are intended to be a general purpose mechanism for identifying subjects within JSON objects and their usage need not be limited to SETs.  Below is a non-normative example of a JWT that uses a Subject Identifier in the <spanx style="verb">sub_id</spanx> claim (defined in this specification) to identify the JWT Subject.</t>

<figure title="Example: JWT using a Subject Identifier with the sub_id claim" anchor="figexampleintro2"><artwork><![CDATA[
{
  "iss": "issuer.example.com",
  "sub_id": {
    "format": "phone_number",
    "phone_number": "+12065550100",
  },
}
]]></artwork></figure>

<t>Usage of Subject Identifiers also need not be limited to identifying JWT Subjects.  They are intended as a general purpose means of expressing identifying information in an unambiguous manner.  Below is a non-normative example of a SET containing a hypothetical security event describing the interception of a message, using Subject Identifiers to identify the sender, intended recipient, and interceptor.</t>

<figure title="Example: SET with an event payload containing multiple Subject Identifiers" anchor="figexampleintro3"><artwork><![CDATA[
{
  "iss": "issuer.example.com",
  "iat": 1508184845,
  "aud": "aud.example.com",
  "events": {
    "https://secevent.example.com/events/message-interception": {
      "from": {
        "format": "email",
        "email": "alice@example.com",
      },
      "to": {
        "format": "email",
        "email": "bob@example.com",
      },
      "interceptor": {
        "format": "email",
        "email": "eve@example.com",
      },
    },
  },
}

]]></artwork></figure>

</section>
<section anchor="conv" title="Notational Conventions">
<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”,
“SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “MAY”, and “OPTIONAL” in this
document are to be interpreted as described in <xref target="RFC2119"/>.</t>

<section anchor="defn" title="Definitions">
<t>This specification utilizes terminology defined in <xref target="RFC7159"/>, <xref target="RFC7519"/>, and <xref target="RFC8417"/>.</t>

<t>Within this specification, the terms “Subject” and “subject” refer generically to anything being identified via one or more pieces of information.  The term “JWT Subject” refers specifically to the to the subject of a JWT. (i.e., the subject that the JWT asserts claims about)</t>

</section>
</section>
<section anchor="sub-ids" title="Subject Identifiers">
<t>A Subject Identifier is a JSON <xref target="RFC7159"/> object whose contents may be used to identify a subject within some context.  An Identifier Format is a named definition of a set of information that may be used to identify a subject, and the rules for encoding that information as a Subject Identifier; they define the syntax and semantics of Subject Identifiers.  A Subject Identifier MUST conform to a specific Identifier Format, and MUST contain a <spanx style="verb">format</spanx> member whose value is the name of that Identifier Format.</t>

<t>Every Identifier Format MUST have a unique name registered in the IANA “Security Event Identifier Formats” registry established by <xref target="iana-formats"/>, or a Collision-Resistant Name as defined in <xref target="RFC7519"/>.  Identifier Formats that are expected to be used broadly by a variety of parties SHOULD be registered in the “Security Event Identifier Formats” registry.</t>

<t>An Identifier Format MAY describe more members than are strictly necessary to identify a subject, and MAY describe conditions under which those members are required, optional, or prohibited.  The <spanx style="verb">format</spanx> member is reserved for use as described in this specification; Identifier Formats MUST NOT declare any rules regarding the <spanx style="verb">format</spanx> member.</t>

<t>Every member within a Subject Identifier MUST match the rules specified for that member by this specification or by Subject Identifier’s Identifier Format.  A Subject Identifier MUST NOT contain any members prohibited or not described by its Identifier Format, and MUST contain all members required by its Identifier Format.</t>

<section anchor="identifier-formats-versus-principal-types" title="Identifier Formats versus Principal Types">
<t>Identifier Formats define how to encode identifying information for a subject.  They do not define the type or nature of the subject itself.  E.g., While the <spanx style="verb">email</spanx> Identifier Format declares that the value of the <spanx style="verb">email</spanx> member is an email address, a subject in a Security Event that is identified by an <spanx style="verb">email</spanx> Subject Identifier could be an end user who controls that email address, the mailbox itself, or anything else that the transmitter and receiver both understand to be associated with that email address.  Consequently Subject Identifiers remove ambiguity around how a subject is being identified, and how to parse an identifying structure, but do not remove ambiguity around how to resolve that identifier to a subject.  For example, consider a directory management API that allows callers to identify users and groups through both opaque unique identifiers and email addresses.  Such an API could use Subject Identifiers to disambiguate between which of these two types of identifiers is in use.  However, the API would have to determine whether the subject is a user or group via some other means, such as by querying a database, interpreting other parameters in the request, or inferring the type from the API contract.</t>

</section>
<section anchor="identifier-format-definitions" title="Identifier Format Definitions">

<t>The following Identifier Formats are registered in the IANA “Security Event Identifier Formats” registry established by <xref target="iana-formats"/>.</t>

<section anchor="sub-id-acct" title="Account Identifier Format">
<t>The Account Identifier Format identifies a subject using an account at a service provider, identified with an <spanx style="verb">acct</spanx> URI as defined in <xref target="RFC7565"/>.  Subject Identifiers of this type MUST contain a <spanx style="verb">uri</spanx> member whose value is the <spanx style="verb">acct</spanx> URI for the subject.  The <spanx style="verb">uri</spanx> member is REQUIRED and MUST NOT be null or empty.  The Account Identifier Format is identified by the name <spanx style="verb">account</spanx>.</t>

<t>Below is a non-normative example Subject Identifier for the Account Identifier Format:</t>

<figure title="Example: Subject Identifier for the Account Identifier Format" anchor="figexamplesubidaccount"><artwork><![CDATA[
{
  "format": "account",
  "uri": "acct:example.user@service.example.com",
}
]]></artwork></figure>

</section>
<section anchor="sub-id-email" title="Email Identifier Format">
<t>The Email Identifier Format identifies a subject using an email address.  Subject Identifiers of this type MUST contain an <spanx style="verb">email</spanx> member whose value is a string containing the email address of the subject, formatted as an <spanx style="verb">addr-spec</spanx> as defined in Section 3.4.1 of <xref target="RFC5322"/>. The <spanx style="verb">email</spanx> member is REQUIRED and MUST NOT be null or empty. The value of the <spanx style="verb">email</spanx> member SHOULD identify a mailbox to which email may be delivered, in accordance with <xref target="RFC5321"/>. The Email Identifier Format is identified by the name <spanx style="verb">email</spanx>.</t>

<t>Below is a non-normative example Subject Identifier for the Email Identifier Format:</t>

<figure title="Example: Subject Identifier for the Email Identifier Format" anchor="figexamplesubidemail"><artwork><![CDATA[
{
  "format": "email",
  "email": "user@example.com",
}
]]></artwork></figure>

<section anchor="email-canon" title="Email Canonicalization">
<t>Many email providers will treat multiple email addresses as equivalent. While the domain portion of an <xref target="RFC5322"/> email address is consistently treated as case-insensitive per <xref target="RFC1034"/>, some providers treat the local part of the email address as case-insensitive as well, and consider “user@example.com”, “User@example.com”, and “USER@example.com” as the same email address. This has led users to view these strings as equivalent, driving service providers to implement proprietary email canonicalization algorithms to ensure that email addresses entered by users resolve to the same canonical string. When receiving an Email Subject Identifier, the recipient SHOULD use their implementation’s canonicalization algorithm to resolve the email address to the same string used in their system.</t>

</section>
</section>
<section anchor="sub-id-phone" title="Phone Number Identifier Format">
<t>The Phone Number Identifier Format identifies a subject using a telephone number.  Subject Identifiers of this type MUST contain a <spanx style="verb">phone_number</spanx> member whose value is a string containing the full telephone number of the subject, including international dialing prefix, formatted according to <xref target="E164">E.164</xref>. The <spanx style="verb">phone_number</spanx> member is REQUIRED and MUST NOT be null or empty. The Phone Number Identifier Format is identified by the name <spanx style="verb">phone_number</spanx>.</t>

<t>Below is a non-normative example Subject Identifier for the Email Identifier Format:</t>

<figure title="Example: Subject Identifier for the Phone Number Identifier Format." anchor="figexamplesubidphone"><artwork><![CDATA[
{
  "format": "phone_number",
  "phone_number": "+12065550100",
}
]]></artwork></figure>

</section>
<section anchor="sub-id-iss-sub" title="Issuer and Subject Identifier Format">
<t>The Issuer and Subject Identifier Format identifies a subject using a pair of <spanx style="verb">iss</spanx> and <spanx style="verb">sub</spanx> members, analagous to how subjects are identified using the <spanx style="verb">iss</spanx> and <spanx style="verb">sub</spanx> claims in <xref target="OpenID.Core">OpenID Connect</xref> ID Tokens.  These members MUST follow the formats of the <spanx style="verb">iss</spanx> member and <spanx style="verb">sub</spanx> member defined by <xref target="RFC7519"/>, respectively.  Both the <spanx style="verb">iss</spanx> member and the <spanx style="verb">sub</spanx> member are REQUIRED and MUST NOT be null or empty. The Issuer and Subject Identifier Format is identified by the name <spanx style="verb">iss_sub</spanx>.</t>

<t>Below is a non-normative example Subject Identifier for the Issuer and Subject Identifier Format:</t>

<figure title="Example: Subject Identifier for the Issuer and Subject Identifier Format" anchor="figexamplesubidisssub"><artwork><![CDATA[
{
  "format": "iss_sub",
  "iss": "http://issuer.example.com/",
  "sub": "145234573",
}
]]></artwork></figure>

</section>
<section anchor="sub-id-aliases" title="Aliases Identifier Format">
<t>The Aliases Identifier Format describes a subject that is identified with a list of different Subject Identifiers. It is intended for use when a variety of identifiers have been shared with the party that will be interpreting the Subject Identifier, and it is unknown which of those identifiers they will recognize or support.  Subject Identifiers of this type MUST contain an <spanx style="verb">identifiers</spanx> member whose value is a JSON array containing one or more Subject Identifiers.  Each Subject Identifier in the array MUST identify the same entity.  The <spanx style="verb">identifiers</spanx> member is REQUIRED and MUST NOT be null or empty.  It MAY contain multiple instances of the same Identifier Format (e.g., multiple Email Subject Identifiers), but SHOULD NOT contain exact duplicates.  This type is identified by the name <spanx style="verb">aliases</spanx>.</t>

<t><spanx style="verb">alias</spanx> Subject Identifiers MUST NOT be nested; i.e., the <spanx style="verb">identifiers</spanx> member of an <spanx style="verb">alias</spanx> Subject Identifier MUST NOT contain a Subject Identifier of type <spanx style="verb">aliases</spanx>.</t>

<t>Below is a non-normative example Subject Identifier for the Aliases Identifier Format:</t>

<figure title="Example: Subject Identifier for the Aliases Identifier Format" anchor="figexamplesubididtoken"><artwork><![CDATA[
{
  "format": "aliases",
  "identifiers": [
    {
      "format": "email",
      "email": "user@example.com",
    },
    {
      "format": "phone_number",
      "phone_number": "+12065550100",
    },
    {
      "format": "email",
      "email": "user+qualifier@example.com",
    }
  ],
}
]]></artwork></figure>

</section>
</section>
</section>
<section anchor="jwt-claims" title="Subject Identifiers in JWTs">

<section anchor="jwt-claims-sub_id" title="“sub_id” Claim">
<t>The <spanx style="verb">sub</spanx> JWT Claim is defined in Section 4.1.2 of <xref target="RFC7519"/> as containing a string value, and therefore cannot contain a Subject Identifier (which is a JSON object) as its value.  This document defines the <spanx style="verb">sub_id</spanx> JWT Claim, in accordance with Section 4.2 of <xref target="RFC7519"/>, as a common claim that identifies the JWT Subject using a Subject Identifier.  When present, the value of this claim MUST be a Subject Identifier that identifies the subject of the JWT.  The <spanx style="verb">sub_id</spanx> claim MAY be included in a JWT, whether or not the <spanx style="verb">sub</spanx> claim is present.  When both the <spanx style="verb">sub</spanx> and <spanx style="verb">sub_id</spanx> claims are present in a JWT, they MUST identify the same subject, as a JWT has one and only one JWT Subject.</t>

<t>When processing a JWT with both <spanx style="verb">sub</spanx> and <spanx style="verb">sub_id</spanx> claims, implementations MUST NOT rely on both claims to determine the JWT Subject.  An implementation MAY attempt to determine the JWT Subject from one claim and fall back to using the other if it determines it does not understand the format of the first claim.  For example, an implementation may attempt to use <spanx style="verb">sub_id</spanx>, and fall back to using <spanx style="verb">sub</spanx> upon finding that <spanx style="verb">sub_id</spanx> contains a Subject Identifier whose type is not recognized by the implementation.</t>

<t>Below are non-normative examples of JWTs containing the <spanx style="verb">sub_id</spanx> claim:</t>

<figure title="Example: JWT containing a `sub_id` claim and no `sub` claim" anchor="figexamplejwtsubidemail"><artwork><![CDATA[
{
  "iss": "issuer.example.com",
  "sub_id": {
    "format": "email",
    "email": "user@example.com",
  },
}
]]></artwork></figure>

<figure title="Example: JWT where both the `sub` and `sub_id` claims identify the JWT Subject using the same identifier" anchor="figexamplejwtsamesubtype"><artwork><![CDATA[
{
  "iss": "issuer.example.com",
  "sub": "user@example.com",
  "sub_id": {
    "format": "email",
    "email": "user@example.com",
  },
}
]]></artwork></figure>

<figure title="Example: JWT where both the `sub` and `sub_id` claims identify the JWT Subject using different values of the same identifier type" anchor="figexamplejwtdiffsubvalues"><artwork><![CDATA[
{
  "iss": "issuer.example.com",
  "sub": "user@example.com",
  "sub_id": {
    "format": "email",
    "email": "elizabeth@example.com",
  },
}
]]></artwork></figure>

<figure title="Example: JWT where the `sub` and `sub_id` claims identify the JWT Subject via different types of identifiers" anchor="figexamplejwtdiffsubtype"><artwork><![CDATA[
{
  "iss": "issuer.example.com",
  "sub": "user@example.com",
  "sub_id": {
    "format": "account",
    "uri": "acct:example.user@service.example.com",
  },
}
]]></artwork></figure>

</section>
<section anchor="subid-and-isssub-subject-identifiers" title="“sub_id” and “iss_sub” Subject Identifiers">
<t>The <spanx style="verb">sub_id</spanx> claim MAY contain an <spanx style="verb">iss_sub</spanx> Subject Identifier.  In this case, the JWT’s <spanx style="verb">iss</spanx> claim and the Subject Identifier’s <spanx style="verb">iss</spanx> member MAY be different.  For example, in <xref target="OpenID.Core">OpenID Connect</xref> client may construct such a JWT when sending JWTs back to its OpenID Connect Identity Provider, in order to identify the JWT Subject using an identifier known to be understood by both parties.  Similarly, the JWT’s <spanx style="verb">sub</spanx> claim and the Subject Identifier’s <spanx style="verb">sub</spanx> member MAY be different.  For example, this may be used by an OpenID Connect client to communicate the JWT Subject’s local identifier at the client back to its Identity Provider.</t>

<t>Below are non-normative examples of a JWT where the <spanx style="verb">iss</spanx> claim and <spanx style="verb">iss</spanx> member within the <spanx style="verb">sub_id</spanx> claim are the same, and a JWT where they are different.</t>

<figure title="Example: JWT with a `iss_sub` Subject Identifier where JWT issuer and JWT Subject issuer are the same" anchor="figexamplejwtsameiss"><artwork><![CDATA[
{
  "iss": "issuer.example.com",
  "sub_id": {
    "format": "iss_sub",
    "iss": "issuer.example.com",
    "sub": "example_user",
  },
}
]]></artwork></figure>

<figure title="Example: JWT with an `iss_sub` Subject Identifier where the JWT issuer and JWT Subject issuer are different" anchor="figexamplejwtdiffiss"><artwork><![CDATA[
{
  "iss": "client.example.com",
  "sub_id": {
    "format": "iss_sub",
    "iss": "issuer.example.com",
    "sub": "example_user",
  },
}
]]></artwork></figure>

<figure title="Example: JWT with an `iss_sub` Subject Identifier where the JWT `iss` and `sub` claims differ from the JWT Subject's `iss` and `sub` members" anchor="figexamplejwtdiffisssub"><artwork><![CDATA[
{
  "iss": "client.example.com",
  "sub": "client_user",
  "sub_id": {
    "format": "iss_sub",
    "iss": "issuer.example.com",
    "sub": "example_user",
  },
}
]]></artwork></figure>

</section>
</section>
<section anchor="implementer" title="Considerations for Specifications that Define Identifier Formats">
<t>Identifier Format definitions MUST NOT make assertions or declarations regarding the subject being identified by the Subject Identifier (e.g., an Identifier Format cannot be defined as specifically identifying human end users), as such statements are outside the scope of Identifier Formats and Subject Identifiers, and expanding that scope for some Identifier Formats but not others would harm interoperability, as applications that depend on this expanded scope to disambiguate the subject type would be unable to use Identifier Formats that do not provide such rules.</t>

</section>
<section anchor="privacy" title="Privacy Considerations">

<section anchor="identifier-correlation" title="Identifier Correlation">
<t>The act of presenting two or more identifiers for a single subject together (e.g., within an <spanx style="verb">aliases</spanx> Subject Identifier, or via the <spanx style="verb">sub</spanx> and <spanx style="verb">sub_id</spanx> JWT claims) may communicate more information about the subject than was intended.  For example, the entity to which the identifiers are presented now knows that both identifiers relate to the same subject, and may be able to correlate additional data based on that.  When transmitting Subject Identifiers, the transmitter SHOULD take care that they are only transmitting multiple identifiers together when it is known that the recipient already knows that the identifiers are related (e.g., because they were previously sent to the recipient as claims in an OpenID Connect ID Token), or when correlation is essential to the use case.</t>

<t>The considerations described in Section 6 of <xref target="RFC8417"/> also apply when Subject Identifiers are used within SETs.  The considerations described in Section 12 of <xref target="RFC7519"/> also apply when Subject Identifiers are used within JWTs.</t>

</section>
</section>
<section anchor="security" title="Security Considerations">

<section anchor="confidentiality-and-integrity" title="Confidentiality and Integrity">
<t>This specification does not define any mechanism for ensuring the confidentiality or integrityi of a Subject Identifier.  Where such properties are required, implementations MUST use mechanisms provided by the containing format (e.g., integrity protecting SETs or JWTs using JWS <xref target="RFC7515"/>), or at the transport layer or other layer in the application stack (e.g., using TLS <xref target="RFC8446"/>).</t>

<t>Further considerations regarding confidentiality and integrity of SETs can be found in Section 5.1 of <xref target="RFC8417"/>.</t>

</section>
</section>
<section anchor="iana" title="IANA Considerations">

<section anchor="iana-formats" title="Security Event Identifier Formats Registry">
<t>This document defines Identifier Formats, for which IANA is asked to create and maintain a new registry titled “Security Event Identifier Formats”.  Initial values for the Security Event Identifier Formats registry are given in <xref target="sub-ids"/>.  Future assignments are to be made through the Expert Review registration policy <xref target="BCP26"/> and shall follow the template presented in <xref target="iana-formats-template"/>.</t>

<t>It is suggested that multiple Designated Experts be appointed who are able to represent the perspectives of different applications using this specification, in order to enable broadly informed review of registration decisions.  In cases where a registration decision could be perceived as creating a conflict of interest for a particular Expert, that Expert should defer to the judgment of the other Experts.</t>

<section anchor="registry-location" title="Registry Location">
<t>(This section to be removed by the RFC Editor before publication as an RFC.)</t>

<t>The authors recommend that the Identifier Formats registry be located at <spanx style="verb">https://www.iana.org/assignments/secevent/</spanx>.</t>

</section>
<section anchor="iana-formats-template" title="Registration Template">

<t><list style="hanging">
  <t hangText="Type Name"><vspace blankLines='0'/>
  The name of the Identifier Format, as described in <xref target="sub-ids"/>. The name MUST be an ASCII string consisting only of lower-case characters (“a” - “z”), digits (“0” - “9”), underscores (“_”), and hyphens (“-“), and SHOULD NOT exceed 20 characters in length.</t>
  <t hangText="Type Description"><vspace blankLines='0'/>
  A brief description of the Identifier Format.</t>
  <t hangText="Change Controller"><vspace blankLines='0'/>
  For types defined in documents published by the IETF or its working groups, list “IETF”.  For all other types, list the name of the party responsible for the registration.  Contact information such as mailing address, email address, or phone number may also be provided.</t>
  <t hangText="Defining Document(s)"><vspace blankLines='0'/>
  A reference to the document or documents that define the Identifier Format.  The definition MUST specify the name, format, and meaning of each member that may occur within a Subject Identifier of the defined type, as well as whether each member is optional, required, prohibited, or the circumstances under which the member may be optional, required, or prohibited. URIs that can be used to retrieve copies of each document SHOULD be included.</t>
</list></t>

</section>
<section anchor="iana-formats-init" title="Initial Registry Contents">

<section anchor="account-identifier-format" title="Account Identifier Format">

<t><list style="symbols">
  <t>Type Name: <spanx style="verb">account</spanx></t>
  <t>Type Description: Subject identifier based on <spanx style="verb">acct</spanx> URI.</t>
  <t>Change Controller: IETF</t>
  <t>Defining Document(s): <xref target="sub-ids"/> of this document.</t>
</list></t>

</section>
<section anchor="email-identifier-format" title="Email Identifier Format">

<t><list style="symbols">
  <t>Type Name: <spanx style="verb">email</spanx></t>
  <t>Type Description: Subject identifier based on email address.</t>
  <t>Change Controller: IETF</t>
  <t>Defining Document(s): <xref target="sub-ids"/> of this document.</t>
</list></t>

</section>
<section anchor="issuer-and-subject-identifier-format" title="Issuer and Subject Identifier Format">

<t><list style="symbols">
  <t>Type Name: <spanx style="verb">iss_sub</spanx></t>
  <t>Type Description: Subject identifier based on an issuer and subject.</t>
  <t>Change Controller: IETF</t>
  <t>Defining Document(s): <xref target="sub-ids"/> of this document.</t>
</list></t>

</section>
<section anchor="phone-number-identifier-format" title="Phone Number Identifier Format">

<t><list style="symbols">
  <t>Type Name: <spanx style="verb">phone_number</spanx></t>
  <t>Type Description: Subject identifier based on an phone number.</t>
  <t>Change Controller: IETF</t>
  <t>Defining Document(s): <xref target="sub-ids"/> of this document.</t>
</list></t>

</section>
<section anchor="aliases-identifier-format" title="Aliases Identifier Format">

<t><list style="symbols">
  <t>Type Name: <spanx style="verb">aliases</spanx></t>
  <t>Type Description: Subject identifier that groups together multiple different subject identifiers for the same subject.</t>
  <t>Change Controller: IETF</t>
  <t>Defining Document(s): <xref target="sub-ids"/> of this document.</t>
</list></t>

</section>
</section>
<section anchor="iana-formats-expert" title="Guidance for Expert Reviewers">
<t>The Expert Reviewer is expected to review the documentation referenced in a registration request to verify its completeness. The Expert Reviewer must base their decision to accept or reject the request on a fair and impartial assessment of the request. If the Expert Reviewer has a conflict of interest, such as being an author of a defining document referenced by the request, they must recuse themselves from the approval process for that request. In the case where a request is rejected, the Expert Reviewer should provide the requesting party with a written statement expressing the reason for rejection, and be prepared to cite any sources of information that went into that decision.</t>

<t>Identifier Formats need not be generally applicable and may be highly specific to a particular domain; it is expected that types may be registered for niche or industry-specific use cases. The Expert Reviewer should focus on whether the type is thoroughly documented, and whether its registration will promote or harm interoperability.  In most cases, the Expert Reviewer should not approve a request if the registration would contribute to confusion, or amount to a synonym for an existing type.</t>

</section>
</section>
<section anchor="json-web-token-claims-registration" title="JSON Web Token Claims Registration">
<t>This document defines the <spanx style="verb">sub_id</spanx> JWT Claim, which IANA is asked to register in the “JSON Web Token Claims” registry <xref target="IANA.JWT.Claims">IANA JSON Web Token Claims Registry</xref> established by <xref target="RFC7519"/>.</t>

<section anchor="registry-contents" title="Registry Contents">

<t><list style="symbols">
  <t>Claim Name: “sub_id”</t>
  <t>Claim Description: Subject Identifier</t>
  <t>Change Controller: IESG</t>
  <t>Specification Document(s): <xref target="jwt-claims-sub_id"/> of this document.</t>
</list></t>

</section>
</section>
</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference anchor='BCP26' target='https://www.rfc-editor.org/info/rfc8126'>
<front>
<title>Guidelines for Writing an IANA Considerations Section in RFCs</title>
<author fullname='M. Cotton' initials='M.' surname='Cotton'><organization/></author>
<author fullname='B. Leiba' initials='B.' surname='Leiba'><organization/></author>
<author fullname='T. Narten' initials='T.' surname='Narten'><organization/></author>
<date month='June' year='2017'/>
<abstract><t>Many protocols make use of points of extensibility that use constants to identify various protocol parameters.  To ensure that the values in these fields do not have conflicting uses and to promote interoperability, their allocations are often coordinated by a central record keeper.  For IETF protocols, that role is filled by the Internet Assigned Numbers Authority (IANA).</t><t>To make assignments in a given registry prudently, guidance describing the conditions under which new values should be assigned, as well as when and how modifications to existing values can be made, is needed.  This document defines a framework for the documentation of these guidelines by specification authors, in order to assure that the provided guidance for the IANA Considerations is clear and addresses the various issues that are likely in the operation of a registry.</t><t>This is the third edition of this document; it obsoletes RFC 5226.</t></abstract>
</front>
<seriesInfo name='BCP' value='26'/>
<seriesInfo name='RFC' value='8126'/>
<seriesInfo name='DOI' value='10.17487/RFC8126'/>
</reference>


<reference anchor="E164" target="http://www.itu.int/rec/T-REC-E.164-201011-I/en">
  <front>
    <title>The international public telecommunication numbering plan</title>
    <author >
      <organization>International Telecommunication Union</organization>
    </author>
    <date year="2010"/>
  </front>
</reference>
<reference anchor="IANA.JWT.Claims" target="http://www.iana.org/assignments/jwt">
  <front>
    <title>JSON Web Token Claims</title>
    <author >
      <organization>IANA</organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>




<reference anchor='RFC8417' target='https://www.rfc-editor.org/info/rfc8417'>
<front>
<title>Security Event Token (SET)</title>
<author fullname='P. Hunt' initials='P.' role='editor' surname='Hunt'><organization/></author>
<author fullname='M. Jones' initials='M.' surname='Jones'><organization/></author>
<author fullname='W. Denniss' initials='W.' surname='Denniss'><organization/></author>
<author fullname='M. Ansari' initials='M.' surname='Ansari'><organization/></author>
<date month='July' year='2018'/>
<abstract><t>This specification defines the Security Event Token (SET) data structure.  A SET describes statements of fact from the perspective of an issuer about a subject.  These statements of fact represent an event that occurred directly to or about a security subject, for example, a statement about the issuance or revocation of a token on behalf of a subject.  This specification is intended to enable representing security- and identity-related events.  A SET is a JSON Web Token (JWT), which can be optionally signed and/or encrypted. SETs can be distributed via protocols such as HTTP.</t></abstract>
</front>
<seriesInfo name='RFC' value='8417'/>
<seriesInfo name='DOI' value='10.17487/RFC8417'/>
</reference>



<reference anchor='RFC7519' target='https://www.rfc-editor.org/info/rfc7519'>
<front>
<title>JSON Web Token (JWT)</title>
<author fullname='M. Jones' initials='M.' surname='Jones'><organization/></author>
<author fullname='J. Bradley' initials='J.' surname='Bradley'><organization/></author>
<author fullname='N. Sakimura' initials='N.' surname='Sakimura'><organization/></author>
<date month='May' year='2015'/>
<abstract><t>JSON Web Token (JWT) is a compact, URL-safe means of representing claims to be transferred between two parties.  The claims in a JWT are encoded as a JSON object that is used as the payload of a JSON Web Signature (JWS) structure or as the plaintext of a JSON Web Encryption (JWE) structure, enabling the claims to be digitally signed or integrity protected with a Message Authentication Code (MAC) and/or encrypted.</t></abstract>
</front>
<seriesInfo name='RFC' value='7519'/>
<seriesInfo name='DOI' value='10.17487/RFC7519'/>
</reference>



<reference anchor='RFC7159' target='https://www.rfc-editor.org/info/rfc7159'>
<front>
<title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
<author fullname='T. Bray' initials='T.' role='editor' surname='Bray'><organization/></author>
<date month='March' year='2014'/>
<abstract><t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format.  It was derived from the ECMAScript Programming Language Standard.  JSON defines a small set of formatting rules for the portable representation of structured data.</t><t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t></abstract>
</front>
<seriesInfo name='RFC' value='7159'/>
<seriesInfo name='DOI' value='10.17487/RFC7159'/>
</reference>



<reference anchor='RFC2119' target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author fullname='S. Bradner' initials='S.' surname='Bradner'><organization/></author>
<date month='March' year='1997'/>
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference anchor='RFC7565' target='https://www.rfc-editor.org/info/rfc7565'>
<front>
<title>The 'acct' URI Scheme</title>
<author fullname='P. Saint-Andre' initials='P.' surname='Saint-Andre'><organization/></author>
<date month='May' year='2015'/>
<abstract><t>This document defines the 'acct' Uniform Resource Identifier (URI) scheme as a way to identify a user's account at a service provider, irrespective of the particular protocols that can be used to interact with the account.</t></abstract>
</front>
<seriesInfo name='RFC' value='7565'/>
<seriesInfo name='DOI' value='10.17487/RFC7565'/>
</reference>



<reference anchor='RFC5322' target='https://www.rfc-editor.org/info/rfc5322'>
<front>
<title>Internet Message Format</title>
<author fullname='P. Resnick' initials='P.' role='editor' surname='Resnick'><organization/></author>
<date month='October' year='2008'/>
<abstract><t>This document specifies the Internet Message Format (IMF), a syntax for text messages that are sent between computer users, within the framework of &quot;electronic mail&quot; messages.  This specification is a revision of Request For Comments (RFC) 2822, which itself superseded Request For Comments (RFC) 822, &quot;Standard for the Format of ARPA Internet Text Messages&quot;, updating it to reflect current practice and incorporating incremental changes that were specified in other RFCs.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5322'/>
<seriesInfo name='DOI' value='10.17487/RFC5322'/>
</reference>



<reference anchor='RFC5321' target='https://www.rfc-editor.org/info/rfc5321'>
<front>
<title>Simple Mail Transfer Protocol</title>
<author fullname='J. Klensin' initials='J.' surname='Klensin'><organization/></author>
<date month='October' year='2008'/>
<abstract><t>This document is a specification of the basic protocol for Internet electronic mail transport.  It consolidates, updates, and clarifies several previous documents, making all or parts of most of them obsolete.  It covers the SMTP extension mechanisms and best practices for the contemporary Internet, but does not provide details about particular extensions.  Although SMTP was designed as a mail transport and delivery protocol, this specification also contains information that is important to its use as a &quot;mail submission&quot; protocol for &quot;split-UA&quot; (User Agent) mail reading systems and mobile environments.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5321'/>
<seriesInfo name='DOI' value='10.17487/RFC5321'/>
</reference>




    </references>

    <references title='Informative References'>

<reference anchor="OpenID.Core" target="http://openid.net/specs/openid-connect-core-1_0.html">
  <front>
    <title>OpenID Connect Core 1.0</title>
    <author initials="N." surname="Sakimura" fullname="Nat Sakimura">
      <organization>Nomura Research Institute, Ltd.</organization>
    </author>
    <author initials="J." surname="Bradley" fullname="John Bradley">
      <organization>Ping Identity</organization>
    </author>
    <author initials="M." surname="Jones" fullname="Michael B. Jones">
      <organization>Microsoft</organization>
    </author>
    <author initials="B." surname="de Medeiros" fullname="Breno de Medeiros">
      <organization>Google</organization>
    </author>
    <author initials="C." surname="Mortimore" fullname="Chuck Mortimore">
      <organization>Salesforce</organization>
    </author>
    <date year="2014" month="November"/>
  </front>
</reference>




<reference anchor='RFC1034' target='https://www.rfc-editor.org/info/rfc1034'>
<front>
<title>Domain names - concepts and facilities</title>
<author fullname='P.V. Mockapetris' initials='P.V.' surname='Mockapetris'><organization/></author>
<date month='November' year='1987'/>
<abstract><t>This RFC is the revised basic definition of The Domain Name System.  It obsoletes RFC-882.  This memo describes the domain style names and their used for host address look up and electronic mail forwarding.  It discusses the clients and servers in the domain name system and the protocol used between them.</t></abstract>
</front>
<seriesInfo name='STD' value='13'/>
<seriesInfo name='RFC' value='1034'/>
<seriesInfo name='DOI' value='10.17487/RFC1034'/>
</reference>



<reference anchor='RFC7515' target='https://www.rfc-editor.org/info/rfc7515'>
<front>
<title>JSON Web Signature (JWS)</title>
<author fullname='M. Jones' initials='M.' surname='Jones'><organization/></author>
<author fullname='J. Bradley' initials='J.' surname='Bradley'><organization/></author>
<author fullname='N. Sakimura' initials='N.' surname='Sakimura'><organization/></author>
<date month='May' year='2015'/>
<abstract><t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures.  Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification.  Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t></abstract>
</front>
<seriesInfo name='RFC' value='7515'/>
<seriesInfo name='DOI' value='10.17487/RFC7515'/>
</reference>



<reference anchor='RFC8446' target='https://www.rfc-editor.org/info/rfc8446'>
<front>
<title>The Transport Layer Security (TLS) Protocol Version 1.3</title>
<author fullname='E. Rescorla' initials='E.' surname='Rescorla'><organization/></author>
<date month='August' year='2018'/>
<abstract><t>This document specifies version 1.3 of the Transport Layer Security (TLS) protocol.  TLS allows client/server applications to communicate over the Internet in a way that is designed to prevent eavesdropping, tampering, and message forgery.</t><t>This document updates RFCs 5705 and 6066, and obsoletes RFCs 5077, 5246, and 6961.  This document also specifies new requirements for TLS 1.2 implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='8446'/>
<seriesInfo name='DOI' value='10.17487/RFC8446'/>
</reference>




    </references>


<section numbered="no" anchor="acknowledgements" title="Acknowledgements">
<t>The authors would like to thank the members of the IETF Security Events working group, as well as those of the OpenID Shared Signals and Events Working Group, whose work provided the original basis for this document.</t>

</section>
<section numbered="no" anchor="change-log" title="Change Log">
<t>(This section to be removed by the RFC Editor before publication as an RFC.)</t>

<t>Draft 00 - AB - First draft</t>

<t>Draft 01 - AB:</t>

<t><list style="symbols">
  <t>Added reference to RFC 5322 for format of <spanx style="verb">email</spanx> claim.</t>
  <t>Renamed <spanx style="verb">iss_sub</spanx> type to <spanx style="verb">iss-sub</spanx>.</t>
  <t>Renamed <spanx style="verb">id_token_claims</spanx> type to <spanx style="verb">id-token-claims</spanx>.</t>
  <t>Added text specifying the nature of the subjects described by each type.</t>
</list></t>

<t>Draft 02 - AB:</t>

<t><list style="symbols">
  <t>Corrected format of phone numbers in examples.</t>
  <t>Updated author info.</t>
</list></t>

<t>Draft 03 - AB:</t>

<t><list style="symbols">
  <t>Added <spanx style="verb">account</spanx> type for <spanx style="verb">acct</spanx> URIs.</t>
  <t>Replaced <spanx style="verb">id-token-claims</spanx> type with <spanx style="verb">aliases</spanx> type.</t>
  <t>Added email canonicalization guidance.</t>
  <t>Updated semantics for <spanx style="verb">email</spanx>, <spanx style="verb">phone</spanx>, and <spanx style="verb">iss-sub</spanx> types.</t>
</list></t>

<t>Draft 04 - AB:</t>

<t><list style="symbols">
  <t>Added <spanx style="verb">sub_id</spanx> JWT Claim definition, guidance, examples.</t>
  <t>Added text prohibiting <spanx style="verb">aliases</spanx> nesting.</t>
  <t>Added privacy considerations for identifier correlation.</t>
</list></t>

<t>Draft 05 - AB:</t>

<t><list style="symbols">
  <t>Renamed the <spanx style="verb">phone</spanx> type to <spanx style="verb">phone-number</spanx> and its <spanx style="verb">phone</spanx> claim to <spanx style="verb">phone_number</spanx>.</t>
</list></t>

<t>Draft 06 - AB:</t>

<t><list style="symbols">
  <t>Replaced usage of the word “claim” to describe members of a Subject Identifier with the word “member”, in accordance with terminology in RFC7159.</t>
  <t>Renamed the <spanx style="verb">phone-number</spanx> type to <spanx style="verb">phone_number</spanx> and <spanx style="verb">iss-sub</spanx> to <spanx style="verb">iss_sub</spanx>.</t>
  <t>Added normative requirements limiting the use of both <spanx style="verb">sub</spanx> and <spanx style="verb">sub_id</spanx> claims together when processing a JWT.</t>
  <t>Clarified that identifier correlation may be acceptable when it is a core part of the use case.</t>
  <t>Replaced references to OIDF with IETF in IANA Considerations.</t>
  <t>Recommended the appointment of multiple Designated Experts, and a location for the Subject Identifier Types registry.</t>
  <t>Added “_” to list of allowed characters in the Type Name for Subject Identifier Types.</t>
  <t>Clarified that Subject Identifiers don’t provide confidentiality or integrity protection.</t>
  <t>Added references to SET, JWT privacy and security considerations.</t>
  <t>Added section describing the difference between subject identifier type and principal type that hopefully clarifies things and doesn’t just muddy the water further.</t>
</list></t>

<t>Draft 07 - AB:</t>

<t><list style="symbols">
  <t>Emphasized that the spec is about identifiers, not the things they identify:
  <list style="symbols">
      <t>Renamed “Subject Identifier Type” to “Identifier Format”.</t>
      <t>Renamed <spanx style="verb">subject_type</spanx> to <spanx style="verb">format</spanx>.</t>
      <t>Renamed “Security Event Subject Identifier Type Registry” to “Security Event Identifier Format Registry”.</t>
      <t>Added new section with guidance for specs defining Identifier Formats, with normative prohibition on formats that describe the subject itself, rather than the identifier.</t>
    </list></t>
  <t>Clarified the meaning of “subject”:
  <list style="symbols">
      <t>Defined “subject” as applying generically and “JWT Subject” as applying specifically to the subject of a JWT.</t>
      <t>Replaced most instances of the word “principal” with “subject”.</t>
    </list></t>
</list></t>

</section>


  </back>

<!-- ##markdown-source:
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

-->

</rfc>

